

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu May 26 09:25:09 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1718
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK5,global,class=CODE,delta=2
     7                           	psect	idataBIGRAM,global,class=CODE,delta=2
     8                           	psect	stringtext,global,class=STRCODE,delta=2
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,delta=2
    71                           	psect	text47,local,class=CODE,merge=1,delta=2
    72                           	psect	text48,local,class=CODE,merge=1,delta=2
    73                           	psect	text49,local,class=CODE,merge=1,delta=2
    74                           	psect	text50,local,class=CODE,merge=1,delta=2
    75                           	psect	text51,local,class=CODE,merge=1,delta=2
    76                           	psect	text52,local,class=CODE,merge=1,delta=2
    77                           	psect	text53,local,class=CODE,merge=1,delta=2
    78                           	psect	text54,local,class=CODE,merge=1,delta=2
    79                           	psect	text55,local,class=CODE,merge=1,delta=2
    80                           	psect	text56,local,class=CODE,merge=1,delta=2
    81                           	psect	text57,local,class=CODE,merge=1,delta=2
    82                           	psect	text58,local,class=CODE,merge=1,delta=2
    83                           	psect	text59,local,class=CODE,merge=1,delta=2
    84                           	psect	text60,local,class=CODE,merge=1,delta=2
    85                           	psect	text61,local,class=CODE,merge=1,delta=2
    86                           	psect	text62,local,class=CODE,merge=1,delta=2
    87                           	psect	text63,local,class=CODE,merge=1,delta=2
    88                           	psect	text64,local,class=CODE,merge=1,delta=2
    89                           	psect	text65,local,class=CODE,merge=1,delta=2
    90                           	psect	text66,local,class=CODE,merge=1,delta=2
    91                           	psect	text67,local,class=CODE,merge=1,delta=2
    92                           	psect	text68,local,class=CODE,merge=1,delta=2
    93                           	psect	text69,local,class=CODE,merge=1,delta=2
    94                           	psect	text70,local,class=CODE,merge=1,delta=2
    95                           	psect	text71,local,class=CODE,merge=1,delta=2
    96                           	psect	text72,local,class=CODE,merge=1,delta=2
    97                           	psect	text73,local,class=CODE,merge=1,delta=2
    98                           	psect	text74,local,class=CODE,merge=1,delta=2
    99                           	psect	text75,local,class=CODE,merge=1,delta=2
   100                           	psect	text76,local,class=CODE,merge=1,delta=2
   101                           	psect	text77,local,class=CODE,merge=1,delta=2
   102                           	psect	text78,local,class=CODE,merge=1,delta=2
   103                           	psect	text79,local,class=CODE,merge=1,delta=2
   104                           	psect	text80,local,class=CODE,merge=1,delta=2
   105                           	psect	text81,local,class=CODE,merge=1,delta=2
   106                           	psect	text82,local,class=CODE,merge=1,delta=2
   107                           	psect	text83,local,class=CODE,merge=1,delta=2
   108                           	psect	text84,local,class=CODE,merge=1,delta=2
   109                           	psect	text85,local,class=CODE,merge=1,delta=2
   110                           	psect	text86,local,class=CODE,merge=1,delta=2
   111                           	psect	text87,local,class=CODE,merge=1,delta=2
   112                           	psect	text88,local,class=CODE,merge=1,delta=2
   113                           	psect	text89,local,class=CODE,merge=1,delta=2
   114                           	psect	text90,local,class=CODE,merge=1,delta=2
   115                           	psect	text91,local,class=CODE,merge=1,delta=2
   116                           	psect	text92,local,class=CODE,merge=1,delta=2
   117                           	psect	text93,local,class=CODE,merge=1,delta=2
   118                           	psect	text94,local,class=CODE,merge=1,delta=2
   119                           	psect	text95,local,class=CODE,merge=1,delta=2
   120                           	psect	text96,local,class=CODE,merge=1,delta=2
   121                           	psect	text97,local,class=CODE,merge=1,delta=2
   122                           	psect	text98,local,class=CODE,merge=1,delta=2
   123                           	psect	text99,local,class=CODE,merge=1,delta=2
   124                           	psect	intentry,global,class=CODE,delta=2
   125                           	psect	text101,local,class=CODE,merge=1,delta=2
   126                           	psect	text102,local,class=CODE,merge=1,delta=2
   127                           	psect	text103,local,class=CODE,merge=1,delta=2
   128                           	psect	text104,local,class=CODE,merge=1,delta=2
   129                           	dabs	1,0xCA0,32
   130                           	dabs	1,0xC20,80
   131                           	dabs	1,0xBE8,8
   132                           	dabs	1,0x2778,0,_MainMenu
   133                           	dabs	1,0x7E,2
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0090                     	;# 
   166  0091                     	;# 
   167  0092                     	;# 
   168  0093                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0097                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009B                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  0111                     	;# 
   185  0112                     	;# 
   186  0113                     	;# 
   187  0114                     	;# 
   188  0115                     	;# 
   189  0116                     	;# 
   190  0117                     	;# 
   191  0118                     	;# 
   192  0119                     	;# 
   193  011A                     	;# 
   194  011B                     	;# 
   195  011B                     	;# 
   196  011C                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  018E                     	;# 
   200  0191                     	;# 
   201  0191                     	;# 
   202  0192                     	;# 
   203  0193                     	;# 
   204  0193                     	;# 
   205  0194                     	;# 
   206  0195                     	;# 
   207  0196                     	;# 
   208  0197                     	;# 
   209  0199                     	;# 
   210  0199                     	;# 
   211  0199                     	;# 
   212  019A                     	;# 
   213  019A                     	;# 
   214  019A                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019B                     	;# 
   218  019B                     	;# 
   219  019B                     	;# 
   220  019C                     	;# 
   221  019C                     	;# 
   222  019C                     	;# 
   223  019D                     	;# 
   224  019D                     	;# 
   225  019D                     	;# 
   226  019E                     	;# 
   227  019E                     	;# 
   228  019E                     	;# 
   229  019F                     	;# 
   230  019F                     	;# 
   231  019F                     	;# 
   232  019F                     	;# 
   233  019F                     	;# 
   234  020C                     	;# 
   235  020D                     	;# 
   236  020E                     	;# 
   237  0210                     	;# 
   238  0211                     	;# 
   239  0211                     	;# 
   240  0212                     	;# 
   241  0212                     	;# 
   242  0213                     	;# 
   243  0213                     	;# 
   244  0214                     	;# 
   245  0214                     	;# 
   246  0215                     	;# 
   247  0215                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0216                     	;# 
   251  0216                     	;# 
   252  0217                     	;# 
   253  0217                     	;# 
   254  028C                     	;# 
   255  028D                     	;# 
   256  028E                     	;# 
   257  0291                     	;# 
   258  0291                     	;# 
   259  0292                     	;# 
   260  0293                     	;# 
   261  0293                     	;# 
   262  0298                     	;# 
   263  0298                     	;# 
   264  0299                     	;# 
   265  029A                     	;# 
   266  029A                     	;# 
   267  029E                     	;# 
   268  030C                     	;# 
   269  030D                     	;# 
   270  030E                     	;# 
   271  038C                     	;# 
   272  038D                     	;# 
   273  038E                     	;# 
   274  0390                     	;# 
   275  0391                     	;# 
   276  0392                     	;# 
   277  0393                     	;# 
   278  0394                     	;# 
   279  0395                     	;# 
   280  0396                     	;# 
   281  0397                     	;# 
   282  0398                     	;# 
   283  0399                     	;# 
   284  039D                     	;# 
   285  039E                     	;# 
   286  039F                     	;# 
   287  0415                     	;# 
   288  0416                     	;# 
   289  0417                     	;# 
   290  041C                     	;# 
   291  041D                     	;# 
   292  041E                     	;# 
   293  0498                     	;# 
   294  0498                     	;# 
   295  0499                     	;# 
   296  049A                     	;# 
   297  049B                     	;# 
   298  049B                     	;# 
   299  049C                     	;# 
   300  049D                     	;# 
   301  049E                     	;# 
   302  049F                     	;# 
   303  0511                     	;# 
   304  0515                     	;# 
   305  0617                     	;# 
   306  0618                     	;# 
   307  0619                     	;# 
   308  0619                     	;# 
   309  061A                     	;# 
   310  061B                     	;# 
   311  061C                     	;# 
   312  061C                     	;# 
   313  0691                     	;# 
   314  0692                     	;# 
   315  0693                     	;# 
   316  0694                     	;# 
   317  0695                     	;# 
   318  0696                     	;# 
   319  0697                     	;# 
   320  0698                     	;# 
   321  0699                     	;# 
   322  069A                     	;# 
   323  069B                     	;# 
   324  069C                     	;# 
   325  069D                     	;# 
   326  069E                     	;# 
   327  069F                     	;# 
   328  0E0F                     	;# 
   329  0E10                     	;# 
   330  0E11                     	;# 
   331  0E12                     	;# 
   332  0E13                     	;# 
   333  0E14                     	;# 
   334  0E15                     	;# 
   335  0E17                     	;# 
   336  0E20                     	;# 
   337  0E21                     	;# 
   338  0E22                     	;# 
   339  0E24                     	;# 
   340  0E25                     	;# 
   341  0E28                     	;# 
   342  0E29                     	;# 
   343  0E2A                     	;# 
   344  0E2B                     	;# 
   345  0E90                     	;# 
   346  0E91                     	;# 
   347  0E92                     	;# 
   348  0E93                     	;# 
   349  0E94                     	;# 
   350  0E95                     	;# 
   351  0E96                     	;# 
   352  0E97                     	;# 
   353  0E98                     	;# 
   354  0E99                     	;# 
   355  0E9A                     	;# 
   356  0E9B                     	;# 
   357  0E9C                     	;# 
   358  0E9D                     	;# 
   359  0E9E                     	;# 
   360  0E9F                     	;# 
   361  0EA0                     	;# 
   362  0EA1                     	;# 
   363  0EA2                     	;# 
   364  0EA3                     	;# 
   365  0EA4                     	;# 
   366  0EA5                     	;# 
   367  0EA6                     	;# 
   368  0EA7                     	;# 
   369  0F0F                     	;# 
   370  0F10                     	;# 
   371  0F11                     	;# 
   372  0F12                     	;# 
   373  0F13                     	;# 
   374  0F14                     	;# 
   375  0F15                     	;# 
   376  0F16                     	;# 
   377  0F17                     	;# 
   378  0F18                     	;# 
   379  0F19                     	;# 
   380  0F1A                     	;# 
   381  0F1B                     	;# 
   382  0F1C                     	;# 
   383  0F1D                     	;# 
   384  0F1E                     	;# 
   385  0F1F                     	;# 
   386  0F20                     	;# 
   387  0F21                     	;# 
   388  0F22                     	;# 
   389  0F23                     	;# 
   390  0F24                     	;# 
   391  0F25                     	;# 
   392  0F26                     	;# 
   393  0F27                     	;# 
   394  0F28                     	;# 
   395  0F29                     	;# 
   396  0F2A                     	;# 
   397  0F2B                     	;# 
   398  0F2C                     	;# 
   399  0F2D                     	;# 
   400  0F2E                     	;# 
   401  0F2F                     	;# 
   402  0F30                     	;# 
   403  0F31                     	;# 
   404  0F32                     	;# 
   405  0F33                     	;# 
   406  0F34                     	;# 
   407  0F35                     	;# 
   408  0F36                     	;# 
   409  0F37                     	;# 
   410  0FE4                     	;# 
   411  0FE5                     	;# 
   412  0FE6                     	;# 
   413  0FE7                     	;# 
   414  0FE8                     	;# 
   415  0FE9                     	;# 
   416  0FEA                     	;# 
   417  0FEB                     	;# 
   418  0FED                     	;# 
   419  0FEE                     	;# 
   420  0FEF                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  0010                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0013                     	;# 
   440  0015                     	;# 
   441  0016                     	;# 
   442  0016                     	;# 
   443  0017                     	;# 
   444  0018                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  008C                     	;# 
   450  008D                     	;# 
   451  008E                     	;# 
   452  0090                     	;# 
   453  0091                     	;# 
   454  0092                     	;# 
   455  0093                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  010C                     	;# 
   469  010D                     	;# 
   470  010E                     	;# 
   471  0111                     	;# 
   472  0112                     	;# 
   473  0113                     	;# 
   474  0114                     	;# 
   475  0115                     	;# 
   476  0116                     	;# 
   477  0117                     	;# 
   478  0118                     	;# 
   479  0119                     	;# 
   480  011A                     	;# 
   481  011B                     	;# 
   482  011B                     	;# 
   483  011C                     	;# 
   484  018C                     	;# 
   485  018D                     	;# 
   486  018E                     	;# 
   487  0191                     	;# 
   488  0191                     	;# 
   489  0192                     	;# 
   490  0193                     	;# 
   491  0193                     	;# 
   492  0194                     	;# 
   493  0195                     	;# 
   494  0196                     	;# 
   495  0197                     	;# 
   496  0199                     	;# 
   497  0199                     	;# 
   498  0199                     	;# 
   499  019A                     	;# 
   500  019A                     	;# 
   501  019A                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019C                     	;# 
   508  019C                     	;# 
   509  019C                     	;# 
   510  019D                     	;# 
   511  019D                     	;# 
   512  019D                     	;# 
   513  019E                     	;# 
   514  019E                     	;# 
   515  019E                     	;# 
   516  019F                     	;# 
   517  019F                     	;# 
   518  019F                     	;# 
   519  019F                     	;# 
   520  019F                     	;# 
   521  020C                     	;# 
   522  020D                     	;# 
   523  020E                     	;# 
   524  0210                     	;# 
   525  0211                     	;# 
   526  0211                     	;# 
   527  0212                     	;# 
   528  0212                     	;# 
   529  0213                     	;# 
   530  0213                     	;# 
   531  0214                     	;# 
   532  0214                     	;# 
   533  0215                     	;# 
   534  0215                     	;# 
   535  0215                     	;# 
   536  0215                     	;# 
   537  0216                     	;# 
   538  0216                     	;# 
   539  0217                     	;# 
   540  0217                     	;# 
   541  028C                     	;# 
   542  028D                     	;# 
   543  028E                     	;# 
   544  0291                     	;# 
   545  0291                     	;# 
   546  0292                     	;# 
   547  0293                     	;# 
   548  0293                     	;# 
   549  0298                     	;# 
   550  0298                     	;# 
   551  0299                     	;# 
   552  029A                     	;# 
   553  029A                     	;# 
   554  029E                     	;# 
   555  030C                     	;# 
   556  030D                     	;# 
   557  030E                     	;# 
   558  038C                     	;# 
   559  038D                     	;# 
   560  038E                     	;# 
   561  0390                     	;# 
   562  0391                     	;# 
   563  0392                     	;# 
   564  0393                     	;# 
   565  0394                     	;# 
   566  0395                     	;# 
   567  0396                     	;# 
   568  0397                     	;# 
   569  0398                     	;# 
   570  0399                     	;# 
   571  039D                     	;# 
   572  039E                     	;# 
   573  039F                     	;# 
   574  0415                     	;# 
   575  0416                     	;# 
   576  0417                     	;# 
   577  041C                     	;# 
   578  041D                     	;# 
   579  041E                     	;# 
   580  0498                     	;# 
   581  0498                     	;# 
   582  0499                     	;# 
   583  049A                     	;# 
   584  049B                     	;# 
   585  049B                     	;# 
   586  049C                     	;# 
   587  049D                     	;# 
   588  049E                     	;# 
   589  049F                     	;# 
   590  0511                     	;# 
   591  0515                     	;# 
   592  0617                     	;# 
   593  0618                     	;# 
   594  0619                     	;# 
   595  0619                     	;# 
   596  061A                     	;# 
   597  061B                     	;# 
   598  061C                     	;# 
   599  061C                     	;# 
   600  0691                     	;# 
   601  0692                     	;# 
   602  0693                     	;# 
   603  0694                     	;# 
   604  0695                     	;# 
   605  0696                     	;# 
   606  0697                     	;# 
   607  0698                     	;# 
   608  0699                     	;# 
   609  069A                     	;# 
   610  069B                     	;# 
   611  069C                     	;# 
   612  069D                     	;# 
   613  069E                     	;# 
   614  069F                     	;# 
   615  0E0F                     	;# 
   616  0E10                     	;# 
   617  0E11                     	;# 
   618  0E12                     	;# 
   619  0E13                     	;# 
   620  0E14                     	;# 
   621  0E15                     	;# 
   622  0E17                     	;# 
   623  0E20                     	;# 
   624  0E21                     	;# 
   625  0E22                     	;# 
   626  0E24                     	;# 
   627  0E25                     	;# 
   628  0E28                     	;# 
   629  0E29                     	;# 
   630  0E2A                     	;# 
   631  0E2B                     	;# 
   632  0E90                     	;# 
   633  0E91                     	;# 
   634  0E92                     	;# 
   635  0E93                     	;# 
   636  0E94                     	;# 
   637  0E95                     	;# 
   638  0E96                     	;# 
   639  0E97                     	;# 
   640  0E98                     	;# 
   641  0E99                     	;# 
   642  0E9A                     	;# 
   643  0E9B                     	;# 
   644  0E9C                     	;# 
   645  0E9D                     	;# 
   646  0E9E                     	;# 
   647  0E9F                     	;# 
   648  0EA0                     	;# 
   649  0EA1                     	;# 
   650  0EA2                     	;# 
   651  0EA3                     	;# 
   652  0EA4                     	;# 
   653  0EA5                     	;# 
   654  0EA6                     	;# 
   655  0EA7                     	;# 
   656  0F0F                     	;# 
   657  0F10                     	;# 
   658  0F11                     	;# 
   659  0F12                     	;# 
   660  0F13                     	;# 
   661  0F14                     	;# 
   662  0F15                     	;# 
   663  0F16                     	;# 
   664  0F17                     	;# 
   665  0F18                     	;# 
   666  0F19                     	;# 
   667  0F1A                     	;# 
   668  0F1B                     	;# 
   669  0F1C                     	;# 
   670  0F1D                     	;# 
   671  0F1E                     	;# 
   672  0F1F                     	;# 
   673  0F20                     	;# 
   674  0F21                     	;# 
   675  0F22                     	;# 
   676  0F23                     	;# 
   677  0F24                     	;# 
   678  0F25                     	;# 
   679  0F26                     	;# 
   680  0F27                     	;# 
   681  0F28                     	;# 
   682  0F29                     	;# 
   683  0F2A                     	;# 
   684  0F2B                     	;# 
   685  0F2C                     	;# 
   686  0F2D                     	;# 
   687  0F2E                     	;# 
   688  0F2F                     	;# 
   689  0F30                     	;# 
   690  0F31                     	;# 
   691  0F32                     	;# 
   692  0F33                     	;# 
   693  0F34                     	;# 
   694  0F35                     	;# 
   695  0F36                     	;# 
   696  0F37                     	;# 
   697  0FE4                     	;# 
   698  0FE5                     	;# 
   699  0FE6                     	;# 
   700  0FE7                     	;# 
   701  0FE8                     	;# 
   702  0FE9                     	;# 
   703  0FEA                     	;# 
   704  0FEB                     	;# 
   705  0FED                     	;# 
   706  0FEE                     	;# 
   707  0FEF                     	;# 
   708  0000                     	;# 
   709  0001                     	;# 
   710  0002                     	;# 
   711  0003                     	;# 
   712  0004                     	;# 
   713  0005                     	;# 
   714  0006                     	;# 
   715  0007                     	;# 
   716  0008                     	;# 
   717  0009                     	;# 
   718  000A                     	;# 
   719  000B                     	;# 
   720  000C                     	;# 
   721  000D                     	;# 
   722  000E                     	;# 
   723  0010                     	;# 
   724  0011                     	;# 
   725  0012                     	;# 
   726  0013                     	;# 
   727  0015                     	;# 
   728  0016                     	;# 
   729  0016                     	;# 
   730  0017                     	;# 
   731  0018                     	;# 
   732  0019                     	;# 
   733  001A                     	;# 
   734  001B                     	;# 
   735  001C                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  008E                     	;# 
   739  0090                     	;# 
   740  0091                     	;# 
   741  0092                     	;# 
   742  0093                     	;# 
   743  0095                     	;# 
   744  0096                     	;# 
   745  0097                     	;# 
   746  0098                     	;# 
   747  0099                     	;# 
   748  009A                     	;# 
   749  009B                     	;# 
   750  009B                     	;# 
   751  009C                     	;# 
   752  009D                     	;# 
   753  009E                     	;# 
   754  009F                     	;# 
   755  010C                     	;# 
   756  010D                     	;# 
   757  010E                     	;# 
   758  0111                     	;# 
   759  0112                     	;# 
   760  0113                     	;# 
   761  0114                     	;# 
   762  0115                     	;# 
   763  0116                     	;# 
   764  0117                     	;# 
   765  0118                     	;# 
   766  0119                     	;# 
   767  011A                     	;# 
   768  011B                     	;# 
   769  011B                     	;# 
   770  011C                     	;# 
   771  018C                     	;# 
   772  018D                     	;# 
   773  018E                     	;# 
   774  0191                     	;# 
   775  0191                     	;# 
   776  0192                     	;# 
   777  0193                     	;# 
   778  0193                     	;# 
   779  0194                     	;# 
   780  0195                     	;# 
   781  0196                     	;# 
   782  0197                     	;# 
   783  0199                     	;# 
   784  0199                     	;# 
   785  0199                     	;# 
   786  019A                     	;# 
   787  019A                     	;# 
   788  019A                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019B                     	;# 
   793  019B                     	;# 
   794  019C                     	;# 
   795  019C                     	;# 
   796  019C                     	;# 
   797  019D                     	;# 
   798  019D                     	;# 
   799  019D                     	;# 
   800  019E                     	;# 
   801  019E                     	;# 
   802  019E                     	;# 
   803  019F                     	;# 
   804  019F                     	;# 
   805  019F                     	;# 
   806  019F                     	;# 
   807  019F                     	;# 
   808  020C                     	;# 
   809  020D                     	;# 
   810  020E                     	;# 
   811  0210                     	;# 
   812  0211                     	;# 
   813  0211                     	;# 
   814  0212                     	;# 
   815  0212                     	;# 
   816  0213                     	;# 
   817  0213                     	;# 
   818  0214                     	;# 
   819  0214                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0215                     	;# 
   824  0216                     	;# 
   825  0216                     	;# 
   826  0217                     	;# 
   827  0217                     	;# 
   828  028C                     	;# 
   829  028D                     	;# 
   830  028E                     	;# 
   831  0291                     	;# 
   832  0291                     	;# 
   833  0292                     	;# 
   834  0293                     	;# 
   835  0293                     	;# 
   836  0298                     	;# 
   837  0298                     	;# 
   838  0299                     	;# 
   839  029A                     	;# 
   840  029A                     	;# 
   841  029E                     	;# 
   842  030C                     	;# 
   843  030D                     	;# 
   844  030E                     	;# 
   845  038C                     	;# 
   846  038D                     	;# 
   847  038E                     	;# 
   848  0390                     	;# 
   849  0391                     	;# 
   850  0392                     	;# 
   851  0393                     	;# 
   852  0394                     	;# 
   853  0395                     	;# 
   854  0396                     	;# 
   855  0397                     	;# 
   856  0398                     	;# 
   857  0399                     	;# 
   858  039D                     	;# 
   859  039E                     	;# 
   860  039F                     	;# 
   861  0415                     	;# 
   862  0416                     	;# 
   863  0417                     	;# 
   864  041C                     	;# 
   865  041D                     	;# 
   866  041E                     	;# 
   867  0498                     	;# 
   868  0498                     	;# 
   869  0499                     	;# 
   870  049A                     	;# 
   871  049B                     	;# 
   872  049B                     	;# 
   873  049C                     	;# 
   874  049D                     	;# 
   875  049E                     	;# 
   876  049F                     	;# 
   877  0511                     	;# 
   878  0515                     	;# 
   879  0617                     	;# 
   880  0618                     	;# 
   881  0619                     	;# 
   882  0619                     	;# 
   883  061A                     	;# 
   884  061B                     	;# 
   885  061C                     	;# 
   886  061C                     	;# 
   887  0691                     	;# 
   888  0692                     	;# 
   889  0693                     	;# 
   890  0694                     	;# 
   891  0695                     	;# 
   892  0696                     	;# 
   893  0697                     	;# 
   894  0698                     	;# 
   895  0699                     	;# 
   896  069A                     	;# 
   897  069B                     	;# 
   898  069C                     	;# 
   899  069D                     	;# 
   900  069E                     	;# 
   901  069F                     	;# 
   902  0E0F                     	;# 
   903  0E10                     	;# 
   904  0E11                     	;# 
   905  0E12                     	;# 
   906  0E13                     	;# 
   907  0E14                     	;# 
   908  0E15                     	;# 
   909  0E17                     	;# 
   910  0E20                     	;# 
   911  0E21                     	;# 
   912  0E22                     	;# 
   913  0E24                     	;# 
   914  0E25                     	;# 
   915  0E28                     	;# 
   916  0E29                     	;# 
   917  0E2A                     	;# 
   918  0E2B                     	;# 
   919  0E90                     	;# 
   920  0E91                     	;# 
   921  0E92                     	;# 
   922  0E93                     	;# 
   923  0E94                     	;# 
   924  0E95                     	;# 
   925  0E96                     	;# 
   926  0E97                     	;# 
   927  0E98                     	;# 
   928  0E99                     	;# 
   929  0E9A                     	;# 
   930  0E9B                     	;# 
   931  0E9C                     	;# 
   932  0E9D                     	;# 
   933  0E9E                     	;# 
   934  0E9F                     	;# 
   935  0EA0                     	;# 
   936  0EA1                     	;# 
   937  0EA2                     	;# 
   938  0EA3                     	;# 
   939  0EA4                     	;# 
   940  0EA5                     	;# 
   941  0EA6                     	;# 
   942  0EA7                     	;# 
   943  0F0F                     	;# 
   944  0F10                     	;# 
   945  0F11                     	;# 
   946  0F12                     	;# 
   947  0F13                     	;# 
   948  0F14                     	;# 
   949  0F15                     	;# 
   950  0F16                     	;# 
   951  0F17                     	;# 
   952  0F18                     	;# 
   953  0F19                     	;# 
   954  0F1A                     	;# 
   955  0F1B                     	;# 
   956  0F1C                     	;# 
   957  0F1D                     	;# 
   958  0F1E                     	;# 
   959  0F1F                     	;# 
   960  0F20                     	;# 
   961  0F21                     	;# 
   962  0F22                     	;# 
   963  0F23                     	;# 
   964  0F24                     	;# 
   965  0F25                     	;# 
   966  0F26                     	;# 
   967  0F27                     	;# 
   968  0F28                     	;# 
   969  0F29                     	;# 
   970  0F2A                     	;# 
   971  0F2B                     	;# 
   972  0F2C                     	;# 
   973  0F2D                     	;# 
   974  0F2E                     	;# 
   975  0F2F                     	;# 
   976  0F30                     	;# 
   977  0F31                     	;# 
   978  0F32                     	;# 
   979  0F33                     	;# 
   980  0F34                     	;# 
   981  0F35                     	;# 
   982  0F36                     	;# 
   983  0F37                     	;# 
   984  0FE4                     	;# 
   985  0FE5                     	;# 
   986  0FE6                     	;# 
   987  0FE7                     	;# 
   988  0FE8                     	;# 
   989  0FE9                     	;# 
   990  0FEA                     	;# 
   991  0FEB                     	;# 
   992  0FED                     	;# 
   993  0FEE                     	;# 
   994  0FEF                     	;# 
   995  0000                     	;# 
   996  0001                     	;# 
   997  0002                     	;# 
   998  0003                     	;# 
   999  0004                     	;# 
  1000  0005                     	;# 
  1001  0006                     	;# 
  1002  0007                     	;# 
  1003  0008                     	;# 
  1004  0009                     	;# 
  1005  000A                     	;# 
  1006  000B                     	;# 
  1007  000C                     	;# 
  1008  000D                     	;# 
  1009  000E                     	;# 
  1010  0010                     	;# 
  1011  0011                     	;# 
  1012  0012                     	;# 
  1013  0013                     	;# 
  1014  0015                     	;# 
  1015  0016                     	;# 
  1016  0016                     	;# 
  1017  0017                     	;# 
  1018  0018                     	;# 
  1019  0019                     	;# 
  1020  001A                     	;# 
  1021  001B                     	;# 
  1022  001C                     	;# 
  1023  008C                     	;# 
  1024  008D                     	;# 
  1025  008E                     	;# 
  1026  0090                     	;# 
  1027  0091                     	;# 
  1028  0092                     	;# 
  1029  0093                     	;# 
  1030  0095                     	;# 
  1031  0096                     	;# 
  1032  0097                     	;# 
  1033  0098                     	;# 
  1034  0099                     	;# 
  1035  009A                     	;# 
  1036  009B                     	;# 
  1037  009B                     	;# 
  1038  009C                     	;# 
  1039  009D                     	;# 
  1040  009E                     	;# 
  1041  009F                     	;# 
  1042  010C                     	;# 
  1043  010D                     	;# 
  1044  010E                     	;# 
  1045  0111                     	;# 
  1046  0112                     	;# 
  1047  0113                     	;# 
  1048  0114                     	;# 
  1049  0115                     	;# 
  1050  0116                     	;# 
  1051  0117                     	;# 
  1052  0118                     	;# 
  1053  0119                     	;# 
  1054  011A                     	;# 
  1055  011B                     	;# 
  1056  011B                     	;# 
  1057  011C                     	;# 
  1058  018C                     	;# 
  1059  018D                     	;# 
  1060  018E                     	;# 
  1061  0191                     	;# 
  1062  0191                     	;# 
  1063  0192                     	;# 
  1064  0193                     	;# 
  1065  0193                     	;# 
  1066  0194                     	;# 
  1067  0195                     	;# 
  1068  0196                     	;# 
  1069  0197                     	;# 
  1070  0199                     	;# 
  1071  0199                     	;# 
  1072  0199                     	;# 
  1073  019A                     	;# 
  1074  019A                     	;# 
  1075  019A                     	;# 
  1076  019B                     	;# 
  1077  019B                     	;# 
  1078  019B                     	;# 
  1079  019B                     	;# 
  1080  019B                     	;# 
  1081  019C                     	;# 
  1082  019C                     	;# 
  1083  019C                     	;# 
  1084  019D                     	;# 
  1085  019D                     	;# 
  1086  019D                     	;# 
  1087  019E                     	;# 
  1088  019E                     	;# 
  1089  019E                     	;# 
  1090  019F                     	;# 
  1091  019F                     	;# 
  1092  019F                     	;# 
  1093  019F                     	;# 
  1094  019F                     	;# 
  1095  020C                     	;# 
  1096  020D                     	;# 
  1097  020E                     	;# 
  1098  0210                     	;# 
  1099  0211                     	;# 
  1100  0211                     	;# 
  1101  0212                     	;# 
  1102  0212                     	;# 
  1103  0213                     	;# 
  1104  0213                     	;# 
  1105  0214                     	;# 
  1106  0214                     	;# 
  1107  0215                     	;# 
  1108  0215                     	;# 
  1109  0215                     	;# 
  1110  0215                     	;# 
  1111  0216                     	;# 
  1112  0216                     	;# 
  1113  0217                     	;# 
  1114  0217                     	;# 
  1115  028C                     	;# 
  1116  028D                     	;# 
  1117  028E                     	;# 
  1118  0291                     	;# 
  1119  0291                     	;# 
  1120  0292                     	;# 
  1121  0293                     	;# 
  1122  0293                     	;# 
  1123  0298                     	;# 
  1124  0298                     	;# 
  1125  0299                     	;# 
  1126  029A                     	;# 
  1127  029A                     	;# 
  1128  029E                     	;# 
  1129  030C                     	;# 
  1130  030D                     	;# 
  1131  030E                     	;# 
  1132  038C                     	;# 
  1133  038D                     	;# 
  1134  038E                     	;# 
  1135  0390                     	;# 
  1136  0391                     	;# 
  1137  0392                     	;# 
  1138  0393                     	;# 
  1139  0394                     	;# 
  1140  0395                     	;# 
  1141  0396                     	;# 
  1142  0397                     	;# 
  1143  0398                     	;# 
  1144  0399                     	;# 
  1145  039D                     	;# 
  1146  039E                     	;# 
  1147  039F                     	;# 
  1148  0415                     	;# 
  1149  0416                     	;# 
  1150  0417                     	;# 
  1151  041C                     	;# 
  1152  041D                     	;# 
  1153  041E                     	;# 
  1154  0498                     	;# 
  1155  0498                     	;# 
  1156  0499                     	;# 
  1157  049A                     	;# 
  1158  049B                     	;# 
  1159  049B                     	;# 
  1160  049C                     	;# 
  1161  049D                     	;# 
  1162  049E                     	;# 
  1163  049F                     	;# 
  1164  0511                     	;# 
  1165  0515                     	;# 
  1166  0617                     	;# 
  1167  0618                     	;# 
  1168  0619                     	;# 
  1169  0619                     	;# 
  1170  061A                     	;# 
  1171  061B                     	;# 
  1172  061C                     	;# 
  1173  061C                     	;# 
  1174  0691                     	;# 
  1175  0692                     	;# 
  1176  0693                     	;# 
  1177  0694                     	;# 
  1178  0695                     	;# 
  1179  0696                     	;# 
  1180  0697                     	;# 
  1181  0698                     	;# 
  1182  0699                     	;# 
  1183  069A                     	;# 
  1184  069B                     	;# 
  1185  069C                     	;# 
  1186  069D                     	;# 
  1187  069E                     	;# 
  1188  069F                     	;# 
  1189  0E0F                     	;# 
  1190  0E10                     	;# 
  1191  0E11                     	;# 
  1192  0E12                     	;# 
  1193  0E13                     	;# 
  1194  0E14                     	;# 
  1195  0E15                     	;# 
  1196  0E17                     	;# 
  1197  0E20                     	;# 
  1198  0E21                     	;# 
  1199  0E22                     	;# 
  1200  0E24                     	;# 
  1201  0E25                     	;# 
  1202  0E28                     	;# 
  1203  0E29                     	;# 
  1204  0E2A                     	;# 
  1205  0E2B                     	;# 
  1206  0E90                     	;# 
  1207  0E91                     	;# 
  1208  0E92                     	;# 
  1209  0E93                     	;# 
  1210  0E94                     	;# 
  1211  0E95                     	;# 
  1212  0E96                     	;# 
  1213  0E97                     	;# 
  1214  0E98                     	;# 
  1215  0E99                     	;# 
  1216  0E9A                     	;# 
  1217  0E9B                     	;# 
  1218  0E9C                     	;# 
  1219  0E9D                     	;# 
  1220  0E9E                     	;# 
  1221  0E9F                     	;# 
  1222  0EA0                     	;# 
  1223  0EA1                     	;# 
  1224  0EA2                     	;# 
  1225  0EA3                     	;# 
  1226  0EA4                     	;# 
  1227  0EA5                     	;# 
  1228  0EA6                     	;# 
  1229  0EA7                     	;# 
  1230  0F0F                     	;# 
  1231  0F10                     	;# 
  1232  0F11                     	;# 
  1233  0F12                     	;# 
  1234  0F13                     	;# 
  1235  0F14                     	;# 
  1236  0F15                     	;# 
  1237  0F16                     	;# 
  1238  0F17                     	;# 
  1239  0F18                     	;# 
  1240  0F19                     	;# 
  1241  0F1A                     	;# 
  1242  0F1B                     	;# 
  1243  0F1C                     	;# 
  1244  0F1D                     	;# 
  1245  0F1E                     	;# 
  1246  0F1F                     	;# 
  1247  0F20                     	;# 
  1248  0F21                     	;# 
  1249  0F22                     	;# 
  1250  0F23                     	;# 
  1251  0F24                     	;# 
  1252  0F25                     	;# 
  1253  0F26                     	;# 
  1254  0F27                     	;# 
  1255  0F28                     	;# 
  1256  0F29                     	;# 
  1257  0F2A                     	;# 
  1258  0F2B                     	;# 
  1259  0F2C                     	;# 
  1260  0F2D                     	;# 
  1261  0F2E                     	;# 
  1262  0F2F                     	;# 
  1263  0F30                     	;# 
  1264  0F31                     	;# 
  1265  0F32                     	;# 
  1266  0F33                     	;# 
  1267  0F34                     	;# 
  1268  0F35                     	;# 
  1269  0F36                     	;# 
  1270  0F37                     	;# 
  1271  0FE4                     	;# 
  1272  0FE5                     	;# 
  1273  0FE6                     	;# 
  1274  0FE7                     	;# 
  1275  0FE8                     	;# 
  1276  0FE9                     	;# 
  1277  0FEA                     	;# 
  1278  0FEB                     	;# 
  1279  0FED                     	;# 
  1280  0FEE                     	;# 
  1281  0FEF                     	;# 
  1282  0000                     	;# 
  1283  0001                     	;# 
  1284  0002                     	;# 
  1285  0003                     	;# 
  1286  0004                     	;# 
  1287  0005                     	;# 
  1288  0006                     	;# 
  1289  0007                     	;# 
  1290  0008                     	;# 
  1291  0009                     	;# 
  1292  000A                     	;# 
  1293  000B                     	;# 
  1294  000C                     	;# 
  1295  000D                     	;# 
  1296  000E                     	;# 
  1297  0010                     	;# 
  1298  0011                     	;# 
  1299  0012                     	;# 
  1300  0013                     	;# 
  1301  0015                     	;# 
  1302  0016                     	;# 
  1303  0016                     	;# 
  1304  0017                     	;# 
  1305  0018                     	;# 
  1306  0019                     	;# 
  1307  001A                     	;# 
  1308  001B                     	;# 
  1309  001C                     	;# 
  1310  008C                     	;# 
  1311  008D                     	;# 
  1312  008E                     	;# 
  1313  0090                     	;# 
  1314  0091                     	;# 
  1315  0092                     	;# 
  1316  0093                     	;# 
  1317  0095                     	;# 
  1318  0096                     	;# 
  1319  0097                     	;# 
  1320  0098                     	;# 
  1321  0099                     	;# 
  1322  009A                     	;# 
  1323  009B                     	;# 
  1324  009B                     	;# 
  1325  009C                     	;# 
  1326  009D                     	;# 
  1327  009E                     	;# 
  1328  009F                     	;# 
  1329  010C                     	;# 
  1330  010D                     	;# 
  1331  010E                     	;# 
  1332  0111                     	;# 
  1333  0112                     	;# 
  1334  0113                     	;# 
  1335  0114                     	;# 
  1336  0115                     	;# 
  1337  0116                     	;# 
  1338  0117                     	;# 
  1339  0118                     	;# 
  1340  0119                     	;# 
  1341  011A                     	;# 
  1342  011B                     	;# 
  1343  011B                     	;# 
  1344  011C                     	;# 
  1345  018C                     	;# 
  1346  018D                     	;# 
  1347  018E                     	;# 
  1348  0191                     	;# 
  1349  0191                     	;# 
  1350  0192                     	;# 
  1351  0193                     	;# 
  1352  0193                     	;# 
  1353  0194                     	;# 
  1354  0195                     	;# 
  1355  0196                     	;# 
  1356  0197                     	;# 
  1357  0199                     	;# 
  1358  0199                     	;# 
  1359  0199                     	;# 
  1360  019A                     	;# 
  1361  019A                     	;# 
  1362  019A                     	;# 
  1363  019B                     	;# 
  1364  019B                     	;# 
  1365  019B                     	;# 
  1366  019B                     	;# 
  1367  019B                     	;# 
  1368  019C                     	;# 
  1369  019C                     	;# 
  1370  019C                     	;# 
  1371  019D                     	;# 
  1372  019D                     	;# 
  1373  019D                     	;# 
  1374  019E                     	;# 
  1375  019E                     	;# 
  1376  019E                     	;# 
  1377  019F                     	;# 
  1378  019F                     	;# 
  1379  019F                     	;# 
  1380  019F                     	;# 
  1381  019F                     	;# 
  1382  020C                     	;# 
  1383  020D                     	;# 
  1384  020E                     	;# 
  1385  0210                     	;# 
  1386  0211                     	;# 
  1387  0211                     	;# 
  1388  0212                     	;# 
  1389  0212                     	;# 
  1390  0213                     	;# 
  1391  0213                     	;# 
  1392  0214                     	;# 
  1393  0214                     	;# 
  1394  0215                     	;# 
  1395  0215                     	;# 
  1396  0215                     	;# 
  1397  0215                     	;# 
  1398  0216                     	;# 
  1399  0216                     	;# 
  1400  0217                     	;# 
  1401  0217                     	;# 
  1402  028C                     	;# 
  1403  028D                     	;# 
  1404  028E                     	;# 
  1405  0291                     	;# 
  1406  0291                     	;# 
  1407  0292                     	;# 
  1408  0293                     	;# 
  1409  0293                     	;# 
  1410  0298                     	;# 
  1411  0298                     	;# 
  1412  0299                     	;# 
  1413  029A                     	;# 
  1414  029A                     	;# 
  1415  029E                     	;# 
  1416  030C                     	;# 
  1417  030D                     	;# 
  1418  030E                     	;# 
  1419  038C                     	;# 
  1420  038D                     	;# 
  1421  038E                     	;# 
  1422  0390                     	;# 
  1423  0391                     	;# 
  1424  0392                     	;# 
  1425  0393                     	;# 
  1426  0394                     	;# 
  1427  0395                     	;# 
  1428  0396                     	;# 
  1429  0397                     	;# 
  1430  0398                     	;# 
  1431  0399                     	;# 
  1432  039D                     	;# 
  1433  039E                     	;# 
  1434  039F                     	;# 
  1435  0415                     	;# 
  1436  0416                     	;# 
  1437  0417                     	;# 
  1438  041C                     	;# 
  1439  041D                     	;# 
  1440  041E                     	;# 
  1441  0498                     	;# 
  1442  0498                     	;# 
  1443  0499                     	;# 
  1444  049A                     	;# 
  1445  049B                     	;# 
  1446  049B                     	;# 
  1447  049C                     	;# 
  1448  049D                     	;# 
  1449  049E                     	;# 
  1450  049F                     	;# 
  1451  0511                     	;# 
  1452  0515                     	;# 
  1453  0617                     	;# 
  1454  0618                     	;# 
  1455  0619                     	;# 
  1456  0619                     	;# 
  1457  061A                     	;# 
  1458  061B                     	;# 
  1459  061C                     	;# 
  1460  061C                     	;# 
  1461  0691                     	;# 
  1462  0692                     	;# 
  1463  0693                     	;# 
  1464  0694                     	;# 
  1465  0695                     	;# 
  1466  0696                     	;# 
  1467  0697                     	;# 
  1468  0698                     	;# 
  1469  0699                     	;# 
  1470  069A                     	;# 
  1471  069B                     	;# 
  1472  069C                     	;# 
  1473  069D                     	;# 
  1474  069E                     	;# 
  1475  069F                     	;# 
  1476  0E0F                     	;# 
  1477  0E10                     	;# 
  1478  0E11                     	;# 
  1479  0E12                     	;# 
  1480  0E13                     	;# 
  1481  0E14                     	;# 
  1482  0E15                     	;# 
  1483  0E17                     	;# 
  1484  0E20                     	;# 
  1485  0E21                     	;# 
  1486  0E22                     	;# 
  1487  0E24                     	;# 
  1488  0E25                     	;# 
  1489  0E28                     	;# 
  1490  0E29                     	;# 
  1491  0E2A                     	;# 
  1492  0E2B                     	;# 
  1493  0E90                     	;# 
  1494  0E91                     	;# 
  1495  0E92                     	;# 
  1496  0E93                     	;# 
  1497  0E94                     	;# 
  1498  0E95                     	;# 
  1499  0E96                     	;# 
  1500  0E97                     	;# 
  1501  0E98                     	;# 
  1502  0E99                     	;# 
  1503  0E9A                     	;# 
  1504  0E9B                     	;# 
  1505  0E9C                     	;# 
  1506  0E9D                     	;# 
  1507  0E9E                     	;# 
  1508  0E9F                     	;# 
  1509  0EA0                     	;# 
  1510  0EA1                     	;# 
  1511  0EA2                     	;# 
  1512  0EA3                     	;# 
  1513  0EA4                     	;# 
  1514  0EA5                     	;# 
  1515  0EA6                     	;# 
  1516  0EA7                     	;# 
  1517  0F0F                     	;# 
  1518  0F10                     	;# 
  1519  0F11                     	;# 
  1520  0F12                     	;# 
  1521  0F13                     	;# 
  1522  0F14                     	;# 
  1523  0F15                     	;# 
  1524  0F16                     	;# 
  1525  0F17                     	;# 
  1526  0F18                     	;# 
  1527  0F19                     	;# 
  1528  0F1A                     	;# 
  1529  0F1B                     	;# 
  1530  0F1C                     	;# 
  1531  0F1D                     	;# 
  1532  0F1E                     	;# 
  1533  0F1F                     	;# 
  1534  0F20                     	;# 
  1535  0F21                     	;# 
  1536  0F22                     	;# 
  1537  0F23                     	;# 
  1538  0F24                     	;# 
  1539  0F25                     	;# 
  1540  0F26                     	;# 
  1541  0F27                     	;# 
  1542  0F28                     	;# 
  1543  0F29                     	;# 
  1544  0F2A                     	;# 
  1545  0F2B                     	;# 
  1546  0F2C                     	;# 
  1547  0F2D                     	;# 
  1548  0F2E                     	;# 
  1549  0F2F                     	;# 
  1550  0F30                     	;# 
  1551  0F31                     	;# 
  1552  0F32                     	;# 
  1553  0F33                     	;# 
  1554  0F34                     	;# 
  1555  0F35                     	;# 
  1556  0F36                     	;# 
  1557  0F37                     	;# 
  1558  0FE4                     	;# 
  1559  0FE5                     	;# 
  1560  0FE6                     	;# 
  1561  0FE7                     	;# 
  1562  0FE8                     	;# 
  1563  0FE9                     	;# 
  1564  0FEA                     	;# 
  1565  0FEB                     	;# 
  1566  0FED                     	;# 
  1567  0FEE                     	;# 
  1568  0FEF                     	;# 
  1569  0000                     	;# 
  1570  0001                     	;# 
  1571  0002                     	;# 
  1572  0003                     	;# 
  1573  0004                     	;# 
  1574  0005                     	;# 
  1575  0006                     	;# 
  1576  0007                     	;# 
  1577  0008                     	;# 
  1578  0009                     	;# 
  1579  000A                     	;# 
  1580  000B                     	;# 
  1581  000C                     	;# 
  1582  000D                     	;# 
  1583  000E                     	;# 
  1584  0010                     	;# 
  1585  0011                     	;# 
  1586  0012                     	;# 
  1587  0013                     	;# 
  1588  0015                     	;# 
  1589  0016                     	;# 
  1590  0016                     	;# 
  1591  0017                     	;# 
  1592  0018                     	;# 
  1593  0019                     	;# 
  1594  001A                     	;# 
  1595  001B                     	;# 
  1596  001C                     	;# 
  1597  008C                     	;# 
  1598  008D                     	;# 
  1599  008E                     	;# 
  1600  0090                     	;# 
  1601  0091                     	;# 
  1602  0092                     	;# 
  1603  0093                     	;# 
  1604  0095                     	;# 
  1605  0096                     	;# 
  1606  0097                     	;# 
  1607  0098                     	;# 
  1608  0099                     	;# 
  1609  009A                     	;# 
  1610  009B                     	;# 
  1611  009B                     	;# 
  1612  009C                     	;# 
  1613  009D                     	;# 
  1614  009E                     	;# 
  1615  009F                     	;# 
  1616  010C                     	;# 
  1617  010D                     	;# 
  1618  010E                     	;# 
  1619  0111                     	;# 
  1620  0112                     	;# 
  1621  0113                     	;# 
  1622  0114                     	;# 
  1623  0115                     	;# 
  1624  0116                     	;# 
  1625  0117                     	;# 
  1626  0118                     	;# 
  1627  0119                     	;# 
  1628  011A                     	;# 
  1629  011B                     	;# 
  1630  011B                     	;# 
  1631  011C                     	;# 
  1632  018C                     	;# 
  1633  018D                     	;# 
  1634  018E                     	;# 
  1635  0191                     	;# 
  1636  0191                     	;# 
  1637  0192                     	;# 
  1638  0193                     	;# 
  1639  0193                     	;# 
  1640  0194                     	;# 
  1641  0195                     	;# 
  1642  0196                     	;# 
  1643  0197                     	;# 
  1644  0199                     	;# 
  1645  0199                     	;# 
  1646  0199                     	;# 
  1647  019A                     	;# 
  1648  019A                     	;# 
  1649  019A                     	;# 
  1650  019B                     	;# 
  1651  019B                     	;# 
  1652  019B                     	;# 
  1653  019B                     	;# 
  1654  019B                     	;# 
  1655  019C                     	;# 
  1656  019C                     	;# 
  1657  019C                     	;# 
  1658  019D                     	;# 
  1659  019D                     	;# 
  1660  019D                     	;# 
  1661  019E                     	;# 
  1662  019E                     	;# 
  1663  019E                     	;# 
  1664  019F                     	;# 
  1665  019F                     	;# 
  1666  019F                     	;# 
  1667  019F                     	;# 
  1668  019F                     	;# 
  1669  020C                     	;# 
  1670  020D                     	;# 
  1671  020E                     	;# 
  1672  0210                     	;# 
  1673  0211                     	;# 
  1674  0211                     	;# 
  1675  0212                     	;# 
  1676  0212                     	;# 
  1677  0213                     	;# 
  1678  0213                     	;# 
  1679  0214                     	;# 
  1680  0214                     	;# 
  1681  0215                     	;# 
  1682  0215                     	;# 
  1683  0215                     	;# 
  1684  0215                     	;# 
  1685  0216                     	;# 
  1686  0216                     	;# 
  1687  0217                     	;# 
  1688  0217                     	;# 
  1689  028C                     	;# 
  1690  028D                     	;# 
  1691  028E                     	;# 
  1692  0291                     	;# 
  1693  0291                     	;# 
  1694  0292                     	;# 
  1695  0293                     	;# 
  1696  0293                     	;# 
  1697  0298                     	;# 
  1698  0298                     	;# 
  1699  0299                     	;# 
  1700  029A                     	;# 
  1701  029A                     	;# 
  1702  029E                     	;# 
  1703  030C                     	;# 
  1704  030D                     	;# 
  1705  030E                     	;# 
  1706  038C                     	;# 
  1707  038D                     	;# 
  1708  038E                     	;# 
  1709  0390                     	;# 
  1710  0391                     	;# 
  1711  0392                     	;# 
  1712  0393                     	;# 
  1713  0394                     	;# 
  1714  0395                     	;# 
  1715  0396                     	;# 
  1716  0397                     	;# 
  1717  0398                     	;# 
  1718  0399                     	;# 
  1719  039D                     	;# 
  1720  039E                     	;# 
  1721  039F                     	;# 
  1722  0415                     	;# 
  1723  0416                     	;# 
  1724  0417                     	;# 
  1725  041C                     	;# 
  1726  041D                     	;# 
  1727  041E                     	;# 
  1728  0498                     	;# 
  1729  0498                     	;# 
  1730  0499                     	;# 
  1731  049A                     	;# 
  1732  049B                     	;# 
  1733  049B                     	;# 
  1734  049C                     	;# 
  1735  049D                     	;# 
  1736  049E                     	;# 
  1737  049F                     	;# 
  1738  0511                     	;# 
  1739  0515                     	;# 
  1740  0617                     	;# 
  1741  0618                     	;# 
  1742  0619                     	;# 
  1743  0619                     	;# 
  1744  061A                     	;# 
  1745  061B                     	;# 
  1746  061C                     	;# 
  1747  061C                     	;# 
  1748  0691                     	;# 
  1749  0692                     	;# 
  1750  0693                     	;# 
  1751  0694                     	;# 
  1752  0695                     	;# 
  1753  0696                     	;# 
  1754  0697                     	;# 
  1755  0698                     	;# 
  1756  0699                     	;# 
  1757  069A                     	;# 
  1758  069B                     	;# 
  1759  069C                     	;# 
  1760  069D                     	;# 
  1761  069E                     	;# 
  1762  069F                     	;# 
  1763  0E0F                     	;# 
  1764  0E10                     	;# 
  1765  0E11                     	;# 
  1766  0E12                     	;# 
  1767  0E13                     	;# 
  1768  0E14                     	;# 
  1769  0E15                     	;# 
  1770  0E17                     	;# 
  1771  0E20                     	;# 
  1772  0E21                     	;# 
  1773  0E22                     	;# 
  1774  0E24                     	;# 
  1775  0E25                     	;# 
  1776  0E28                     	;# 
  1777  0E29                     	;# 
  1778  0E2A                     	;# 
  1779  0E2B                     	;# 
  1780  0E90                     	;# 
  1781  0E91                     	;# 
  1782  0E92                     	;# 
  1783  0E93                     	;# 
  1784  0E94                     	;# 
  1785  0E95                     	;# 
  1786  0E96                     	;# 
  1787  0E97                     	;# 
  1788  0E98                     	;# 
  1789  0E99                     	;# 
  1790  0E9A                     	;# 
  1791  0E9B                     	;# 
  1792  0E9C                     	;# 
  1793  0E9D                     	;# 
  1794  0E9E                     	;# 
  1795  0E9F                     	;# 
  1796  0EA0                     	;# 
  1797  0EA1                     	;# 
  1798  0EA2                     	;# 
  1799  0EA3                     	;# 
  1800  0EA4                     	;# 
  1801  0EA5                     	;# 
  1802  0EA6                     	;# 
  1803  0EA7                     	;# 
  1804  0F0F                     	;# 
  1805  0F10                     	;# 
  1806  0F11                     	;# 
  1807  0F12                     	;# 
  1808  0F13                     	;# 
  1809  0F14                     	;# 
  1810  0F15                     	;# 
  1811  0F16                     	;# 
  1812  0F17                     	;# 
  1813  0F18                     	;# 
  1814  0F19                     	;# 
  1815  0F1A                     	;# 
  1816  0F1B                     	;# 
  1817  0F1C                     	;# 
  1818  0F1D                     	;# 
  1819  0F1E                     	;# 
  1820  0F1F                     	;# 
  1821  0F20                     	;# 
  1822  0F21                     	;# 
  1823  0F22                     	;# 
  1824  0F23                     	;# 
  1825  0F24                     	;# 
  1826  0F25                     	;# 
  1827  0F26                     	;# 
  1828  0F27                     	;# 
  1829  0F28                     	;# 
  1830  0F29                     	;# 
  1831  0F2A                     	;# 
  1832  0F2B                     	;# 
  1833  0F2C                     	;# 
  1834  0F2D                     	;# 
  1835  0F2E                     	;# 
  1836  0F2F                     	;# 
  1837  0F30                     	;# 
  1838  0F31                     	;# 
  1839  0F32                     	;# 
  1840  0F33                     	;# 
  1841  0F34                     	;# 
  1842  0F35                     	;# 
  1843  0F36                     	;# 
  1844  0F37                     	;# 
  1845  0FE4                     	;# 
  1846  0FE5                     	;# 
  1847  0FE6                     	;# 
  1848  0FE7                     	;# 
  1849  0FE8                     	;# 
  1850  0FE9                     	;# 
  1851  0FEA                     	;# 
  1852  0FEB                     	;# 
  1853  0FED                     	;# 
  1854  0FEE                     	;# 
  1855  0FEF                     	;# 
  1856  0000                     	;# 
  1857  0001                     	;# 
  1858  0002                     	;# 
  1859  0003                     	;# 
  1860  0004                     	;# 
  1861  0005                     	;# 
  1862  0006                     	;# 
  1863  0007                     	;# 
  1864  0008                     	;# 
  1865  0009                     	;# 
  1866  000A                     	;# 
  1867  000B                     	;# 
  1868  000C                     	;# 
  1869  000D                     	;# 
  1870  000E                     	;# 
  1871  0010                     	;# 
  1872  0011                     	;# 
  1873  0012                     	;# 
  1874  0013                     	;# 
  1875  0015                     	;# 
  1876  0016                     	;# 
  1877  0016                     	;# 
  1878  0017                     	;# 
  1879  0018                     	;# 
  1880  0019                     	;# 
  1881  001A                     	;# 
  1882  001B                     	;# 
  1883  001C                     	;# 
  1884  008C                     	;# 
  1885  008D                     	;# 
  1886  008E                     	;# 
  1887  0090                     	;# 
  1888  0091                     	;# 
  1889  0092                     	;# 
  1890  0093                     	;# 
  1891  0095                     	;# 
  1892  0096                     	;# 
  1893  0097                     	;# 
  1894  0098                     	;# 
  1895  0099                     	;# 
  1896  009A                     	;# 
  1897  009B                     	;# 
  1898  009B                     	;# 
  1899  009C                     	;# 
  1900  009D                     	;# 
  1901  009E                     	;# 
  1902  009F                     	;# 
  1903  010C                     	;# 
  1904  010D                     	;# 
  1905  010E                     	;# 
  1906  0111                     	;# 
  1907  0112                     	;# 
  1908  0113                     	;# 
  1909  0114                     	;# 
  1910  0115                     	;# 
  1911  0116                     	;# 
  1912  0117                     	;# 
  1913  0118                     	;# 
  1914  0119                     	;# 
  1915  011A                     	;# 
  1916  011B                     	;# 
  1917  011B                     	;# 
  1918  011C                     	;# 
  1919  018C                     	;# 
  1920  018D                     	;# 
  1921  018E                     	;# 
  1922  0191                     	;# 
  1923  0191                     	;# 
  1924  0192                     	;# 
  1925  0193                     	;# 
  1926  0193                     	;# 
  1927  0194                     	;# 
  1928  0195                     	;# 
  1929  0196                     	;# 
  1930  0197                     	;# 
  1931  0199                     	;# 
  1932  0199                     	;# 
  1933  0199                     	;# 
  1934  019A                     	;# 
  1935  019A                     	;# 
  1936  019A                     	;# 
  1937  019B                     	;# 
  1938  019B                     	;# 
  1939  019B                     	;# 
  1940  019B                     	;# 
  1941  019B                     	;# 
  1942  019C                     	;# 
  1943  019C                     	;# 
  1944  019C                     	;# 
  1945  019D                     	;# 
  1946  019D                     	;# 
  1947  019D                     	;# 
  1948  019E                     	;# 
  1949  019E                     	;# 
  1950  019E                     	;# 
  1951  019F                     	;# 
  1952  019F                     	;# 
  1953  019F                     	;# 
  1954  019F                     	;# 
  1955  019F                     	;# 
  1956  020C                     	;# 
  1957  020D                     	;# 
  1958  020E                     	;# 
  1959  0210                     	;# 
  1960  0211                     	;# 
  1961  0211                     	;# 
  1962  0212                     	;# 
  1963  0212                     	;# 
  1964  0213                     	;# 
  1965  0213                     	;# 
  1966  0214                     	;# 
  1967  0214                     	;# 
  1968  0215                     	;# 
  1969  0215                     	;# 
  1970  0215                     	;# 
  1971  0215                     	;# 
  1972  0216                     	;# 
  1973  0216                     	;# 
  1974  0217                     	;# 
  1975  0217                     	;# 
  1976  028C                     	;# 
  1977  028D                     	;# 
  1978  028E                     	;# 
  1979  0291                     	;# 
  1980  0291                     	;# 
  1981  0292                     	;# 
  1982  0293                     	;# 
  1983  0293                     	;# 
  1984  0298                     	;# 
  1985  0298                     	;# 
  1986  0299                     	;# 
  1987  029A                     	;# 
  1988  029A                     	;# 
  1989  029E                     	;# 
  1990  030C                     	;# 
  1991  030D                     	;# 
  1992  030E                     	;# 
  1993  038C                     	;# 
  1994  038D                     	;# 
  1995  038E                     	;# 
  1996  0390                     	;# 
  1997  0391                     	;# 
  1998  0392                     	;# 
  1999  0393                     	;# 
  2000  0394                     	;# 
  2001  0395                     	;# 
  2002  0396                     	;# 
  2003  0397                     	;# 
  2004  0398                     	;# 
  2005  0399                     	;# 
  2006  039D                     	;# 
  2007  039E                     	;# 
  2008  039F                     	;# 
  2009  0415                     	;# 
  2010  0416                     	;# 
  2011  0417                     	;# 
  2012  041C                     	;# 
  2013  041D                     	;# 
  2014  041E                     	;# 
  2015  0498                     	;# 
  2016  0498                     	;# 
  2017  0499                     	;# 
  2018  049A                     	;# 
  2019  049B                     	;# 
  2020  049B                     	;# 
  2021  049C                     	;# 
  2022  049D                     	;# 
  2023  049E                     	;# 
  2024  049F                     	;# 
  2025  0511                     	;# 
  2026  0515                     	;# 
  2027  0617                     	;# 
  2028  0618                     	;# 
  2029  0619                     	;# 
  2030  0619                     	;# 
  2031  061A                     	;# 
  2032  061B                     	;# 
  2033  061C                     	;# 
  2034  061C                     	;# 
  2035  0691                     	;# 
  2036  0692                     	;# 
  2037  0693                     	;# 
  2038  0694                     	;# 
  2039  0695                     	;# 
  2040  0696                     	;# 
  2041  0697                     	;# 
  2042  0698                     	;# 
  2043  0699                     	;# 
  2044  069A                     	;# 
  2045  069B                     	;# 
  2046  069C                     	;# 
  2047  069D                     	;# 
  2048  069E                     	;# 
  2049  069F                     	;# 
  2050  0E0F                     	;# 
  2051  0E10                     	;# 
  2052  0E11                     	;# 
  2053  0E12                     	;# 
  2054  0E13                     	;# 
  2055  0E14                     	;# 
  2056  0E15                     	;# 
  2057  0E17                     	;# 
  2058  0E20                     	;# 
  2059  0E21                     	;# 
  2060  0E22                     	;# 
  2061  0E24                     	;# 
  2062  0E25                     	;# 
  2063  0E28                     	;# 
  2064  0E29                     	;# 
  2065  0E2A                     	;# 
  2066  0E2B                     	;# 
  2067  0E90                     	;# 
  2068  0E91                     	;# 
  2069  0E92                     	;# 
  2070  0E93                     	;# 
  2071  0E94                     	;# 
  2072  0E95                     	;# 
  2073  0E96                     	;# 
  2074  0E97                     	;# 
  2075  0E98                     	;# 
  2076  0E99                     	;# 
  2077  0E9A                     	;# 
  2078  0E9B                     	;# 
  2079  0E9C                     	;# 
  2080  0E9D                     	;# 
  2081  0E9E                     	;# 
  2082  0E9F                     	;# 
  2083  0EA0                     	;# 
  2084  0EA1                     	;# 
  2085  0EA2                     	;# 
  2086  0EA3                     	;# 
  2087  0EA4                     	;# 
  2088  0EA5                     	;# 
  2089  0EA6                     	;# 
  2090  0EA7                     	;# 
  2091  0F0F                     	;# 
  2092  0F10                     	;# 
  2093  0F11                     	;# 
  2094  0F12                     	;# 
  2095  0F13                     	;# 
  2096  0F14                     	;# 
  2097  0F15                     	;# 
  2098  0F16                     	;# 
  2099  0F17                     	;# 
  2100  0F18                     	;# 
  2101  0F19                     	;# 
  2102  0F1A                     	;# 
  2103  0F1B                     	;# 
  2104  0F1C                     	;# 
  2105  0F1D                     	;# 
  2106  0F1E                     	;# 
  2107  0F1F                     	;# 
  2108  0F20                     	;# 
  2109  0F21                     	;# 
  2110  0F22                     	;# 
  2111  0F23                     	;# 
  2112  0F24                     	;# 
  2113  0F25                     	;# 
  2114  0F26                     	;# 
  2115  0F27                     	;# 
  2116  0F28                     	;# 
  2117  0F29                     	;# 
  2118  0F2A                     	;# 
  2119  0F2B                     	;# 
  2120  0F2C                     	;# 
  2121  0F2D                     	;# 
  2122  0F2E                     	;# 
  2123  0F2F                     	;# 
  2124  0F30                     	;# 
  2125  0F31                     	;# 
  2126  0F32                     	;# 
  2127  0F33                     	;# 
  2128  0F34                     	;# 
  2129  0F35                     	;# 
  2130  0F36                     	;# 
  2131  0F37                     	;# 
  2132  0FE4                     	;# 
  2133  0FE5                     	;# 
  2134  0FE6                     	;# 
  2135  0FE7                     	;# 
  2136  0FE8                     	;# 
  2137  0FE9                     	;# 
  2138  0FEA                     	;# 
  2139  0FEB                     	;# 
  2140  0FED                     	;# 
  2141  0FEE                     	;# 
  2142  0FEF                     	;# 
  2143  0000                     	;# 
  2144  0001                     	;# 
  2145  0002                     	;# 
  2146  0003                     	;# 
  2147  0004                     	;# 
  2148  0005                     	;# 
  2149  0006                     	;# 
  2150  0007                     	;# 
  2151  0008                     	;# 
  2152  0009                     	;# 
  2153  000A                     	;# 
  2154  000B                     	;# 
  2155  000C                     	;# 
  2156  000D                     	;# 
  2157  000E                     	;# 
  2158  0010                     	;# 
  2159  0011                     	;# 
  2160  0012                     	;# 
  2161  0013                     	;# 
  2162  0015                     	;# 
  2163  0016                     	;# 
  2164  0016                     	;# 
  2165  0017                     	;# 
  2166  0018                     	;# 
  2167  0019                     	;# 
  2168  001A                     	;# 
  2169  001B                     	;# 
  2170  001C                     	;# 
  2171  008C                     	;# 
  2172  008D                     	;# 
  2173  008E                     	;# 
  2174  0090                     	;# 
  2175  0091                     	;# 
  2176  0092                     	;# 
  2177  0093                     	;# 
  2178  0095                     	;# 
  2179  0096                     	;# 
  2180  0097                     	;# 
  2181  0098                     	;# 
  2182  0099                     	;# 
  2183  009A                     	;# 
  2184  009B                     	;# 
  2185  009B                     	;# 
  2186  009C                     	;# 
  2187  009D                     	;# 
  2188  009E                     	;# 
  2189  009F                     	;# 
  2190  010C                     	;# 
  2191  010D                     	;# 
  2192  010E                     	;# 
  2193  0111                     	;# 
  2194  0112                     	;# 
  2195  0113                     	;# 
  2196  0114                     	;# 
  2197  0115                     	;# 
  2198  0116                     	;# 
  2199  0117                     	;# 
  2200  0118                     	;# 
  2201  0119                     	;# 
  2202  011A                     	;# 
  2203  011B                     	;# 
  2204  011B                     	;# 
  2205  011C                     	;# 
  2206  018C                     	;# 
  2207  018D                     	;# 
  2208  018E                     	;# 
  2209  0191                     	;# 
  2210  0191                     	;# 
  2211  0192                     	;# 
  2212  0193                     	;# 
  2213  0193                     	;# 
  2214  0194                     	;# 
  2215  0195                     	;# 
  2216  0196                     	;# 
  2217  0197                     	;# 
  2218  0199                     	;# 
  2219  0199                     	;# 
  2220  0199                     	;# 
  2221  019A                     	;# 
  2222  019A                     	;# 
  2223  019A                     	;# 
  2224  019B                     	;# 
  2225  019B                     	;# 
  2226  019B                     	;# 
  2227  019B                     	;# 
  2228  019B                     	;# 
  2229  019C                     	;# 
  2230  019C                     	;# 
  2231  019C                     	;# 
  2232  019D                     	;# 
  2233  019D                     	;# 
  2234  019D                     	;# 
  2235  019E                     	;# 
  2236  019E                     	;# 
  2237  019E                     	;# 
  2238  019F                     	;# 
  2239  019F                     	;# 
  2240  019F                     	;# 
  2241  019F                     	;# 
  2242  019F                     	;# 
  2243  020C                     	;# 
  2244  020D                     	;# 
  2245  020E                     	;# 
  2246  0210                     	;# 
  2247  0211                     	;# 
  2248  0211                     	;# 
  2249  0212                     	;# 
  2250  0212                     	;# 
  2251  0213                     	;# 
  2252  0213                     	;# 
  2253  0214                     	;# 
  2254  0214                     	;# 
  2255  0215                     	;# 
  2256  0215                     	;# 
  2257  0215                     	;# 
  2258  0215                     	;# 
  2259  0216                     	;# 
  2260  0216                     	;# 
  2261  0217                     	;# 
  2262  0217                     	;# 
  2263  028C                     	;# 
  2264  028D                     	;# 
  2265  028E                     	;# 
  2266  0291                     	;# 
  2267  0291                     	;# 
  2268  0292                     	;# 
  2269  0293                     	;# 
  2270  0293                     	;# 
  2271  0298                     	;# 
  2272  0298                     	;# 
  2273  0299                     	;# 
  2274  029A                     	;# 
  2275  029A                     	;# 
  2276  029E                     	;# 
  2277  030C                     	;# 
  2278  030D                     	;# 
  2279  030E                     	;# 
  2280  038C                     	;# 
  2281  038D                     	;# 
  2282  038E                     	;# 
  2283  0390                     	;# 
  2284  0391                     	;# 
  2285  0392                     	;# 
  2286  0393                     	;# 
  2287  0394                     	;# 
  2288  0395                     	;# 
  2289  0396                     	;# 
  2290  0397                     	;# 
  2291  0398                     	;# 
  2292  0399                     	;# 
  2293  039D                     	;# 
  2294  039E                     	;# 
  2295  039F                     	;# 
  2296  0415                     	;# 
  2297  0416                     	;# 
  2298  0417                     	;# 
  2299  041C                     	;# 
  2300  041D                     	;# 
  2301  041E                     	;# 
  2302  0498                     	;# 
  2303  0498                     	;# 
  2304  0499                     	;# 
  2305  049A                     	;# 
  2306  049B                     	;# 
  2307  049B                     	;# 
  2308  049C                     	;# 
  2309  049D                     	;# 
  2310  049E                     	;# 
  2311  049F                     	;# 
  2312  0511                     	;# 
  2313  0515                     	;# 
  2314  0617                     	;# 
  2315  0618                     	;# 
  2316  0619                     	;# 
  2317  0619                     	;# 
  2318  061A                     	;# 
  2319  061B                     	;# 
  2320  061C                     	;# 
  2321  061C                     	;# 
  2322  0691                     	;# 
  2323  0692                     	;# 
  2324  0693                     	;# 
  2325  0694                     	;# 
  2326  0695                     	;# 
  2327  0696                     	;# 
  2328  0697                     	;# 
  2329  0698                     	;# 
  2330  0699                     	;# 
  2331  069A                     	;# 
  2332  069B                     	;# 
  2333  069C                     	;# 
  2334  069D                     	;# 
  2335  069E                     	;# 
  2336  069F                     	;# 
  2337  0E0F                     	;# 
  2338  0E10                     	;# 
  2339  0E11                     	;# 
  2340  0E12                     	;# 
  2341  0E13                     	;# 
  2342  0E14                     	;# 
  2343  0E15                     	;# 
  2344  0E17                     	;# 
  2345  0E20                     	;# 
  2346  0E21                     	;# 
  2347  0E22                     	;# 
  2348  0E24                     	;# 
  2349  0E25                     	;# 
  2350  0E28                     	;# 
  2351  0E29                     	;# 
  2352  0E2A                     	;# 
  2353  0E2B                     	;# 
  2354  0E90                     	;# 
  2355  0E91                     	;# 
  2356  0E92                     	;# 
  2357  0E93                     	;# 
  2358  0E94                     	;# 
  2359  0E95                     	;# 
  2360  0E96                     	;# 
  2361  0E97                     	;# 
  2362  0E98                     	;# 
  2363  0E99                     	;# 
  2364  0E9A                     	;# 
  2365  0E9B                     	;# 
  2366  0E9C                     	;# 
  2367  0E9D                     	;# 
  2368  0E9E                     	;# 
  2369  0E9F                     	;# 
  2370  0EA0                     	;# 
  2371  0EA1                     	;# 
  2372  0EA2                     	;# 
  2373  0EA3                     	;# 
  2374  0EA4                     	;# 
  2375  0EA5                     	;# 
  2376  0EA6                     	;# 
  2377  0EA7                     	;# 
  2378  0F0F                     	;# 
  2379  0F10                     	;# 
  2380  0F11                     	;# 
  2381  0F12                     	;# 
  2382  0F13                     	;# 
  2383  0F14                     	;# 
  2384  0F15                     	;# 
  2385  0F16                     	;# 
  2386  0F17                     	;# 
  2387  0F18                     	;# 
  2388  0F19                     	;# 
  2389  0F1A                     	;# 
  2390  0F1B                     	;# 
  2391  0F1C                     	;# 
  2392  0F1D                     	;# 
  2393  0F1E                     	;# 
  2394  0F1F                     	;# 
  2395  0F20                     	;# 
  2396  0F21                     	;# 
  2397  0F22                     	;# 
  2398  0F23                     	;# 
  2399  0F24                     	;# 
  2400  0F25                     	;# 
  2401  0F26                     	;# 
  2402  0F27                     	;# 
  2403  0F28                     	;# 
  2404  0F29                     	;# 
  2405  0F2A                     	;# 
  2406  0F2B                     	;# 
  2407  0F2C                     	;# 
  2408  0F2D                     	;# 
  2409  0F2E                     	;# 
  2410  0F2F                     	;# 
  2411  0F30                     	;# 
  2412  0F31                     	;# 
  2413  0F32                     	;# 
  2414  0F33                     	;# 
  2415  0F34                     	;# 
  2416  0F35                     	;# 
  2417  0F36                     	;# 
  2418  0F37                     	;# 
  2419  0FE4                     	;# 
  2420  0FE5                     	;# 
  2421  0FE6                     	;# 
  2422  0FE7                     	;# 
  2423  0FE8                     	;# 
  2424  0FE9                     	;# 
  2425  0FEA                     	;# 
  2426  0FEB                     	;# 
  2427  0FED                     	;# 
  2428  0FEE                     	;# 
  2429  0FEF                     	;# 
  2430  0000                     	;# 
  2431  0001                     	;# 
  2432  0002                     	;# 
  2433  0003                     	;# 
  2434  0004                     	;# 
  2435  0005                     	;# 
  2436  0006                     	;# 
  2437  0007                     	;# 
  2438  0008                     	;# 
  2439  0009                     	;# 
  2440  000A                     	;# 
  2441  000B                     	;# 
  2442  000C                     	;# 
  2443  000D                     	;# 
  2444  000E                     	;# 
  2445  0010                     	;# 
  2446  0011                     	;# 
  2447  0012                     	;# 
  2448  0013                     	;# 
  2449  0015                     	;# 
  2450  0016                     	;# 
  2451  0016                     	;# 
  2452  0017                     	;# 
  2453  0018                     	;# 
  2454  0019                     	;# 
  2455  001A                     	;# 
  2456  001B                     	;# 
  2457  001C                     	;# 
  2458  008C                     	;# 
  2459  008D                     	;# 
  2460  008E                     	;# 
  2461  0090                     	;# 
  2462  0091                     	;# 
  2463  0092                     	;# 
  2464  0093                     	;# 
  2465  0095                     	;# 
  2466  0096                     	;# 
  2467  0097                     	;# 
  2468  0098                     	;# 
  2469  0099                     	;# 
  2470  009A                     	;# 
  2471  009B                     	;# 
  2472  009B                     	;# 
  2473  009C                     	;# 
  2474  009D                     	;# 
  2475  009E                     	;# 
  2476  009F                     	;# 
  2477  010C                     	;# 
  2478  010D                     	;# 
  2479  010E                     	;# 
  2480  0111                     	;# 
  2481  0112                     	;# 
  2482  0113                     	;# 
  2483  0114                     	;# 
  2484  0115                     	;# 
  2485  0116                     	;# 
  2486  0117                     	;# 
  2487  0118                     	;# 
  2488  0119                     	;# 
  2489  011A                     	;# 
  2490  011B                     	;# 
  2491  011B                     	;# 
  2492  011C                     	;# 
  2493  018C                     	;# 
  2494  018D                     	;# 
  2495  018E                     	;# 
  2496  0191                     	;# 
  2497  0191                     	;# 
  2498  0192                     	;# 
  2499  0193                     	;# 
  2500  0193                     	;# 
  2501  0194                     	;# 
  2502  0195                     	;# 
  2503  0196                     	;# 
  2504  0197                     	;# 
  2505  0199                     	;# 
  2506  0199                     	;# 
  2507  0199                     	;# 
  2508  019A                     	;# 
  2509  019A                     	;# 
  2510  019A                     	;# 
  2511  019B                     	;# 
  2512  019B                     	;# 
  2513  019B                     	;# 
  2514  019B                     	;# 
  2515  019B                     	;# 
  2516  019C                     	;# 
  2517  019C                     	;# 
  2518  019C                     	;# 
  2519  019D                     	;# 
  2520  019D                     	;# 
  2521  019D                     	;# 
  2522  019E                     	;# 
  2523  019E                     	;# 
  2524  019E                     	;# 
  2525  019F                     	;# 
  2526  019F                     	;# 
  2527  019F                     	;# 
  2528  019F                     	;# 
  2529  019F                     	;# 
  2530  020C                     	;# 
  2531  020D                     	;# 
  2532  020E                     	;# 
  2533  0210                     	;# 
  2534  0211                     	;# 
  2535  0211                     	;# 
  2536  0212                     	;# 
  2537  0212                     	;# 
  2538  0213                     	;# 
  2539  0213                     	;# 
  2540  0214                     	;# 
  2541  0214                     	;# 
  2542  0215                     	;# 
  2543  0215                     	;# 
  2544  0215                     	;# 
  2545  0215                     	;# 
  2546  0216                     	;# 
  2547  0216                     	;# 
  2548  0217                     	;# 
  2549  0217                     	;# 
  2550  028C                     	;# 
  2551  028D                     	;# 
  2552  028E                     	;# 
  2553  0291                     	;# 
  2554  0291                     	;# 
  2555  0292                     	;# 
  2556  0293                     	;# 
  2557  0293                     	;# 
  2558  0298                     	;# 
  2559  0298                     	;# 
  2560  0299                     	;# 
  2561  029A                     	;# 
  2562  029A                     	;# 
  2563  029E                     	;# 
  2564  030C                     	;# 
  2565  030D                     	;# 
  2566  030E                     	;# 
  2567  038C                     	;# 
  2568  038D                     	;# 
  2569  038E                     	;# 
  2570  0390                     	;# 
  2571  0391                     	;# 
  2572  0392                     	;# 
  2573  0393                     	;# 
  2574  0394                     	;# 
  2575  0395                     	;# 
  2576  0396                     	;# 
  2577  0397                     	;# 
  2578  0398                     	;# 
  2579  0399                     	;# 
  2580  039D                     	;# 
  2581  039E                     	;# 
  2582  039F                     	;# 
  2583  0415                     	;# 
  2584  0416                     	;# 
  2585  0417                     	;# 
  2586  041C                     	;# 
  2587  041D                     	;# 
  2588  041E                     	;# 
  2589  0498                     	;# 
  2590  0498                     	;# 
  2591  0499                     	;# 
  2592  049A                     	;# 
  2593  049B                     	;# 
  2594  049B                     	;# 
  2595  049C                     	;# 
  2596  049D                     	;# 
  2597  049E                     	;# 
  2598  049F                     	;# 
  2599  0511                     	;# 
  2600  0515                     	;# 
  2601  0617                     	;# 
  2602  0618                     	;# 
  2603  0619                     	;# 
  2604  0619                     	;# 
  2605  061A                     	;# 
  2606  061B                     	;# 
  2607  061C                     	;# 
  2608  061C                     	;# 
  2609  0691                     	;# 
  2610  0692                     	;# 
  2611  0693                     	;# 
  2612  0694                     	;# 
  2613  0695                     	;# 
  2614  0696                     	;# 
  2615  0697                     	;# 
  2616  0698                     	;# 
  2617  0699                     	;# 
  2618  069A                     	;# 
  2619  069B                     	;# 
  2620  069C                     	;# 
  2621  069D                     	;# 
  2622  069E                     	;# 
  2623  069F                     	;# 
  2624  0E0F                     	;# 
  2625  0E10                     	;# 
  2626  0E11                     	;# 
  2627  0E12                     	;# 
  2628  0E13                     	;# 
  2629  0E14                     	;# 
  2630  0E15                     	;# 
  2631  0E17                     	;# 
  2632  0E20                     	;# 
  2633  0E21                     	;# 
  2634  0E22                     	;# 
  2635  0E24                     	;# 
  2636  0E25                     	;# 
  2637  0E28                     	;# 
  2638  0E29                     	;# 
  2639  0E2A                     	;# 
  2640  0E2B                     	;# 
  2641  0E90                     	;# 
  2642  0E91                     	;# 
  2643  0E92                     	;# 
  2644  0E93                     	;# 
  2645  0E94                     	;# 
  2646  0E95                     	;# 
  2647  0E96                     	;# 
  2648  0E97                     	;# 
  2649  0E98                     	;# 
  2650  0E99                     	;# 
  2651  0E9A                     	;# 
  2652  0E9B                     	;# 
  2653  0E9C                     	;# 
  2654  0E9D                     	;# 
  2655  0E9E                     	;# 
  2656  0E9F                     	;# 
  2657  0EA0                     	;# 
  2658  0EA1                     	;# 
  2659  0EA2                     	;# 
  2660  0EA3                     	;# 
  2661  0EA4                     	;# 
  2662  0EA5                     	;# 
  2663  0EA6                     	;# 
  2664  0EA7                     	;# 
  2665  0F0F                     	;# 
  2666  0F10                     	;# 
  2667  0F11                     	;# 
  2668  0F12                     	;# 
  2669  0F13                     	;# 
  2670  0F14                     	;# 
  2671  0F15                     	;# 
  2672  0F16                     	;# 
  2673  0F17                     	;# 
  2674  0F18                     	;# 
  2675  0F19                     	;# 
  2676  0F1A                     	;# 
  2677  0F1B                     	;# 
  2678  0F1C                     	;# 
  2679  0F1D                     	;# 
  2680  0F1E                     	;# 
  2681  0F1F                     	;# 
  2682  0F20                     	;# 
  2683  0F21                     	;# 
  2684  0F22                     	;# 
  2685  0F23                     	;# 
  2686  0F24                     	;# 
  2687  0F25                     	;# 
  2688  0F26                     	;# 
  2689  0F27                     	;# 
  2690  0F28                     	;# 
  2691  0F29                     	;# 
  2692  0F2A                     	;# 
  2693  0F2B                     	;# 
  2694  0F2C                     	;# 
  2695  0F2D                     	;# 
  2696  0F2E                     	;# 
  2697  0F2F                     	;# 
  2698  0F30                     	;# 
  2699  0F31                     	;# 
  2700  0F32                     	;# 
  2701  0F33                     	;# 
  2702  0F34                     	;# 
  2703  0F35                     	;# 
  2704  0F36                     	;# 
  2705  0F37                     	;# 
  2706  0FE4                     	;# 
  2707  0FE5                     	;# 
  2708  0FE6                     	;# 
  2709  0FE7                     	;# 
  2710  0FE8                     	;# 
  2711  0FE9                     	;# 
  2712  0FEA                     	;# 
  2713  0FEB                     	;# 
  2714  0FED                     	;# 
  2715  0FEE                     	;# 
  2716  0FEF                     	;# 
  2717  0000                     	;# 
  2718  0001                     	;# 
  2719  0002                     	;# 
  2720  0003                     	;# 
  2721  0004                     	;# 
  2722  0005                     	;# 
  2723  0006                     	;# 
  2724  0007                     	;# 
  2725  0008                     	;# 
  2726  0009                     	;# 
  2727  000A                     	;# 
  2728  000B                     	;# 
  2729  000C                     	;# 
  2730  000D                     	;# 
  2731  000E                     	;# 
  2732  0010                     	;# 
  2733  0011                     	;# 
  2734  0012                     	;# 
  2735  0013                     	;# 
  2736  0015                     	;# 
  2737  0016                     	;# 
  2738  0016                     	;# 
  2739  0017                     	;# 
  2740  0018                     	;# 
  2741  0019                     	;# 
  2742  001A                     	;# 
  2743  001B                     	;# 
  2744  001C                     	;# 
  2745  008C                     	;# 
  2746  008D                     	;# 
  2747  008E                     	;# 
  2748  0090                     	;# 
  2749  0091                     	;# 
  2750  0092                     	;# 
  2751  0093                     	;# 
  2752  0095                     	;# 
  2753  0096                     	;# 
  2754  0097                     	;# 
  2755  0098                     	;# 
  2756  0099                     	;# 
  2757  009A                     	;# 
  2758  009B                     	;# 
  2759  009B                     	;# 
  2760  009C                     	;# 
  2761  009D                     	;# 
  2762  009E                     	;# 
  2763  009F                     	;# 
  2764  010C                     	;# 
  2765  010D                     	;# 
  2766  010E                     	;# 
  2767  0111                     	;# 
  2768  0112                     	;# 
  2769  0113                     	;# 
  2770  0114                     	;# 
  2771  0115                     	;# 
  2772  0116                     	;# 
  2773  0117                     	;# 
  2774  0118                     	;# 
  2775  0119                     	;# 
  2776  011A                     	;# 
  2777  011B                     	;# 
  2778  011B                     	;# 
  2779  011C                     	;# 
  2780  018C                     	;# 
  2781  018D                     	;# 
  2782  018E                     	;# 
  2783  0191                     	;# 
  2784  0191                     	;# 
  2785  0192                     	;# 
  2786  0193                     	;# 
  2787  0193                     	;# 
  2788  0194                     	;# 
  2789  0195                     	;# 
  2790  0196                     	;# 
  2791  0197                     	;# 
  2792  0199                     	;# 
  2793  0199                     	;# 
  2794  0199                     	;# 
  2795  019A                     	;# 
  2796  019A                     	;# 
  2797  019A                     	;# 
  2798  019B                     	;# 
  2799  019B                     	;# 
  2800  019B                     	;# 
  2801  019B                     	;# 
  2802  019B                     	;# 
  2803  019C                     	;# 
  2804  019C                     	;# 
  2805  019C                     	;# 
  2806  019D                     	;# 
  2807  019D                     	;# 
  2808  019D                     	;# 
  2809  019E                     	;# 
  2810  019E                     	;# 
  2811  019E                     	;# 
  2812  019F                     	;# 
  2813  019F                     	;# 
  2814  019F                     	;# 
  2815  019F                     	;# 
  2816  019F                     	;# 
  2817  020C                     	;# 
  2818  020D                     	;# 
  2819  020E                     	;# 
  2820  0210                     	;# 
  2821  0211                     	;# 
  2822  0211                     	;# 
  2823  0212                     	;# 
  2824  0212                     	;# 
  2825  0213                     	;# 
  2826  0213                     	;# 
  2827  0214                     	;# 
  2828  0214                     	;# 
  2829  0215                     	;# 
  2830  0215                     	;# 
  2831  0215                     	;# 
  2832  0215                     	;# 
  2833  0216                     	;# 
  2834  0216                     	;# 
  2835  0217                     	;# 
  2836  0217                     	;# 
  2837  028C                     	;# 
  2838  028D                     	;# 
  2839  028E                     	;# 
  2840  0291                     	;# 
  2841  0291                     	;# 
  2842  0292                     	;# 
  2843  0293                     	;# 
  2844  0293                     	;# 
  2845  0298                     	;# 
  2846  0298                     	;# 
  2847  0299                     	;# 
  2848  029A                     	;# 
  2849  029A                     	;# 
  2850  029E                     	;# 
  2851  030C                     	;# 
  2852  030D                     	;# 
  2853  030E                     	;# 
  2854  038C                     	;# 
  2855  038D                     	;# 
  2856  038E                     	;# 
  2857  0390                     	;# 
  2858  0391                     	;# 
  2859  0392                     	;# 
  2860  0393                     	;# 
  2861  0394                     	;# 
  2862  0395                     	;# 
  2863  0396                     	;# 
  2864  0397                     	;# 
  2865  0398                     	;# 
  2866  0399                     	;# 
  2867  039D                     	;# 
  2868  039E                     	;# 
  2869  039F                     	;# 
  2870  0415                     	;# 
  2871  0416                     	;# 
  2872  0417                     	;# 
  2873  041C                     	;# 
  2874  041D                     	;# 
  2875  041E                     	;# 
  2876  0498                     	;# 
  2877  0498                     	;# 
  2878  0499                     	;# 
  2879  049A                     	;# 
  2880  049B                     	;# 
  2881  049B                     	;# 
  2882  049C                     	;# 
  2883  049D                     	;# 
  2884  049E                     	;# 
  2885  049F                     	;# 
  2886  0511                     	;# 
  2887  0515                     	;# 
  2888  0617                     	;# 
  2889  0618                     	;# 
  2890  0619                     	;# 
  2891  0619                     	;# 
  2892  061A                     	;# 
  2893  061B                     	;# 
  2894  061C                     	;# 
  2895  061C                     	;# 
  2896  0691                     	;# 
  2897  0692                     	;# 
  2898  0693                     	;# 
  2899  0694                     	;# 
  2900  0695                     	;# 
  2901  0696                     	;# 
  2902  0697                     	;# 
  2903  0698                     	;# 
  2904  0699                     	;# 
  2905  069A                     	;# 
  2906  069B                     	;# 
  2907  069C                     	;# 
  2908  069D                     	;# 
  2909  069E                     	;# 
  2910  069F                     	;# 
  2911  0E0F                     	;# 
  2912  0E10                     	;# 
  2913  0E11                     	;# 
  2914  0E12                     	;# 
  2915  0E13                     	;# 
  2916  0E14                     	;# 
  2917  0E15                     	;# 
  2918  0E17                     	;# 
  2919  0E20                     	;# 
  2920  0E21                     	;# 
  2921  0E22                     	;# 
  2922  0E24                     	;# 
  2923  0E25                     	;# 
  2924  0E28                     	;# 
  2925  0E29                     	;# 
  2926  0E2A                     	;# 
  2927  0E2B                     	;# 
  2928  0E90                     	;# 
  2929  0E91                     	;# 
  2930  0E92                     	;# 
  2931  0E93                     	;# 
  2932  0E94                     	;# 
  2933  0E95                     	;# 
  2934  0E96                     	;# 
  2935  0E97                     	;# 
  2936  0E98                     	;# 
  2937  0E99                     	;# 
  2938  0E9A                     	;# 
  2939  0E9B                     	;# 
  2940  0E9C                     	;# 
  2941  0E9D                     	;# 
  2942  0E9E                     	;# 
  2943  0E9F                     	;# 
  2944  0EA0                     	;# 
  2945  0EA1                     	;# 
  2946  0EA2                     	;# 
  2947  0EA3                     	;# 
  2948  0EA4                     	;# 
  2949  0EA5                     	;# 
  2950  0EA6                     	;# 
  2951  0EA7                     	;# 
  2952  0F0F                     	;# 
  2953  0F10                     	;# 
  2954  0F11                     	;# 
  2955  0F12                     	;# 
  2956  0F13                     	;# 
  2957  0F14                     	;# 
  2958  0F15                     	;# 
  2959  0F16                     	;# 
  2960  0F17                     	;# 
  2961  0F18                     	;# 
  2962  0F19                     	;# 
  2963  0F1A                     	;# 
  2964  0F1B                     	;# 
  2965  0F1C                     	;# 
  2966  0F1D                     	;# 
  2967  0F1E                     	;# 
  2968  0F1F                     	;# 
  2969  0F20                     	;# 
  2970  0F21                     	;# 
  2971  0F22                     	;# 
  2972  0F23                     	;# 
  2973  0F24                     	;# 
  2974  0F25                     	;# 
  2975  0F26                     	;# 
  2976  0F27                     	;# 
  2977  0F28                     	;# 
  2978  0F29                     	;# 
  2979  0F2A                     	;# 
  2980  0F2B                     	;# 
  2981  0F2C                     	;# 
  2982  0F2D                     	;# 
  2983  0F2E                     	;# 
  2984  0F2F                     	;# 
  2985  0F30                     	;# 
  2986  0F31                     	;# 
  2987  0F32                     	;# 
  2988  0F33                     	;# 
  2989  0F34                     	;# 
  2990  0F35                     	;# 
  2991  0F36                     	;# 
  2992  0F37                     	;# 
  2993  0FE4                     	;# 
  2994  0FE5                     	;# 
  2995  0FE6                     	;# 
  2996  0FE7                     	;# 
  2997  0FE8                     	;# 
  2998  0FE9                     	;# 
  2999  0FEA                     	;# 
  3000  0FEB                     	;# 
  3001  0FED                     	;# 
  3002  0FEE                     	;# 
  3003  0FEF                     	;# 
  3004  0000                     	;# 
  3005  0001                     	;# 
  3006  0002                     	;# 
  3007  0003                     	;# 
  3008  0004                     	;# 
  3009  0005                     	;# 
  3010  0006                     	;# 
  3011  0007                     	;# 
  3012  0008                     	;# 
  3013  0009                     	;# 
  3014  000A                     	;# 
  3015  000B                     	;# 
  3016  000C                     	;# 
  3017  000D                     	;# 
  3018  000E                     	;# 
  3019  0010                     	;# 
  3020  0011                     	;# 
  3021  0012                     	;# 
  3022  0013                     	;# 
  3023  0015                     	;# 
  3024  0016                     	;# 
  3025  0016                     	;# 
  3026  0017                     	;# 
  3027  0018                     	;# 
  3028  0019                     	;# 
  3029  001A                     	;# 
  3030  001B                     	;# 
  3031  001C                     	;# 
  3032  008C                     	;# 
  3033  008D                     	;# 
  3034  008E                     	;# 
  3035  0090                     	;# 
  3036  0091                     	;# 
  3037  0092                     	;# 
  3038  0093                     	;# 
  3039  0095                     	;# 
  3040  0096                     	;# 
  3041  0097                     	;# 
  3042  0098                     	;# 
  3043  0099                     	;# 
  3044  009A                     	;# 
  3045  009B                     	;# 
  3046  009B                     	;# 
  3047  009C                     	;# 
  3048  009D                     	;# 
  3049  009E                     	;# 
  3050  009F                     	;# 
  3051  010C                     	;# 
  3052  010D                     	;# 
  3053  010E                     	;# 
  3054  0111                     	;# 
  3055  0112                     	;# 
  3056  0113                     	;# 
  3057  0114                     	;# 
  3058  0115                     	;# 
  3059  0116                     	;# 
  3060  0117                     	;# 
  3061  0118                     	;# 
  3062  0119                     	;# 
  3063  011A                     	;# 
  3064  011B                     	;# 
  3065  011B                     	;# 
  3066  011C                     	;# 
  3067  018C                     	;# 
  3068  018D                     	;# 
  3069  018E                     	;# 
  3070  0191                     	;# 
  3071  0191                     	;# 
  3072  0192                     	;# 
  3073  0193                     	;# 
  3074  0193                     	;# 
  3075  0194                     	;# 
  3076  0195                     	;# 
  3077  0196                     	;# 
  3078  0197                     	;# 
  3079  0199                     	;# 
  3080  0199                     	;# 
  3081  0199                     	;# 
  3082  019A                     	;# 
  3083  019A                     	;# 
  3084  019A                     	;# 
  3085  019B                     	;# 
  3086  019B                     	;# 
  3087  019B                     	;# 
  3088  019B                     	;# 
  3089  019B                     	;# 
  3090  019C                     	;# 
  3091  019C                     	;# 
  3092  019C                     	;# 
  3093  019D                     	;# 
  3094  019D                     	;# 
  3095  019D                     	;# 
  3096  019E                     	;# 
  3097  019E                     	;# 
  3098  019E                     	;# 
  3099  019F                     	;# 
  3100  019F                     	;# 
  3101  019F                     	;# 
  3102  019F                     	;# 
  3103  019F                     	;# 
  3104  020C                     	;# 
  3105  020D                     	;# 
  3106  020E                     	;# 
  3107  0210                     	;# 
  3108  0211                     	;# 
  3109  0211                     	;# 
  3110  0212                     	;# 
  3111  0212                     	;# 
  3112  0213                     	;# 
  3113  0213                     	;# 
  3114  0214                     	;# 
  3115  0214                     	;# 
  3116  0215                     	;# 
  3117  0215                     	;# 
  3118  0215                     	;# 
  3119  0215                     	;# 
  3120  0216                     	;# 
  3121  0216                     	;# 
  3122  0217                     	;# 
  3123  0217                     	;# 
  3124  028C                     	;# 
  3125  028D                     	;# 
  3126  028E                     	;# 
  3127  0291                     	;# 
  3128  0291                     	;# 
  3129  0292                     	;# 
  3130  0293                     	;# 
  3131  0293                     	;# 
  3132  0298                     	;# 
  3133  0298                     	;# 
  3134  0299                     	;# 
  3135  029A                     	;# 
  3136  029A                     	;# 
  3137  029E                     	;# 
  3138  030C                     	;# 
  3139  030D                     	;# 
  3140  030E                     	;# 
  3141  038C                     	;# 
  3142  038D                     	;# 
  3143  038E                     	;# 
  3144  0390                     	;# 
  3145  0391                     	;# 
  3146  0392                     	;# 
  3147  0393                     	;# 
  3148  0394                     	;# 
  3149  0395                     	;# 
  3150  0396                     	;# 
  3151  0397                     	;# 
  3152  0398                     	;# 
  3153  0399                     	;# 
  3154  039D                     	;# 
  3155  039E                     	;# 
  3156  039F                     	;# 
  3157  0415                     	;# 
  3158  0416                     	;# 
  3159  0417                     	;# 
  3160  041C                     	;# 
  3161  041D                     	;# 
  3162  041E                     	;# 
  3163  0498                     	;# 
  3164  0498                     	;# 
  3165  0499                     	;# 
  3166  049A                     	;# 
  3167  049B                     	;# 
  3168  049B                     	;# 
  3169  049C                     	;# 
  3170  049D                     	;# 
  3171  049E                     	;# 
  3172  049F                     	;# 
  3173  0511                     	;# 
  3174  0515                     	;# 
  3175  0617                     	;# 
  3176  0618                     	;# 
  3177  0619                     	;# 
  3178  0619                     	;# 
  3179  061A                     	;# 
  3180  061B                     	;# 
  3181  061C                     	;# 
  3182  061C                     	;# 
  3183  0691                     	;# 
  3184  0692                     	;# 
  3185  0693                     	;# 
  3186  0694                     	;# 
  3187  0695                     	;# 
  3188  0696                     	;# 
  3189  0697                     	;# 
  3190  0698                     	;# 
  3191  0699                     	;# 
  3192  069A                     	;# 
  3193  069B                     	;# 
  3194  069C                     	;# 
  3195  069D                     	;# 
  3196  069E                     	;# 
  3197  069F                     	;# 
  3198  0E0F                     	;# 
  3199  0E10                     	;# 
  3200  0E11                     	;# 
  3201  0E12                     	;# 
  3202  0E13                     	;# 
  3203  0E14                     	;# 
  3204  0E15                     	;# 
  3205  0E17                     	;# 
  3206  0E20                     	;# 
  3207  0E21                     	;# 
  3208  0E22                     	;# 
  3209  0E24                     	;# 
  3210  0E25                     	;# 
  3211  0E28                     	;# 
  3212  0E29                     	;# 
  3213  0E2A                     	;# 
  3214  0E2B                     	;# 
  3215  0E90                     	;# 
  3216  0E91                     	;# 
  3217  0E92                     	;# 
  3218  0E93                     	;# 
  3219  0E94                     	;# 
  3220  0E95                     	;# 
  3221  0E96                     	;# 
  3222  0E97                     	;# 
  3223  0E98                     	;# 
  3224  0E99                     	;# 
  3225  0E9A                     	;# 
  3226  0E9B                     	;# 
  3227  0E9C                     	;# 
  3228  0E9D                     	;# 
  3229  0E9E                     	;# 
  3230  0E9F                     	;# 
  3231  0EA0                     	;# 
  3232  0EA1                     	;# 
  3233  0EA2                     	;# 
  3234  0EA3                     	;# 
  3235  0EA4                     	;# 
  3236  0EA5                     	;# 
  3237  0EA6                     	;# 
  3238  0EA7                     	;# 
  3239  0F0F                     	;# 
  3240  0F10                     	;# 
  3241  0F11                     	;# 
  3242  0F12                     	;# 
  3243  0F13                     	;# 
  3244  0F14                     	;# 
  3245  0F15                     	;# 
  3246  0F16                     	;# 
  3247  0F17                     	;# 
  3248  0F18                     	;# 
  3249  0F19                     	;# 
  3250  0F1A                     	;# 
  3251  0F1B                     	;# 
  3252  0F1C                     	;# 
  3253  0F1D                     	;# 
  3254  0F1E                     	;# 
  3255  0F1F                     	;# 
  3256  0F20                     	;# 
  3257  0F21                     	;# 
  3258  0F22                     	;# 
  3259  0F23                     	;# 
  3260  0F24                     	;# 
  3261  0F25                     	;# 
  3262  0F26                     	;# 
  3263  0F27                     	;# 
  3264  0F28                     	;# 
  3265  0F29                     	;# 
  3266  0F2A                     	;# 
  3267  0F2B                     	;# 
  3268  0F2C                     	;# 
  3269  0F2D                     	;# 
  3270  0F2E                     	;# 
  3271  0F2F                     	;# 
  3272  0F30                     	;# 
  3273  0F31                     	;# 
  3274  0F32                     	;# 
  3275  0F33                     	;# 
  3276  0F34                     	;# 
  3277  0F35                     	;# 
  3278  0F36                     	;# 
  3279  0F37                     	;# 
  3280  0FE4                     	;# 
  3281  0FE5                     	;# 
  3282  0FE6                     	;# 
  3283  0FE7                     	;# 
  3284  0FE8                     	;# 
  3285  0FE9                     	;# 
  3286  0FEA                     	;# 
  3287  0FEB                     	;# 
  3288  0FED                     	;# 
  3289  0FEE                     	;# 
  3290  0FEF                     	;# 
  3291  0000                     	;# 
  3292  0001                     	;# 
  3293  0002                     	;# 
  3294  0003                     	;# 
  3295  0004                     	;# 
  3296  0005                     	;# 
  3297  0006                     	;# 
  3298  0007                     	;# 
  3299  0008                     	;# 
  3300  0009                     	;# 
  3301  000A                     	;# 
  3302  000B                     	;# 
  3303  000C                     	;# 
  3304  000D                     	;# 
  3305  000E                     	;# 
  3306  0010                     	;# 
  3307  0011                     	;# 
  3308  0012                     	;# 
  3309  0013                     	;# 
  3310  0015                     	;# 
  3311  0016                     	;# 
  3312  0016                     	;# 
  3313  0017                     	;# 
  3314  0018                     	;# 
  3315  0019                     	;# 
  3316  001A                     	;# 
  3317  001B                     	;# 
  3318  001C                     	;# 
  3319  008C                     	;# 
  3320  008D                     	;# 
  3321  008E                     	;# 
  3322  0090                     	;# 
  3323  0091                     	;# 
  3324  0092                     	;# 
  3325  0093                     	;# 
  3326  0095                     	;# 
  3327  0096                     	;# 
  3328  0097                     	;# 
  3329  0098                     	;# 
  3330  0099                     	;# 
  3331  009A                     	;# 
  3332  009B                     	;# 
  3333  009B                     	;# 
  3334  009C                     	;# 
  3335  009D                     	;# 
  3336  009E                     	;# 
  3337  009F                     	;# 
  3338  010C                     	;# 
  3339  010D                     	;# 
  3340  010E                     	;# 
  3341  0111                     	;# 
  3342  0112                     	;# 
  3343  0113                     	;# 
  3344  0114                     	;# 
  3345  0115                     	;# 
  3346  0116                     	;# 
  3347  0117                     	;# 
  3348  0118                     	;# 
  3349  0119                     	;# 
  3350  011A                     	;# 
  3351  011B                     	;# 
  3352  011B                     	;# 
  3353  011C                     	;# 
  3354  018C                     	;# 
  3355  018D                     	;# 
  3356  018E                     	;# 
  3357  0191                     	;# 
  3358  0191                     	;# 
  3359  0192                     	;# 
  3360  0193                     	;# 
  3361  0193                     	;# 
  3362  0194                     	;# 
  3363  0195                     	;# 
  3364  0196                     	;# 
  3365  0197                     	;# 
  3366  0199                     	;# 
  3367  0199                     	;# 
  3368  0199                     	;# 
  3369  019A                     	;# 
  3370  019A                     	;# 
  3371  019A                     	;# 
  3372  019B                     	;# 
  3373  019B                     	;# 
  3374  019B                     	;# 
  3375  019B                     	;# 
  3376  019B                     	;# 
  3377  019C                     	;# 
  3378  019C                     	;# 
  3379  019C                     	;# 
  3380  019D                     	;# 
  3381  019D                     	;# 
  3382  019D                     	;# 
  3383  019E                     	;# 
  3384  019E                     	;# 
  3385  019E                     	;# 
  3386  019F                     	;# 
  3387  019F                     	;# 
  3388  019F                     	;# 
  3389  019F                     	;# 
  3390  019F                     	;# 
  3391  020C                     	;# 
  3392  020D                     	;# 
  3393  020E                     	;# 
  3394  0210                     	;# 
  3395  0211                     	;# 
  3396  0211                     	;# 
  3397  0212                     	;# 
  3398  0212                     	;# 
  3399  0213                     	;# 
  3400  0213                     	;# 
  3401  0214                     	;# 
  3402  0214                     	;# 
  3403  0215                     	;# 
  3404  0215                     	;# 
  3405  0215                     	;# 
  3406  0215                     	;# 
  3407  0216                     	;# 
  3408  0216                     	;# 
  3409  0217                     	;# 
  3410  0217                     	;# 
  3411  028C                     	;# 
  3412  028D                     	;# 
  3413  028E                     	;# 
  3414  0291                     	;# 
  3415  0291                     	;# 
  3416  0292                     	;# 
  3417  0293                     	;# 
  3418  0293                     	;# 
  3419  0298                     	;# 
  3420  0298                     	;# 
  3421  0299                     	;# 
  3422  029A                     	;# 
  3423  029A                     	;# 
  3424  029E                     	;# 
  3425  030C                     	;# 
  3426  030D                     	;# 
  3427  030E                     	;# 
  3428  038C                     	;# 
  3429  038D                     	;# 
  3430  038E                     	;# 
  3431  0390                     	;# 
  3432  0391                     	;# 
  3433  0392                     	;# 
  3434  0393                     	;# 
  3435  0394                     	;# 
  3436  0395                     	;# 
  3437  0396                     	;# 
  3438  0397                     	;# 
  3439  0398                     	;# 
  3440  0399                     	;# 
  3441  039D                     	;# 
  3442  039E                     	;# 
  3443  039F                     	;# 
  3444  0415                     	;# 
  3445  0416                     	;# 
  3446  0417                     	;# 
  3447  041C                     	;# 
  3448  041D                     	;# 
  3449  041E                     	;# 
  3450  0498                     	;# 
  3451  0498                     	;# 
  3452  0499                     	;# 
  3453  049A                     	;# 
  3454  049B                     	;# 
  3455  049B                     	;# 
  3456  049C                     	;# 
  3457  049D                     	;# 
  3458  049E                     	;# 
  3459  049F                     	;# 
  3460  0511                     	;# 
  3461  0515                     	;# 
  3462  0617                     	;# 
  3463  0618                     	;# 
  3464  0619                     	;# 
  3465  0619                     	;# 
  3466  061A                     	;# 
  3467  061B                     	;# 
  3468  061C                     	;# 
  3469  061C                     	;# 
  3470  0691                     	;# 
  3471  0692                     	;# 
  3472  0693                     	;# 
  3473  0694                     	;# 
  3474  0695                     	;# 
  3475  0696                     	;# 
  3476  0697                     	;# 
  3477  0698                     	;# 
  3478  0699                     	;# 
  3479  069A                     	;# 
  3480  069B                     	;# 
  3481  069C                     	;# 
  3482  069D                     	;# 
  3483  069E                     	;# 
  3484  069F                     	;# 
  3485  0E0F                     	;# 
  3486  0E10                     	;# 
  3487  0E11                     	;# 
  3488  0E12                     	;# 
  3489  0E13                     	;# 
  3490  0E14                     	;# 
  3491  0E15                     	;# 
  3492  0E17                     	;# 
  3493  0E20                     	;# 
  3494  0E21                     	;# 
  3495  0E22                     	;# 
  3496  0E24                     	;# 
  3497  0E25                     	;# 
  3498  0E28                     	;# 
  3499  0E29                     	;# 
  3500  0E2A                     	;# 
  3501  0E2B                     	;# 
  3502  0E90                     	;# 
  3503  0E91                     	;# 
  3504  0E92                     	;# 
  3505  0E93                     	;# 
  3506  0E94                     	;# 
  3507  0E95                     	;# 
  3508  0E96                     	;# 
  3509  0E97                     	;# 
  3510  0E98                     	;# 
  3511  0E99                     	;# 
  3512  0E9A                     	;# 
  3513  0E9B                     	;# 
  3514  0E9C                     	;# 
  3515  0E9D                     	;# 
  3516  0E9E                     	;# 
  3517  0E9F                     	;# 
  3518  0EA0                     	;# 
  3519  0EA1                     	;# 
  3520  0EA2                     	;# 
  3521  0EA3                     	;# 
  3522  0EA4                     	;# 
  3523  0EA5                     	;# 
  3524  0EA6                     	;# 
  3525  0EA7                     	;# 
  3526  0F0F                     	;# 
  3527  0F10                     	;# 
  3528  0F11                     	;# 
  3529  0F12                     	;# 
  3530  0F13                     	;# 
  3531  0F14                     	;# 
  3532  0F15                     	;# 
  3533  0F16                     	;# 
  3534  0F17                     	;# 
  3535  0F18                     	;# 
  3536  0F19                     	;# 
  3537  0F1A                     	;# 
  3538  0F1B                     	;# 
  3539  0F1C                     	;# 
  3540  0F1D                     	;# 
  3541  0F1E                     	;# 
  3542  0F1F                     	;# 
  3543  0F20                     	;# 
  3544  0F21                     	;# 
  3545  0F22                     	;# 
  3546  0F23                     	;# 
  3547  0F24                     	;# 
  3548  0F25                     	;# 
  3549  0F26                     	;# 
  3550  0F27                     	;# 
  3551  0F28                     	;# 
  3552  0F29                     	;# 
  3553  0F2A                     	;# 
  3554  0F2B                     	;# 
  3555  0F2C                     	;# 
  3556  0F2D                     	;# 
  3557  0F2E                     	;# 
  3558  0F2F                     	;# 
  3559  0F30                     	;# 
  3560  0F31                     	;# 
  3561  0F32                     	;# 
  3562  0F33                     	;# 
  3563  0F34                     	;# 
  3564  0F35                     	;# 
  3565  0F36                     	;# 
  3566  0F37                     	;# 
  3567  0FE4                     	;# 
  3568  0FE5                     	;# 
  3569  0FE6                     	;# 
  3570  0FE7                     	;# 
  3571  0FE8                     	;# 
  3572  0FE9                     	;# 
  3573  0FEA                     	;# 
  3574  0FEB                     	;# 
  3575  0FED                     	;# 
  3576  0FEE                     	;# 
  3577  0FEF                     	;# 
  3578  0000                     	;# 
  3579  0001                     	;# 
  3580  0002                     	;# 
  3581  0003                     	;# 
  3582  0004                     	;# 
  3583  0005                     	;# 
  3584  0006                     	;# 
  3585  0007                     	;# 
  3586  0008                     	;# 
  3587  0009                     	;# 
  3588  000A                     	;# 
  3589  000B                     	;# 
  3590  000C                     	;# 
  3591  000D                     	;# 
  3592  000E                     	;# 
  3593  0010                     	;# 
  3594  0011                     	;# 
  3595  0012                     	;# 
  3596  0013                     	;# 
  3597  0015                     	;# 
  3598  0016                     	;# 
  3599  0016                     	;# 
  3600  0017                     	;# 
  3601  0018                     	;# 
  3602  0019                     	;# 
  3603  001A                     	;# 
  3604  001B                     	;# 
  3605  001C                     	;# 
  3606  008C                     	;# 
  3607  008D                     	;# 
  3608  008E                     	;# 
  3609  0090                     	;# 
  3610  0091                     	;# 
  3611  0092                     	;# 
  3612  0093                     	;# 
  3613  0095                     	;# 
  3614  0096                     	;# 
  3615  0097                     	;# 
  3616  0098                     	;# 
  3617  0099                     	;# 
  3618  009A                     	;# 
  3619  009B                     	;# 
  3620  009B                     	;# 
  3621  009C                     	;# 
  3622  009D                     	;# 
  3623  009E                     	;# 
  3624  009F                     	;# 
  3625  010C                     	;# 
  3626  010D                     	;# 
  3627  010E                     	;# 
  3628  0111                     	;# 
  3629  0112                     	;# 
  3630  0113                     	;# 
  3631  0114                     	;# 
  3632  0115                     	;# 
  3633  0116                     	;# 
  3634  0117                     	;# 
  3635  0118                     	;# 
  3636  0119                     	;# 
  3637  011A                     	;# 
  3638  011B                     	;# 
  3639  011B                     	;# 
  3640  011C                     	;# 
  3641  018C                     	;# 
  3642  018D                     	;# 
  3643  018E                     	;# 
  3644  0191                     	;# 
  3645  0191                     	;# 
  3646  0192                     	;# 
  3647  0193                     	;# 
  3648  0193                     	;# 
  3649  0194                     	;# 
  3650  0195                     	;# 
  3651  0196                     	;# 
  3652  0197                     	;# 
  3653  0199                     	;# 
  3654  0199                     	;# 
  3655  0199                     	;# 
  3656  019A                     	;# 
  3657  019A                     	;# 
  3658  019A                     	;# 
  3659  019B                     	;# 
  3660  019B                     	;# 
  3661  019B                     	;# 
  3662  019B                     	;# 
  3663  019B                     	;# 
  3664  019C                     	;# 
  3665  019C                     	;# 
  3666  019C                     	;# 
  3667  019D                     	;# 
  3668  019D                     	;# 
  3669  019D                     	;# 
  3670  019E                     	;# 
  3671  019E                     	;# 
  3672  019E                     	;# 
  3673  019F                     	;# 
  3674  019F                     	;# 
  3675  019F                     	;# 
  3676  019F                     	;# 
  3677  019F                     	;# 
  3678  020C                     	;# 
  3679  020D                     	;# 
  3680  020E                     	;# 
  3681  0210                     	;# 
  3682  0211                     	;# 
  3683  0211                     	;# 
  3684  0212                     	;# 
  3685  0212                     	;# 
  3686  0213                     	;# 
  3687  0213                     	;# 
  3688  0214                     	;# 
  3689  0214                     	;# 
  3690  0215                     	;# 
  3691  0215                     	;# 
  3692  0215                     	;# 
  3693  0215                     	;# 
  3694  0216                     	;# 
  3695  0216                     	;# 
  3696  0217                     	;# 
  3697  0217                     	;# 
  3698  028C                     	;# 
  3699  028D                     	;# 
  3700  028E                     	;# 
  3701  0291                     	;# 
  3702  0291                     	;# 
  3703  0292                     	;# 
  3704  0293                     	;# 
  3705  0293                     	;# 
  3706  0298                     	;# 
  3707  0298                     	;# 
  3708  0299                     	;# 
  3709  029A                     	;# 
  3710  029A                     	;# 
  3711  029E                     	;# 
  3712  030C                     	;# 
  3713  030D                     	;# 
  3714  030E                     	;# 
  3715  038C                     	;# 
  3716  038D                     	;# 
  3717  038E                     	;# 
  3718  0390                     	;# 
  3719  0391                     	;# 
  3720  0392                     	;# 
  3721  0393                     	;# 
  3722  0394                     	;# 
  3723  0395                     	;# 
  3724  0396                     	;# 
  3725  0397                     	;# 
  3726  0398                     	;# 
  3727  0399                     	;# 
  3728  039D                     	;# 
  3729  039E                     	;# 
  3730  039F                     	;# 
  3731  0415                     	;# 
  3732  0416                     	;# 
  3733  0417                     	;# 
  3734  041C                     	;# 
  3735  041D                     	;# 
  3736  041E                     	;# 
  3737  0498                     	;# 
  3738  0498                     	;# 
  3739  0499                     	;# 
  3740  049A                     	;# 
  3741  049B                     	;# 
  3742  049B                     	;# 
  3743  049C                     	;# 
  3744  049D                     	;# 
  3745  049E                     	;# 
  3746  049F                     	;# 
  3747  0511                     	;# 
  3748  0515                     	;# 
  3749  0617                     	;# 
  3750  0618                     	;# 
  3751  0619                     	;# 
  3752  0619                     	;# 
  3753  061A                     	;# 
  3754  061B                     	;# 
  3755  061C                     	;# 
  3756  061C                     	;# 
  3757  0691                     	;# 
  3758  0692                     	;# 
  3759  0693                     	;# 
  3760  0694                     	;# 
  3761  0695                     	;# 
  3762  0696                     	;# 
  3763  0697                     	;# 
  3764  0698                     	;# 
  3765  0699                     	;# 
  3766  069A                     	;# 
  3767  069B                     	;# 
  3768  069C                     	;# 
  3769  069D                     	;# 
  3770  069E                     	;# 
  3771  069F                     	;# 
  3772  0E0F                     	;# 
  3773  0E10                     	;# 
  3774  0E11                     	;# 
  3775  0E12                     	;# 
  3776  0E13                     	;# 
  3777  0E14                     	;# 
  3778  0E15                     	;# 
  3779  0E17                     	;# 
  3780  0E20                     	;# 
  3781  0E21                     	;# 
  3782  0E22                     	;# 
  3783  0E24                     	;# 
  3784  0E25                     	;# 
  3785  0E28                     	;# 
  3786  0E29                     	;# 
  3787  0E2A                     	;# 
  3788  0E2B                     	;# 
  3789  0E90                     	;# 
  3790  0E91                     	;# 
  3791  0E92                     	;# 
  3792  0E93                     	;# 
  3793  0E94                     	;# 
  3794  0E95                     	;# 
  3795  0E96                     	;# 
  3796  0E97                     	;# 
  3797  0E98                     	;# 
  3798  0E99                     	;# 
  3799  0E9A                     	;# 
  3800  0E9B                     	;# 
  3801  0E9C                     	;# 
  3802  0E9D                     	;# 
  3803  0E9E                     	;# 
  3804  0E9F                     	;# 
  3805  0EA0                     	;# 
  3806  0EA1                     	;# 
  3807  0EA2                     	;# 
  3808  0EA3                     	;# 
  3809  0EA4                     	;# 
  3810  0EA5                     	;# 
  3811  0EA6                     	;# 
  3812  0EA7                     	;# 
  3813  0F0F                     	;# 
  3814  0F10                     	;# 
  3815  0F11                     	;# 
  3816  0F12                     	;# 
  3817  0F13                     	;# 
  3818  0F14                     	;# 
  3819  0F15                     	;# 
  3820  0F16                     	;# 
  3821  0F17                     	;# 
  3822  0F18                     	;# 
  3823  0F19                     	;# 
  3824  0F1A                     	;# 
  3825  0F1B                     	;# 
  3826  0F1C                     	;# 
  3827  0F1D                     	;# 
  3828  0F1E                     	;# 
  3829  0F1F                     	;# 
  3830  0F20                     	;# 
  3831  0F21                     	;# 
  3832  0F22                     	;# 
  3833  0F23                     	;# 
  3834  0F24                     	;# 
  3835  0F25                     	;# 
  3836  0F26                     	;# 
  3837  0F27                     	;# 
  3838  0F28                     	;# 
  3839  0F29                     	;# 
  3840  0F2A                     	;# 
  3841  0F2B                     	;# 
  3842  0F2C                     	;# 
  3843  0F2D                     	;# 
  3844  0F2E                     	;# 
  3845  0F2F                     	;# 
  3846  0F30                     	;# 
  3847  0F31                     	;# 
  3848  0F32                     	;# 
  3849  0F33                     	;# 
  3850  0F34                     	;# 
  3851  0F35                     	;# 
  3852  0F36                     	;# 
  3853  0F37                     	;# 
  3854  0FE4                     	;# 
  3855  0FE5                     	;# 
  3856  0FE6                     	;# 
  3857  0FE7                     	;# 
  3858  0FE8                     	;# 
  3859  0FE9                     	;# 
  3860  0FEA                     	;# 
  3861  0FEB                     	;# 
  3862  0FED                     	;# 
  3863  0FEE                     	;# 
  3864  0FEF                     	;# 
  3865  0000                     	;# 
  3866  0001                     	;# 
  3867  0002                     	;# 
  3868  0003                     	;# 
  3869  0004                     	;# 
  3870  0005                     	;# 
  3871  0006                     	;# 
  3872  0007                     	;# 
  3873  0008                     	;# 
  3874  0009                     	;# 
  3875  000A                     	;# 
  3876  000B                     	;# 
  3877  000C                     	;# 
  3878  000D                     	;# 
  3879  000E                     	;# 
  3880  0010                     	;# 
  3881  0011                     	;# 
  3882  0012                     	;# 
  3883  0013                     	;# 
  3884  0015                     	;# 
  3885  0016                     	;# 
  3886  0016                     	;# 
  3887  0017                     	;# 
  3888  0018                     	;# 
  3889  0019                     	;# 
  3890  001A                     	;# 
  3891  001B                     	;# 
  3892  001C                     	;# 
  3893  008C                     	;# 
  3894  008D                     	;# 
  3895  008E                     	;# 
  3896  0090                     	;# 
  3897  0091                     	;# 
  3898  0092                     	;# 
  3899  0093                     	;# 
  3900  0095                     	;# 
  3901  0096                     	;# 
  3902  0097                     	;# 
  3903  0098                     	;# 
  3904  0099                     	;# 
  3905  009A                     	;# 
  3906  009B                     	;# 
  3907  009B                     	;# 
  3908  009C                     	;# 
  3909  009D                     	;# 
  3910  009E                     	;# 
  3911  009F                     	;# 
  3912  010C                     	;# 
  3913  010D                     	;# 
  3914  010E                     	;# 
  3915  0111                     	;# 
  3916  0112                     	;# 
  3917  0113                     	;# 
  3918  0114                     	;# 
  3919  0115                     	;# 
  3920  0116                     	;# 
  3921  0117                     	;# 
  3922  0118                     	;# 
  3923  0119                     	;# 
  3924  011A                     	;# 
  3925  011B                     	;# 
  3926  011B                     	;# 
  3927  011C                     	;# 
  3928  018C                     	;# 
  3929  018D                     	;# 
  3930  018E                     	;# 
  3931  0191                     	;# 
  3932  0191                     	;# 
  3933  0192                     	;# 
  3934  0193                     	;# 
  3935  0193                     	;# 
  3936  0194                     	;# 
  3937  0195                     	;# 
  3938  0196                     	;# 
  3939  0197                     	;# 
  3940  0199                     	;# 
  3941  0199                     	;# 
  3942  0199                     	;# 
  3943  019A                     	;# 
  3944  019A                     	;# 
  3945  019A                     	;# 
  3946  019B                     	;# 
  3947  019B                     	;# 
  3948  019B                     	;# 
  3949  019B                     	;# 
  3950  019B                     	;# 
  3951  019C                     	;# 
  3952  019C                     	;# 
  3953  019C                     	;# 
  3954  019D                     	;# 
  3955  019D                     	;# 
  3956  019D                     	;# 
  3957  019E                     	;# 
  3958  019E                     	;# 
  3959  019E                     	;# 
  3960  019F                     	;# 
  3961  019F                     	;# 
  3962  019F                     	;# 
  3963  019F                     	;# 
  3964  019F                     	;# 
  3965  020C                     	;# 
  3966  020D                     	;# 
  3967  020E                     	;# 
  3968  0210                     	;# 
  3969  0211                     	;# 
  3970  0211                     	;# 
  3971  0212                     	;# 
  3972  0212                     	;# 
  3973  0213                     	;# 
  3974  0213                     	;# 
  3975  0214                     	;# 
  3976  0214                     	;# 
  3977  0215                     	;# 
  3978  0215                     	;# 
  3979  0215                     	;# 
  3980  0215                     	;# 
  3981  0216                     	;# 
  3982  0216                     	;# 
  3983  0217                     	;# 
  3984  0217                     	;# 
  3985  028C                     	;# 
  3986  028D                     	;# 
  3987  028E                     	;# 
  3988  0291                     	;# 
  3989  0291                     	;# 
  3990  0292                     	;# 
  3991  0293                     	;# 
  3992  0293                     	;# 
  3993  0298                     	;# 
  3994  0298                     	;# 
  3995  0299                     	;# 
  3996  029A                     	;# 
  3997  029A                     	;# 
  3998  029E                     	;# 
  3999  030C                     	;# 
  4000  030D                     	;# 
  4001  030E                     	;# 
  4002  038C                     	;# 
  4003  038D                     	;# 
  4004  038E                     	;# 
  4005  0390                     	;# 
  4006  0391                     	;# 
  4007  0392                     	;# 
  4008  0393                     	;# 
  4009  0394                     	;# 
  4010  0395                     	;# 
  4011  0396                     	;# 
  4012  0397                     	;# 
  4013  0398                     	;# 
  4014  0399                     	;# 
  4015  039D                     	;# 
  4016  039E                     	;# 
  4017  039F                     	;# 
  4018  0415                     	;# 
  4019  0416                     	;# 
  4020  0417                     	;# 
  4021  041C                     	;# 
  4022  041D                     	;# 
  4023  041E                     	;# 
  4024  0498                     	;# 
  4025  0498                     	;# 
  4026  0499                     	;# 
  4027  049A                     	;# 
  4028  049B                     	;# 
  4029  049B                     	;# 
  4030  049C                     	;# 
  4031  049D                     	;# 
  4032  049E                     	;# 
  4033  049F                     	;# 
  4034  0511                     	;# 
  4035  0515                     	;# 
  4036  0617                     	;# 
  4037  0618                     	;# 
  4038  0619                     	;# 
  4039  0619                     	;# 
  4040  061A                     	;# 
  4041  061B                     	;# 
  4042  061C                     	;# 
  4043  061C                     	;# 
  4044  0691                     	;# 
  4045  0692                     	;# 
  4046  0693                     	;# 
  4047  0694                     	;# 
  4048  0695                     	;# 
  4049  0696                     	;# 
  4050  0697                     	;# 
  4051  0698                     	;# 
  4052  0699                     	;# 
  4053  069A                     	;# 
  4054  069B                     	;# 
  4055  069C                     	;# 
  4056  069D                     	;# 
  4057  069E                     	;# 
  4058  069F                     	;# 
  4059  0E0F                     	;# 
  4060  0E10                     	;# 
  4061  0E11                     	;# 
  4062  0E12                     	;# 
  4063  0E13                     	;# 
  4064  0E14                     	;# 
  4065  0E15                     	;# 
  4066  0E17                     	;# 
  4067  0E20                     	;# 
  4068  0E21                     	;# 
  4069  0E22                     	;# 
  4070  0E24                     	;# 
  4071  0E25                     	;# 
  4072  0E28                     	;# 
  4073  0E29                     	;# 
  4074  0E2A                     	;# 
  4075  0E2B                     	;# 
  4076  0E90                     	;# 
  4077  0E91                     	;# 
  4078  0E92                     	;# 
  4079  0E93                     	;# 
  4080  0E94                     	;# 
  4081  0E95                     	;# 
  4082  0E96                     	;# 
  4083  0E97                     	;# 
  4084  0E98                     	;# 
  4085  0E99                     	;# 
  4086  0E9A                     	;# 
  4087  0E9B                     	;# 
  4088  0E9C                     	;# 
  4089  0E9D                     	;# 
  4090  0E9E                     	;# 
  4091  0E9F                     	;# 
  4092  0EA0                     	;# 
  4093  0EA1                     	;# 
  4094  0EA2                     	;# 
  4095  0EA3                     	;# 
  4096  0EA4                     	;# 
  4097  0EA5                     	;# 
  4098  0EA6                     	;# 
  4099  0EA7                     	;# 
  4100  0F0F                     	;# 
  4101  0F10                     	;# 
  4102  0F11                     	;# 
  4103  0F12                     	;# 
  4104  0F13                     	;# 
  4105  0F14                     	;# 
  4106  0F15                     	;# 
  4107  0F16                     	;# 
  4108  0F17                     	;# 
  4109  0F18                     	;# 
  4110  0F19                     	;# 
  4111  0F1A                     	;# 
  4112  0F1B                     	;# 
  4113  0F1C                     	;# 
  4114  0F1D                     	;# 
  4115  0F1E                     	;# 
  4116  0F1F                     	;# 
  4117  0F20                     	;# 
  4118  0F21                     	;# 
  4119  0F22                     	;# 
  4120  0F23                     	;# 
  4121  0F24                     	;# 
  4122  0F25                     	;# 
  4123  0F26                     	;# 
  4124  0F27                     	;# 
  4125  0F28                     	;# 
  4126  0F29                     	;# 
  4127  0F2A                     	;# 
  4128  0F2B                     	;# 
  4129  0F2C                     	;# 
  4130  0F2D                     	;# 
  4131  0F2E                     	;# 
  4132  0F2F                     	;# 
  4133  0F30                     	;# 
  4134  0F31                     	;# 
  4135  0F32                     	;# 
  4136  0F33                     	;# 
  4137  0F34                     	;# 
  4138  0F35                     	;# 
  4139  0F36                     	;# 
  4140  0F37                     	;# 
  4141  0FE4                     	;# 
  4142  0FE5                     	;# 
  4143  0FE6                     	;# 
  4144  0FE7                     	;# 
  4145  0FE8                     	;# 
  4146  0FE9                     	;# 
  4147  0FEA                     	;# 
  4148  0FEB                     	;# 
  4149  0FED                     	;# 
  4150  0FEE                     	;# 
  4151  0FEF                     	;# 
  4152  0000                     	;# 
  4153  0001                     	;# 
  4154  0002                     	;# 
  4155  0003                     	;# 
  4156  0004                     	;# 
  4157  0005                     	;# 
  4158  0006                     	;# 
  4159  0007                     	;# 
  4160  0008                     	;# 
  4161  0009                     	;# 
  4162  000A                     	;# 
  4163  000B                     	;# 
  4164  000C                     	;# 
  4165  000D                     	;# 
  4166  000E                     	;# 
  4167  0010                     	;# 
  4168  0011                     	;# 
  4169  0012                     	;# 
  4170  0013                     	;# 
  4171  0015                     	;# 
  4172  0016                     	;# 
  4173  0016                     	;# 
  4174  0017                     	;# 
  4175  0018                     	;# 
  4176  0019                     	;# 
  4177  001A                     	;# 
  4178  001B                     	;# 
  4179  001C                     	;# 
  4180  008C                     	;# 
  4181  008D                     	;# 
  4182  008E                     	;# 
  4183  0090                     	;# 
  4184  0091                     	;# 
  4185  0092                     	;# 
  4186  0093                     	;# 
  4187  0095                     	;# 
  4188  0096                     	;# 
  4189  0097                     	;# 
  4190  0098                     	;# 
  4191  0099                     	;# 
  4192  009A                     	;# 
  4193  009B                     	;# 
  4194  009B                     	;# 
  4195  009C                     	;# 
  4196  009D                     	;# 
  4197  009E                     	;# 
  4198  009F                     	;# 
  4199  010C                     	;# 
  4200  010D                     	;# 
  4201  010E                     	;# 
  4202  0111                     	;# 
  4203  0112                     	;# 
  4204  0113                     	;# 
  4205  0114                     	;# 
  4206  0115                     	;# 
  4207  0116                     	;# 
  4208  0117                     	;# 
  4209  0118                     	;# 
  4210  0119                     	;# 
  4211  011A                     	;# 
  4212  011B                     	;# 
  4213  011B                     	;# 
  4214  011C                     	;# 
  4215  018C                     	;# 
  4216  018D                     	;# 
  4217  018E                     	;# 
  4218  0191                     	;# 
  4219  0191                     	;# 
  4220  0192                     	;# 
  4221  0193                     	;# 
  4222  0193                     	;# 
  4223  0194                     	;# 
  4224  0195                     	;# 
  4225  0196                     	;# 
  4226  0197                     	;# 
  4227  0199                     	;# 
  4228  0199                     	;# 
  4229  0199                     	;# 
  4230  019A                     	;# 
  4231  019A                     	;# 
  4232  019A                     	;# 
  4233  019B                     	;# 
  4234  019B                     	;# 
  4235  019B                     	;# 
  4236  019B                     	;# 
  4237  019B                     	;# 
  4238  019C                     	;# 
  4239  019C                     	;# 
  4240  019C                     	;# 
  4241  019D                     	;# 
  4242  019D                     	;# 
  4243  019D                     	;# 
  4244  019E                     	;# 
  4245  019E                     	;# 
  4246  019E                     	;# 
  4247  019F                     	;# 
  4248  019F                     	;# 
  4249  019F                     	;# 
  4250  019F                     	;# 
  4251  019F                     	;# 
  4252  020C                     	;# 
  4253  020D                     	;# 
  4254  020E                     	;# 
  4255  0210                     	;# 
  4256  0211                     	;# 
  4257  0211                     	;# 
  4258  0212                     	;# 
  4259  0212                     	;# 
  4260  0213                     	;# 
  4261  0213                     	;# 
  4262  0214                     	;# 
  4263  0214                     	;# 
  4264  0215                     	;# 
  4265  0215                     	;# 
  4266  0215                     	;# 
  4267  0215                     	;# 
  4268  0216                     	;# 
  4269  0216                     	;# 
  4270  0217                     	;# 
  4271  0217                     	;# 
  4272  028C                     	;# 
  4273  028D                     	;# 
  4274  028E                     	;# 
  4275  0291                     	;# 
  4276  0291                     	;# 
  4277  0292                     	;# 
  4278  0293                     	;# 
  4279  0293                     	;# 
  4280  0298                     	;# 
  4281  0298                     	;# 
  4282  0299                     	;# 
  4283  029A                     	;# 
  4284  029A                     	;# 
  4285  029E                     	;# 
  4286  030C                     	;# 
  4287  030D                     	;# 
  4288  030E                     	;# 
  4289  038C                     	;# 
  4290  038D                     	;# 
  4291  038E                     	;# 
  4292  0390                     	;# 
  4293  0391                     	;# 
  4294  0392                     	;# 
  4295  0393                     	;# 
  4296  0394                     	;# 
  4297  0395                     	;# 
  4298  0396                     	;# 
  4299  0397                     	;# 
  4300  0398                     	;# 
  4301  0399                     	;# 
  4302  039D                     	;# 
  4303  039E                     	;# 
  4304  039F                     	;# 
  4305  0415                     	;# 
  4306  0416                     	;# 
  4307  0417                     	;# 
  4308  041C                     	;# 
  4309  041D                     	;# 
  4310  041E                     	;# 
  4311  0498                     	;# 
  4312  0498                     	;# 
  4313  0499                     	;# 
  4314  049A                     	;# 
  4315  049B                     	;# 
  4316  049B                     	;# 
  4317  049C                     	;# 
  4318  049D                     	;# 
  4319  049E                     	;# 
  4320  049F                     	;# 
  4321  0511                     	;# 
  4322  0515                     	;# 
  4323  0617                     	;# 
  4324  0618                     	;# 
  4325  0619                     	;# 
  4326  0619                     	;# 
  4327  061A                     	;# 
  4328  061B                     	;# 
  4329  061C                     	;# 
  4330  061C                     	;# 
  4331  0691                     	;# 
  4332  0692                     	;# 
  4333  0693                     	;# 
  4334  0694                     	;# 
  4335  0695                     	;# 
  4336  0696                     	;# 
  4337  0697                     	;# 
  4338  0698                     	;# 
  4339  0699                     	;# 
  4340  069A                     	;# 
  4341  069B                     	;# 
  4342  069C                     	;# 
  4343  069D                     	;# 
  4344  069E                     	;# 
  4345  069F                     	;# 
  4346  0E0F                     	;# 
  4347  0E10                     	;# 
  4348  0E11                     	;# 
  4349  0E12                     	;# 
  4350  0E13                     	;# 
  4351  0E14                     	;# 
  4352  0E15                     	;# 
  4353  0E17                     	;# 
  4354  0E20                     	;# 
  4355  0E21                     	;# 
  4356  0E22                     	;# 
  4357  0E24                     	;# 
  4358  0E25                     	;# 
  4359  0E28                     	;# 
  4360  0E29                     	;# 
  4361  0E2A                     	;# 
  4362  0E2B                     	;# 
  4363  0E90                     	;# 
  4364  0E91                     	;# 
  4365  0E92                     	;# 
  4366  0E93                     	;# 
  4367  0E94                     	;# 
  4368  0E95                     	;# 
  4369  0E96                     	;# 
  4370  0E97                     	;# 
  4371  0E98                     	;# 
  4372  0E99                     	;# 
  4373  0E9A                     	;# 
  4374  0E9B                     	;# 
  4375  0E9C                     	;# 
  4376  0E9D                     	;# 
  4377  0E9E                     	;# 
  4378  0E9F                     	;# 
  4379  0EA0                     	;# 
  4380  0EA1                     	;# 
  4381  0EA2                     	;# 
  4382  0EA3                     	;# 
  4383  0EA4                     	;# 
  4384  0EA5                     	;# 
  4385  0EA6                     	;# 
  4386  0EA7                     	;# 
  4387  0F0F                     	;# 
  4388  0F10                     	;# 
  4389  0F11                     	;# 
  4390  0F12                     	;# 
  4391  0F13                     	;# 
  4392  0F14                     	;# 
  4393  0F15                     	;# 
  4394  0F16                     	;# 
  4395  0F17                     	;# 
  4396  0F18                     	;# 
  4397  0F19                     	;# 
  4398  0F1A                     	;# 
  4399  0F1B                     	;# 
  4400  0F1C                     	;# 
  4401  0F1D                     	;# 
  4402  0F1E                     	;# 
  4403  0F1F                     	;# 
  4404  0F20                     	;# 
  4405  0F21                     	;# 
  4406  0F22                     	;# 
  4407  0F23                     	;# 
  4408  0F24                     	;# 
  4409  0F25                     	;# 
  4410  0F26                     	;# 
  4411  0F27                     	;# 
  4412  0F28                     	;# 
  4413  0F29                     	;# 
  4414  0F2A                     	;# 
  4415  0F2B                     	;# 
  4416  0F2C                     	;# 
  4417  0F2D                     	;# 
  4418  0F2E                     	;# 
  4419  0F2F                     	;# 
  4420  0F30                     	;# 
  4421  0F31                     	;# 
  4422  0F32                     	;# 
  4423  0F33                     	;# 
  4424  0F34                     	;# 
  4425  0F35                     	;# 
  4426  0F36                     	;# 
  4427  0F37                     	;# 
  4428  0FE4                     	;# 
  4429  0FE5                     	;# 
  4430  0FE6                     	;# 
  4431  0FE7                     	;# 
  4432  0FE8                     	;# 
  4433  0FE9                     	;# 
  4434  0FEA                     	;# 
  4435  0FEB                     	;# 
  4436  0FED                     	;# 
  4437  0FEE                     	;# 
  4438  0FEF                     	;# 
  4439  0000                     	;# 
  4440  0001                     	;# 
  4441  0002                     	;# 
  4442  0003                     	;# 
  4443  0004                     	;# 
  4444  0005                     	;# 
  4445  0006                     	;# 
  4446  0007                     	;# 
  4447  0008                     	;# 
  4448  0009                     	;# 
  4449  000A                     	;# 
  4450  000B                     	;# 
  4451  000C                     	;# 
  4452  000D                     	;# 
  4453  000E                     	;# 
  4454  0010                     	;# 
  4455  0011                     	;# 
  4456  0012                     	;# 
  4457  0013                     	;# 
  4458  0015                     	;# 
  4459  0016                     	;# 
  4460  0016                     	;# 
  4461  0017                     	;# 
  4462  0018                     	;# 
  4463  0019                     	;# 
  4464  001A                     	;# 
  4465  001B                     	;# 
  4466  001C                     	;# 
  4467  008C                     	;# 
  4468  008D                     	;# 
  4469  008E                     	;# 
  4470  0090                     	;# 
  4471  0091                     	;# 
  4472  0092                     	;# 
  4473  0093                     	;# 
  4474  0095                     	;# 
  4475  0096                     	;# 
  4476  0097                     	;# 
  4477  0098                     	;# 
  4478  0099                     	;# 
  4479  009A                     	;# 
  4480  009B                     	;# 
  4481  009B                     	;# 
  4482  009C                     	;# 
  4483  009D                     	;# 
  4484  009E                     	;# 
  4485  009F                     	;# 
  4486  010C                     	;# 
  4487  010D                     	;# 
  4488  010E                     	;# 
  4489  0111                     	;# 
  4490  0112                     	;# 
  4491  0113                     	;# 
  4492  0114                     	;# 
  4493  0115                     	;# 
  4494  0116                     	;# 
  4495  0117                     	;# 
  4496  0118                     	;# 
  4497  0119                     	;# 
  4498  011A                     	;# 
  4499  011B                     	;# 
  4500  011B                     	;# 
  4501  011C                     	;# 
  4502  018C                     	;# 
  4503  018D                     	;# 
  4504  018E                     	;# 
  4505  0191                     	;# 
  4506  0191                     	;# 
  4507  0192                     	;# 
  4508  0193                     	;# 
  4509  0193                     	;# 
  4510  0194                     	;# 
  4511  0195                     	;# 
  4512  0196                     	;# 
  4513  0197                     	;# 
  4514  0199                     	;# 
  4515  0199                     	;# 
  4516  0199                     	;# 
  4517  019A                     	;# 
  4518  019A                     	;# 
  4519  019A                     	;# 
  4520  019B                     	;# 
  4521  019B                     	;# 
  4522  019B                     	;# 
  4523  019B                     	;# 
  4524  019B                     	;# 
  4525  019C                     	;# 
  4526  019C                     	;# 
  4527  019C                     	;# 
  4528  019D                     	;# 
  4529  019D                     	;# 
  4530  019D                     	;# 
  4531  019E                     	;# 
  4532  019E                     	;# 
  4533  019E                     	;# 
  4534  019F                     	;# 
  4535  019F                     	;# 
  4536  019F                     	;# 
  4537  019F                     	;# 
  4538  019F                     	;# 
  4539  020C                     	;# 
  4540  020D                     	;# 
  4541  020E                     	;# 
  4542  0210                     	;# 
  4543  0211                     	;# 
  4544  0211                     	;# 
  4545  0212                     	;# 
  4546  0212                     	;# 
  4547  0213                     	;# 
  4548  0213                     	;# 
  4549  0214                     	;# 
  4550  0214                     	;# 
  4551  0215                     	;# 
  4552  0215                     	;# 
  4553  0215                     	;# 
  4554  0215                     	;# 
  4555  0216                     	;# 
  4556  0216                     	;# 
  4557  0217                     	;# 
  4558  0217                     	;# 
  4559  028C                     	;# 
  4560  028D                     	;# 
  4561  028E                     	;# 
  4562  0291                     	;# 
  4563  0291                     	;# 
  4564  0292                     	;# 
  4565  0293                     	;# 
  4566  0293                     	;# 
  4567  0298                     	;# 
  4568  0298                     	;# 
  4569  0299                     	;# 
  4570  029A                     	;# 
  4571  029A                     	;# 
  4572  029E                     	;# 
  4573  030C                     	;# 
  4574  030D                     	;# 
  4575  030E                     	;# 
  4576  038C                     	;# 
  4577  038D                     	;# 
  4578  038E                     	;# 
  4579  0390                     	;# 
  4580  0391                     	;# 
  4581  0392                     	;# 
  4582  0393                     	;# 
  4583  0394                     	;# 
  4584  0395                     	;# 
  4585  0396                     	;# 
  4586  0397                     	;# 
  4587  0398                     	;# 
  4588  0399                     	;# 
  4589  039D                     	;# 
  4590  039E                     	;# 
  4591  039F                     	;# 
  4592  0415                     	;# 
  4593  0416                     	;# 
  4594  0417                     	;# 
  4595  041C                     	;# 
  4596  041D                     	;# 
  4597  041E                     	;# 
  4598  0498                     	;# 
  4599  0498                     	;# 
  4600  0499                     	;# 
  4601  049A                     	;# 
  4602  049B                     	;# 
  4603  049B                     	;# 
  4604  049C                     	;# 
  4605  049D                     	;# 
  4606  049E                     	;# 
  4607  049F                     	;# 
  4608  0511                     	;# 
  4609  0515                     	;# 
  4610  0617                     	;# 
  4611  0618                     	;# 
  4612  0619                     	;# 
  4613  0619                     	;# 
  4614  061A                     	;# 
  4615  061B                     	;# 
  4616  061C                     	;# 
  4617  061C                     	;# 
  4618  0691                     	;# 
  4619  0692                     	;# 
  4620  0693                     	;# 
  4621  0694                     	;# 
  4622  0695                     	;# 
  4623  0696                     	;# 
  4624  0697                     	;# 
  4625  0698                     	;# 
  4626  0699                     	;# 
  4627  069A                     	;# 
  4628  069B                     	;# 
  4629  069C                     	;# 
  4630  069D                     	;# 
  4631  069E                     	;# 
  4632  069F                     	;# 
  4633  0E0F                     	;# 
  4634  0E10                     	;# 
  4635  0E11                     	;# 
  4636  0E12                     	;# 
  4637  0E13                     	;# 
  4638  0E14                     	;# 
  4639  0E15                     	;# 
  4640  0E17                     	;# 
  4641  0E20                     	;# 
  4642  0E21                     	;# 
  4643  0E22                     	;# 
  4644  0E24                     	;# 
  4645  0E25                     	;# 
  4646  0E28                     	;# 
  4647  0E29                     	;# 
  4648  0E2A                     	;# 
  4649  0E2B                     	;# 
  4650  0E90                     	;# 
  4651  0E91                     	;# 
  4652  0E92                     	;# 
  4653  0E93                     	;# 
  4654  0E94                     	;# 
  4655  0E95                     	;# 
  4656  0E96                     	;# 
  4657  0E97                     	;# 
  4658  0E98                     	;# 
  4659  0E99                     	;# 
  4660  0E9A                     	;# 
  4661  0E9B                     	;# 
  4662  0E9C                     	;# 
  4663  0E9D                     	;# 
  4664  0E9E                     	;# 
  4665  0E9F                     	;# 
  4666  0EA0                     	;# 
  4667  0EA1                     	;# 
  4668  0EA2                     	;# 
  4669  0EA3                     	;# 
  4670  0EA4                     	;# 
  4671  0EA5                     	;# 
  4672  0EA6                     	;# 
  4673  0EA7                     	;# 
  4674  0F0F                     	;# 
  4675  0F10                     	;# 
  4676  0F11                     	;# 
  4677  0F12                     	;# 
  4678  0F13                     	;# 
  4679  0F14                     	;# 
  4680  0F15                     	;# 
  4681  0F16                     	;# 
  4682  0F17                     	;# 
  4683  0F18                     	;# 
  4684  0F19                     	;# 
  4685  0F1A                     	;# 
  4686  0F1B                     	;# 
  4687  0F1C                     	;# 
  4688  0F1D                     	;# 
  4689  0F1E                     	;# 
  4690  0F1F                     	;# 
  4691  0F20                     	;# 
  4692  0F21                     	;# 
  4693  0F22                     	;# 
  4694  0F23                     	;# 
  4695  0F24                     	;# 
  4696  0F25                     	;# 
  4697  0F26                     	;# 
  4698  0F27                     	;# 
  4699  0F28                     	;# 
  4700  0F29                     	;# 
  4701  0F2A                     	;# 
  4702  0F2B                     	;# 
  4703  0F2C                     	;# 
  4704  0F2D                     	;# 
  4705  0F2E                     	;# 
  4706  0F2F                     	;# 
  4707  0F30                     	;# 
  4708  0F31                     	;# 
  4709  0F32                     	;# 
  4710  0F33                     	;# 
  4711  0F34                     	;# 
  4712  0F35                     	;# 
  4713  0F36                     	;# 
  4714  0F37                     	;# 
  4715  0FE4                     	;# 
  4716  0FE5                     	;# 
  4717  0FE6                     	;# 
  4718  0FE7                     	;# 
  4719  0FE8                     	;# 
  4720  0FE9                     	;# 
  4721  0FEA                     	;# 
  4722  0FEB                     	;# 
  4723  0FED                     	;# 
  4724  0FEE                     	;# 
  4725  0FEF                     	;# 
  4726  0000                     	;# 
  4727  0001                     	;# 
  4728  0002                     	;# 
  4729  0003                     	;# 
  4730  0004                     	;# 
  4731  0005                     	;# 
  4732  0006                     	;# 
  4733  0007                     	;# 
  4734  0008                     	;# 
  4735  0009                     	;# 
  4736  000A                     	;# 
  4737  000B                     	;# 
  4738  000C                     	;# 
  4739  000D                     	;# 
  4740  000E                     	;# 
  4741  0010                     	;# 
  4742  0011                     	;# 
  4743  0012                     	;# 
  4744  0013                     	;# 
  4745  0015                     	;# 
  4746  0016                     	;# 
  4747  0016                     	;# 
  4748  0017                     	;# 
  4749  0018                     	;# 
  4750  0019                     	;# 
  4751  001A                     	;# 
  4752  001B                     	;# 
  4753  001C                     	;# 
  4754  008C                     	;# 
  4755  008D                     	;# 
  4756  008E                     	;# 
  4757  0090                     	;# 
  4758  0091                     	;# 
  4759  0092                     	;# 
  4760  0093                     	;# 
  4761  0095                     	;# 
  4762  0096                     	;# 
  4763  0097                     	;# 
  4764  0098                     	;# 
  4765  0099                     	;# 
  4766  009A                     	;# 
  4767  009B                     	;# 
  4768  009B                     	;# 
  4769  009C                     	;# 
  4770  009D                     	;# 
  4771  009E                     	;# 
  4772  009F                     	;# 
  4773  010C                     	;# 
  4774  010D                     	;# 
  4775  010E                     	;# 
  4776  0111                     	;# 
  4777  0112                     	;# 
  4778  0113                     	;# 
  4779  0114                     	;# 
  4780  0115                     	;# 
  4781  0116                     	;# 
  4782  0117                     	;# 
  4783  0118                     	;# 
  4784  0119                     	;# 
  4785  011A                     	;# 
  4786  011B                     	;# 
  4787  011B                     	;# 
  4788  011C                     	;# 
  4789  018C                     	;# 
  4790  018D                     	;# 
  4791  018E                     	;# 
  4792  0191                     	;# 
  4793  0191                     	;# 
  4794  0192                     	;# 
  4795  0193                     	;# 
  4796  0193                     	;# 
  4797  0194                     	;# 
  4798  0195                     	;# 
  4799  0196                     	;# 
  4800  0197                     	;# 
  4801  0199                     	;# 
  4802  0199                     	;# 
  4803  0199                     	;# 
  4804  019A                     	;# 
  4805  019A                     	;# 
  4806  019A                     	;# 
  4807  019B                     	;# 
  4808  019B                     	;# 
  4809  019B                     	;# 
  4810  019B                     	;# 
  4811  019B                     	;# 
  4812  019C                     	;# 
  4813  019C                     	;# 
  4814  019C                     	;# 
  4815  019D                     	;# 
  4816  019D                     	;# 
  4817  019D                     	;# 
  4818  019E                     	;# 
  4819  019E                     	;# 
  4820  019E                     	;# 
  4821  019F                     	;# 
  4822  019F                     	;# 
  4823  019F                     	;# 
  4824  019F                     	;# 
  4825  019F                     	;# 
  4826  020C                     	;# 
  4827  020D                     	;# 
  4828  020E                     	;# 
  4829  0210                     	;# 
  4830  0211                     	;# 
  4831  0211                     	;# 
  4832  0212                     	;# 
  4833  0212                     	;# 
  4834  0213                     	;# 
  4835  0213                     	;# 
  4836  0214                     	;# 
  4837  0214                     	;# 
  4838  0215                     	;# 
  4839  0215                     	;# 
  4840  0215                     	;# 
  4841  0215                     	;# 
  4842  0216                     	;# 
  4843  0216                     	;# 
  4844  0217                     	;# 
  4845  0217                     	;# 
  4846  028C                     	;# 
  4847  028D                     	;# 
  4848  028E                     	;# 
  4849  0291                     	;# 
  4850  0291                     	;# 
  4851  0292                     	;# 
  4852  0293                     	;# 
  4853  0293                     	;# 
  4854  0298                     	;# 
  4855  0298                     	;# 
  4856  0299                     	;# 
  4857  029A                     	;# 
  4858  029A                     	;# 
  4859  029E                     	;# 
  4860  030C                     	;# 
  4861  030D                     	;# 
  4862  030E                     	;# 
  4863  038C                     	;# 
  4864  038D                     	;# 
  4865  038E                     	;# 
  4866  0390                     	;# 
  4867  0391                     	;# 
  4868  0392                     	;# 
  4869  0393                     	;# 
  4870  0394                     	;# 
  4871  0395                     	;# 
  4872  0396                     	;# 
  4873  0397                     	;# 
  4874  0398                     	;# 
  4875  0399                     	;# 
  4876  039D                     	;# 
  4877  039E                     	;# 
  4878  039F                     	;# 
  4879  0415                     	;# 
  4880  0416                     	;# 
  4881  0417                     	;# 
  4882  041C                     	;# 
  4883  041D                     	;# 
  4884  041E                     	;# 
  4885  0498                     	;# 
  4886  0498                     	;# 
  4887  0499                     	;# 
  4888  049A                     	;# 
  4889  049B                     	;# 
  4890  049B                     	;# 
  4891  049C                     	;# 
  4892  049D                     	;# 
  4893  049E                     	;# 
  4894  049F                     	;# 
  4895  0511                     	;# 
  4896  0515                     	;# 
  4897  0617                     	;# 
  4898  0618                     	;# 
  4899  0619                     	;# 
  4900  0619                     	;# 
  4901  061A                     	;# 
  4902  061B                     	;# 
  4903  061C                     	;# 
  4904  061C                     	;# 
  4905  0691                     	;# 
  4906  0692                     	;# 
  4907  0693                     	;# 
  4908  0694                     	;# 
  4909  0695                     	;# 
  4910  0696                     	;# 
  4911  0697                     	;# 
  4912  0698                     	;# 
  4913  0699                     	;# 
  4914  069A                     	;# 
  4915  069B                     	;# 
  4916  069C                     	;# 
  4917  069D                     	;# 
  4918  069E                     	;# 
  4919  069F                     	;# 
  4920  0E0F                     	;# 
  4921  0E10                     	;# 
  4922  0E11                     	;# 
  4923  0E12                     	;# 
  4924  0E13                     	;# 
  4925  0E14                     	;# 
  4926  0E15                     	;# 
  4927  0E17                     	;# 
  4928  0E20                     	;# 
  4929  0E21                     	;# 
  4930  0E22                     	;# 
  4931  0E24                     	;# 
  4932  0E25                     	;# 
  4933  0E28                     	;# 
  4934  0E29                     	;# 
  4935  0E2A                     	;# 
  4936  0E2B                     	;# 
  4937  0E90                     	;# 
  4938  0E91                     	;# 
  4939  0E92                     	;# 
  4940  0E93                     	;# 
  4941  0E94                     	;# 
  4942  0E95                     	;# 
  4943  0E96                     	;# 
  4944  0E97                     	;# 
  4945  0E98                     	;# 
  4946  0E99                     	;# 
  4947  0E9A                     	;# 
  4948  0E9B                     	;# 
  4949  0E9C                     	;# 
  4950  0E9D                     	;# 
  4951  0E9E                     	;# 
  4952  0E9F                     	;# 
  4953  0EA0                     	;# 
  4954  0EA1                     	;# 
  4955  0EA2                     	;# 
  4956  0EA3                     	;# 
  4957  0EA4                     	;# 
  4958  0EA5                     	;# 
  4959  0EA6                     	;# 
  4960  0EA7                     	;# 
  4961  0F0F                     	;# 
  4962  0F10                     	;# 
  4963  0F11                     	;# 
  4964  0F12                     	;# 
  4965  0F13                     	;# 
  4966  0F14                     	;# 
  4967  0F15                     	;# 
  4968  0F16                     	;# 
  4969  0F17                     	;# 
  4970  0F18                     	;# 
  4971  0F19                     	;# 
  4972  0F1A                     	;# 
  4973  0F1B                     	;# 
  4974  0F1C                     	;# 
  4975  0F1D                     	;# 
  4976  0F1E                     	;# 
  4977  0F1F                     	;# 
  4978  0F20                     	;# 
  4979  0F21                     	;# 
  4980  0F22                     	;# 
  4981  0F23                     	;# 
  4982  0F24                     	;# 
  4983  0F25                     	;# 
  4984  0F26                     	;# 
  4985  0F27                     	;# 
  4986  0F28                     	;# 
  4987  0F29                     	;# 
  4988  0F2A                     	;# 
  4989  0F2B                     	;# 
  4990  0F2C                     	;# 
  4991  0F2D                     	;# 
  4992  0F2E                     	;# 
  4993  0F2F                     	;# 
  4994  0F30                     	;# 
  4995  0F31                     	;# 
  4996  0F32                     	;# 
  4997  0F33                     	;# 
  4998  0F34                     	;# 
  4999  0F35                     	;# 
  5000  0F36                     	;# 
  5001  0F37                     	;# 
  5002  0FE4                     	;# 
  5003  0FE5                     	;# 
  5004  0FE6                     	;# 
  5005  0FE7                     	;# 
  5006  0FE8                     	;# 
  5007  0FE9                     	;# 
  5008  0FEA                     	;# 
  5009  0FEB                     	;# 
  5010  0FED                     	;# 
  5011  0FEE                     	;# 
  5012  0FEF                     	;# 
  5013  0000                     	;# 
  5014  0001                     	;# 
  5015  0002                     	;# 
  5016  0003                     	;# 
  5017  0004                     	;# 
  5018  0005                     	;# 
  5019  0006                     	;# 
  5020  0007                     	;# 
  5021  0008                     	;# 
  5022  0009                     	;# 
  5023  000A                     	;# 
  5024  000B                     	;# 
  5025  000C                     	;# 
  5026  000D                     	;# 
  5027  000E                     	;# 
  5028  0010                     	;# 
  5029  0011                     	;# 
  5030  0012                     	;# 
  5031  0013                     	;# 
  5032  0015                     	;# 
  5033  0016                     	;# 
  5034  0016                     	;# 
  5035  0017                     	;# 
  5036  0018                     	;# 
  5037  0019                     	;# 
  5038  001A                     	;# 
  5039  001B                     	;# 
  5040  001C                     	;# 
  5041  008C                     	;# 
  5042  008D                     	;# 
  5043  008E                     	;# 
  5044  0090                     	;# 
  5045  0091                     	;# 
  5046  0092                     	;# 
  5047  0093                     	;# 
  5048  0095                     	;# 
  5049  0096                     	;# 
  5050  0097                     	;# 
  5051  0098                     	;# 
  5052  0099                     	;# 
  5053  009A                     	;# 
  5054  009B                     	;# 
  5055  009B                     	;# 
  5056  009C                     	;# 
  5057  009D                     	;# 
  5058  009E                     	;# 
  5059  009F                     	;# 
  5060  010C                     	;# 
  5061  010D                     	;# 
  5062  010E                     	;# 
  5063  0111                     	;# 
  5064  0112                     	;# 
  5065  0113                     	;# 
  5066  0114                     	;# 
  5067  0115                     	;# 
  5068  0116                     	;# 
  5069  0117                     	;# 
  5070  0118                     	;# 
  5071  0119                     	;# 
  5072  011A                     	;# 
  5073  011B                     	;# 
  5074  011B                     	;# 
  5075  011C                     	;# 
  5076  018C                     	;# 
  5077  018D                     	;# 
  5078  018E                     	;# 
  5079  0191                     	;# 
  5080  0191                     	;# 
  5081  0192                     	;# 
  5082  0193                     	;# 
  5083  0193                     	;# 
  5084  0194                     	;# 
  5085  0195                     	;# 
  5086  0196                     	;# 
  5087  0197                     	;# 
  5088  0199                     	;# 
  5089  0199                     	;# 
  5090  0199                     	;# 
  5091  019A                     	;# 
  5092  019A                     	;# 
  5093  019A                     	;# 
  5094  019B                     	;# 
  5095  019B                     	;# 
  5096  019B                     	;# 
  5097  019B                     	;# 
  5098  019B                     	;# 
  5099  019C                     	;# 
  5100  019C                     	;# 
  5101  019C                     	;# 
  5102  019D                     	;# 
  5103  019D                     	;# 
  5104  019D                     	;# 
  5105  019E                     	;# 
  5106  019E                     	;# 
  5107  019E                     	;# 
  5108  019F                     	;# 
  5109  019F                     	;# 
  5110  019F                     	;# 
  5111  019F                     	;# 
  5112  019F                     	;# 
  5113  020C                     	;# 
  5114  020D                     	;# 
  5115  020E                     	;# 
  5116  0210                     	;# 
  5117  0211                     	;# 
  5118  0211                     	;# 
  5119  0212                     	;# 
  5120  0212                     	;# 
  5121  0213                     	;# 
  5122  0213                     	;# 
  5123  0214                     	;# 
  5124  0214                     	;# 
  5125  0215                     	;# 
  5126  0215                     	;# 
  5127  0215                     	;# 
  5128  0215                     	;# 
  5129  0216                     	;# 
  5130  0216                     	;# 
  5131  0217                     	;# 
  5132  0217                     	;# 
  5133  028C                     	;# 
  5134  028D                     	;# 
  5135  028E                     	;# 
  5136  0291                     	;# 
  5137  0291                     	;# 
  5138  0292                     	;# 
  5139  0293                     	;# 
  5140  0293                     	;# 
  5141  0298                     	;# 
  5142  0298                     	;# 
  5143  0299                     	;# 
  5144  029A                     	;# 
  5145  029A                     	;# 
  5146  029E                     	;# 
  5147  030C                     	;# 
  5148  030D                     	;# 
  5149  030E                     	;# 
  5150  038C                     	;# 
  5151  038D                     	;# 
  5152  038E                     	;# 
  5153  0390                     	;# 
  5154  0391                     	;# 
  5155  0392                     	;# 
  5156  0393                     	;# 
  5157  0394                     	;# 
  5158  0395                     	;# 
  5159  0396                     	;# 
  5160  0397                     	;# 
  5161  0398                     	;# 
  5162  0399                     	;# 
  5163  039D                     	;# 
  5164  039E                     	;# 
  5165  039F                     	;# 
  5166  0415                     	;# 
  5167  0416                     	;# 
  5168  0417                     	;# 
  5169  041C                     	;# 
  5170  041D                     	;# 
  5171  041E                     	;# 
  5172  0498                     	;# 
  5173  0498                     	;# 
  5174  0499                     	;# 
  5175  049A                     	;# 
  5176  049B                     	;# 
  5177  049B                     	;# 
  5178  049C                     	;# 
  5179  049D                     	;# 
  5180  049E                     	;# 
  5181  049F                     	;# 
  5182  0511                     	;# 
  5183  0515                     	;# 
  5184  0617                     	;# 
  5185  0618                     	;# 
  5186  0619                     	;# 
  5187  0619                     	;# 
  5188  061A                     	;# 
  5189  061B                     	;# 
  5190  061C                     	;# 
  5191  061C                     	;# 
  5192  0691                     	;# 
  5193  0692                     	;# 
  5194  0693                     	;# 
  5195  0694                     	;# 
  5196  0695                     	;# 
  5197  0696                     	;# 
  5198  0697                     	;# 
  5199  0698                     	;# 
  5200  0699                     	;# 
  5201  069A                     	;# 
  5202  069B                     	;# 
  5203  069C                     	;# 
  5204  069D                     	;# 
  5205  069E                     	;# 
  5206  069F                     	;# 
  5207  0E0F                     	;# 
  5208  0E10                     	;# 
  5209  0E11                     	;# 
  5210  0E12                     	;# 
  5211  0E13                     	;# 
  5212  0E14                     	;# 
  5213  0E15                     	;# 
  5214  0E17                     	;# 
  5215  0E20                     	;# 
  5216  0E21                     	;# 
  5217  0E22                     	;# 
  5218  0E24                     	;# 
  5219  0E25                     	;# 
  5220  0E28                     	;# 
  5221  0E29                     	;# 
  5222  0E2A                     	;# 
  5223  0E2B                     	;# 
  5224  0E90                     	;# 
  5225  0E91                     	;# 
  5226  0E92                     	;# 
  5227  0E93                     	;# 
  5228  0E94                     	;# 
  5229  0E95                     	;# 
  5230  0E96                     	;# 
  5231  0E97                     	;# 
  5232  0E98                     	;# 
  5233  0E99                     	;# 
  5234  0E9A                     	;# 
  5235  0E9B                     	;# 
  5236  0E9C                     	;# 
  5237  0E9D                     	;# 
  5238  0E9E                     	;# 
  5239  0E9F                     	;# 
  5240  0EA0                     	;# 
  5241  0EA1                     	;# 
  5242  0EA2                     	;# 
  5243  0EA3                     	;# 
  5244  0EA4                     	;# 
  5245  0EA5                     	;# 
  5246  0EA6                     	;# 
  5247  0EA7                     	;# 
  5248  0F0F                     	;# 
  5249  0F10                     	;# 
  5250  0F11                     	;# 
  5251  0F12                     	;# 
  5252  0F13                     	;# 
  5253  0F14                     	;# 
  5254  0F15                     	;# 
  5255  0F16                     	;# 
  5256  0F17                     	;# 
  5257  0F18                     	;# 
  5258  0F19                     	;# 
  5259  0F1A                     	;# 
  5260  0F1B                     	;# 
  5261  0F1C                     	;# 
  5262  0F1D                     	;# 
  5263  0F1E                     	;# 
  5264  0F1F                     	;# 
  5265  0F20                     	;# 
  5266  0F21                     	;# 
  5267  0F22                     	;# 
  5268  0F23                     	;# 
  5269  0F24                     	;# 
  5270  0F25                     	;# 
  5271  0F26                     	;# 
  5272  0F27                     	;# 
  5273  0F28                     	;# 
  5274  0F29                     	;# 
  5275  0F2A                     	;# 
  5276  0F2B                     	;# 
  5277  0F2C                     	;# 
  5278  0F2D                     	;# 
  5279  0F2E                     	;# 
  5280  0F2F                     	;# 
  5281  0F30                     	;# 
  5282  0F31                     	;# 
  5283  0F32                     	;# 
  5284  0F33                     	;# 
  5285  0F34                     	;# 
  5286  0F35                     	;# 
  5287  0F36                     	;# 
  5288  0F37                     	;# 
  5289  0FE4                     	;# 
  5290  0FE5                     	;# 
  5291  0FE6                     	;# 
  5292  0FE7                     	;# 
  5293  0FE8                     	;# 
  5294  0FE9                     	;# 
  5295  0FEA                     	;# 
  5296  0FEB                     	;# 
  5297  0FED                     	;# 
  5298  0FEE                     	;# 
  5299  0FEF                     	;# 
  5300  0000                     	;# 
  5301  0001                     	;# 
  5302  0002                     	;# 
  5303  0003                     	;# 
  5304  0004                     	;# 
  5305  0005                     	;# 
  5306  0006                     	;# 
  5307  0007                     	;# 
  5308  0008                     	;# 
  5309  0009                     	;# 
  5310  000A                     	;# 
  5311  000B                     	;# 
  5312  000C                     	;# 
  5313  000D                     	;# 
  5314  000E                     	;# 
  5315  0010                     	;# 
  5316  0011                     	;# 
  5317  0012                     	;# 
  5318  0013                     	;# 
  5319  0015                     	;# 
  5320  0016                     	;# 
  5321  0016                     	;# 
  5322  0017                     	;# 
  5323  0018                     	;# 
  5324  0019                     	;# 
  5325  001A                     	;# 
  5326  001B                     	;# 
  5327  001C                     	;# 
  5328  008C                     	;# 
  5329  008D                     	;# 
  5330  008E                     	;# 
  5331  0090                     	;# 
  5332  0091                     	;# 
  5333  0092                     	;# 
  5334  0093                     	;# 
  5335  0095                     	;# 
  5336  0096                     	;# 
  5337  0097                     	;# 
  5338  0098                     	;# 
  5339  0099                     	;# 
  5340  009A                     	;# 
  5341  009B                     	;# 
  5342  009B                     	;# 
  5343  009C                     	;# 
  5344  009D                     	;# 
  5345  009E                     	;# 
  5346  009F                     	;# 
  5347  010C                     	;# 
  5348  010D                     	;# 
  5349  010E                     	;# 
  5350  0111                     	;# 
  5351  0112                     	;# 
  5352  0113                     	;# 
  5353  0114                     	;# 
  5354  0115                     	;# 
  5355  0116                     	;# 
  5356  0117                     	;# 
  5357  0118                     	;# 
  5358  0119                     	;# 
  5359  011A                     	;# 
  5360  011B                     	;# 
  5361  011B                     	;# 
  5362  011C                     	;# 
  5363  018C                     	;# 
  5364  018D                     	;# 
  5365  018E                     	;# 
  5366  0191                     	;# 
  5367  0191                     	;# 
  5368  0192                     	;# 
  5369  0193                     	;# 
  5370  0193                     	;# 
  5371  0194                     	;# 
  5372  0195                     	;# 
  5373  0196                     	;# 
  5374  0197                     	;# 
  5375  0199                     	;# 
  5376  0199                     	;# 
  5377  0199                     	;# 
  5378  019A                     	;# 
  5379  019A                     	;# 
  5380  019A                     	;# 
  5381  019B                     	;# 
  5382  019B                     	;# 
  5383  019B                     	;# 
  5384  019B                     	;# 
  5385  019B                     	;# 
  5386  019C                     	;# 
  5387  019C                     	;# 
  5388  019C                     	;# 
  5389  019D                     	;# 
  5390  019D                     	;# 
  5391  019D                     	;# 
  5392  019E                     	;# 
  5393  019E                     	;# 
  5394  019E                     	;# 
  5395  019F                     	;# 
  5396  019F                     	;# 
  5397  019F                     	;# 
  5398  019F                     	;# 
  5399  019F                     	;# 
  5400  020C                     	;# 
  5401  020D                     	;# 
  5402  020E                     	;# 
  5403  0210                     	;# 
  5404  0211                     	;# 
  5405  0211                     	;# 
  5406  0212                     	;# 
  5407  0212                     	;# 
  5408  0213                     	;# 
  5409  0213                     	;# 
  5410  0214                     	;# 
  5411  0214                     	;# 
  5412  0215                     	;# 
  5413  0215                     	;# 
  5414  0215                     	;# 
  5415  0215                     	;# 
  5416  0216                     	;# 
  5417  0216                     	;# 
  5418  0217                     	;# 
  5419  0217                     	;# 
  5420  028C                     	;# 
  5421  028D                     	;# 
  5422  028E                     	;# 
  5423  0291                     	;# 
  5424  0291                     	;# 
  5425  0292                     	;# 
  5426  0293                     	;# 
  5427  0293                     	;# 
  5428  0298                     	;# 
  5429  0298                     	;# 
  5430  0299                     	;# 
  5431  029A                     	;# 
  5432  029A                     	;# 
  5433  029E                     	;# 
  5434  030C                     	;# 
  5435  030D                     	;# 
  5436  030E                     	;# 
  5437  038C                     	;# 
  5438  038D                     	;# 
  5439  038E                     	;# 
  5440  0390                     	;# 
  5441  0391                     	;# 
  5442  0392                     	;# 
  5443  0393                     	;# 
  5444  0394                     	;# 
  5445  0395                     	;# 
  5446  0396                     	;# 
  5447  0397                     	;# 
  5448  0398                     	;# 
  5449  0399                     	;# 
  5450  039D                     	;# 
  5451  039E                     	;# 
  5452  039F                     	;# 
  5453  0415                     	;# 
  5454  0416                     	;# 
  5455  0417                     	;# 
  5456  041C                     	;# 
  5457  041D                     	;# 
  5458  041E                     	;# 
  5459  0498                     	;# 
  5460  0498                     	;# 
  5461  0499                     	;# 
  5462  049A                     	;# 
  5463  049B                     	;# 
  5464  049B                     	;# 
  5465  049C                     	;# 
  5466  049D                     	;# 
  5467  049E                     	;# 
  5468  049F                     	;# 
  5469  0511                     	;# 
  5470  0515                     	;# 
  5471  0617                     	;# 
  5472  0618                     	;# 
  5473  0619                     	;# 
  5474  0619                     	;# 
  5475  061A                     	;# 
  5476  061B                     	;# 
  5477  061C                     	;# 
  5478  061C                     	;# 
  5479  0691                     	;# 
  5480  0692                     	;# 
  5481  0693                     	;# 
  5482  0694                     	;# 
  5483  0695                     	;# 
  5484  0696                     	;# 
  5485  0697                     	;# 
  5486  0698                     	;# 
  5487  0699                     	;# 
  5488  069A                     	;# 
  5489  069B                     	;# 
  5490  069C                     	;# 
  5491  069D                     	;# 
  5492  069E                     	;# 
  5493  069F                     	;# 
  5494  0E0F                     	;# 
  5495  0E10                     	;# 
  5496  0E11                     	;# 
  5497  0E12                     	;# 
  5498  0E13                     	;# 
  5499  0E14                     	;# 
  5500  0E15                     	;# 
  5501  0E17                     	;# 
  5502  0E20                     	;# 
  5503  0E21                     	;# 
  5504  0E22                     	;# 
  5505  0E24                     	;# 
  5506  0E25                     	;# 
  5507  0E28                     	;# 
  5508  0E29                     	;# 
  5509  0E2A                     	;# 
  5510  0E2B                     	;# 
  5511  0E90                     	;# 
  5512  0E91                     	;# 
  5513  0E92                     	;# 
  5514  0E93                     	;# 
  5515  0E94                     	;# 
  5516  0E95                     	;# 
  5517  0E96                     	;# 
  5518  0E97                     	;# 
  5519  0E98                     	;# 
  5520  0E99                     	;# 
  5521  0E9A                     	;# 
  5522  0E9B                     	;# 
  5523  0E9C                     	;# 
  5524  0E9D                     	;# 
  5525  0E9E                     	;# 
  5526  0E9F                     	;# 
  5527  0EA0                     	;# 
  5528  0EA1                     	;# 
  5529  0EA2                     	;# 
  5530  0EA3                     	;# 
  5531  0EA4                     	;# 
  5532  0EA5                     	;# 
  5533  0EA6                     	;# 
  5534  0EA7                     	;# 
  5535  0F0F                     	;# 
  5536  0F10                     	;# 
  5537  0F11                     	;# 
  5538  0F12                     	;# 
  5539  0F13                     	;# 
  5540  0F14                     	;# 
  5541  0F15                     	;# 
  5542  0F16                     	;# 
  5543  0F17                     	;# 
  5544  0F18                     	;# 
  5545  0F19                     	;# 
  5546  0F1A                     	;# 
  5547  0F1B                     	;# 
  5548  0F1C                     	;# 
  5549  0F1D                     	;# 
  5550  0F1E                     	;# 
  5551  0F1F                     	;# 
  5552  0F20                     	;# 
  5553  0F21                     	;# 
  5554  0F22                     	;# 
  5555  0F23                     	;# 
  5556  0F24                     	;# 
  5557  0F25                     	;# 
  5558  0F26                     	;# 
  5559  0F27                     	;# 
  5560  0F28                     	;# 
  5561  0F29                     	;# 
  5562  0F2A                     	;# 
  5563  0F2B                     	;# 
  5564  0F2C                     	;# 
  5565  0F2D                     	;# 
  5566  0F2E                     	;# 
  5567  0F2F                     	;# 
  5568  0F30                     	;# 
  5569  0F31                     	;# 
  5570  0F32                     	;# 
  5571  0F33                     	;# 
  5572  0F34                     	;# 
  5573  0F35                     	;# 
  5574  0F36                     	;# 
  5575  0F37                     	;# 
  5576  0FE4                     	;# 
  5577  0FE5                     	;# 
  5578  0FE6                     	;# 
  5579  0FE7                     	;# 
  5580  0FE8                     	;# 
  5581  0FE9                     	;# 
  5582  0FEA                     	;# 
  5583  0FEB                     	;# 
  5584  0FED                     	;# 
  5585  0FEE                     	;# 
  5586  0FEF                     	;# 
  5587  0000                     	;# 
  5588  0001                     	;# 
  5589  0002                     	;# 
  5590  0003                     	;# 
  5591  0004                     	;# 
  5592  0005                     	;# 
  5593  0006                     	;# 
  5594  0007                     	;# 
  5595  0008                     	;# 
  5596  0009                     	;# 
  5597  000A                     	;# 
  5598  000B                     	;# 
  5599  000C                     	;# 
  5600  000D                     	;# 
  5601  000E                     	;# 
  5602  0010                     	;# 
  5603  0011                     	;# 
  5604  0012                     	;# 
  5605  0013                     	;# 
  5606  0015                     	;# 
  5607  0016                     	;# 
  5608  0016                     	;# 
  5609  0017                     	;# 
  5610  0018                     	;# 
  5611  0019                     	;# 
  5612  001A                     	;# 
  5613  001B                     	;# 
  5614  001C                     	;# 
  5615  008C                     	;# 
  5616  008D                     	;# 
  5617  008E                     	;# 
  5618  0090                     	;# 
  5619  0091                     	;# 
  5620  0092                     	;# 
  5621  0093                     	;# 
  5622  0095                     	;# 
  5623  0096                     	;# 
  5624  0097                     	;# 
  5625  0098                     	;# 
  5626  0099                     	;# 
  5627  009A                     	;# 
  5628  009B                     	;# 
  5629  009B                     	;# 
  5630  009C                     	;# 
  5631  009D                     	;# 
  5632  009E                     	;# 
  5633  009F                     	;# 
  5634  010C                     	;# 
  5635  010D                     	;# 
  5636  010E                     	;# 
  5637  0111                     	;# 
  5638  0112                     	;# 
  5639  0113                     	;# 
  5640  0114                     	;# 
  5641  0115                     	;# 
  5642  0116                     	;# 
  5643  0117                     	;# 
  5644  0118                     	;# 
  5645  0119                     	;# 
  5646  011A                     	;# 
  5647  011B                     	;# 
  5648  011B                     	;# 
  5649  011C                     	;# 
  5650  018C                     	;# 
  5651  018D                     	;# 
  5652  018E                     	;# 
  5653  0191                     	;# 
  5654  0191                     	;# 
  5655  0192                     	;# 
  5656  0193                     	;# 
  5657  0193                     	;# 
  5658  0194                     	;# 
  5659  0195                     	;# 
  5660  0196                     	;# 
  5661  0197                     	;# 
  5662  0199                     	;# 
  5663  0199                     	;# 
  5664  0199                     	;# 
  5665  019A                     	;# 
  5666  019A                     	;# 
  5667  019A                     	;# 
  5668  019B                     	;# 
  5669  019B                     	;# 
  5670  019B                     	;# 
  5671  019B                     	;# 
  5672  019B                     	;# 
  5673  019C                     	;# 
  5674  019C                     	;# 
  5675  019C                     	;# 
  5676  019D                     	;# 
  5677  019D                     	;# 
  5678  019D                     	;# 
  5679  019E                     	;# 
  5680  019E                     	;# 
  5681  019E                     	;# 
  5682  019F                     	;# 
  5683  019F                     	;# 
  5684  019F                     	;# 
  5685  019F                     	;# 
  5686  019F                     	;# 
  5687  020C                     	;# 
  5688  020D                     	;# 
  5689  020E                     	;# 
  5690  0210                     	;# 
  5691  0211                     	;# 
  5692  0211                     	;# 
  5693  0212                     	;# 
  5694  0212                     	;# 
  5695  0213                     	;# 
  5696  0213                     	;# 
  5697  0214                     	;# 
  5698  0214                     	;# 
  5699  0215                     	;# 
  5700  0215                     	;# 
  5701  0215                     	;# 
  5702  0215                     	;# 
  5703  0216                     	;# 
  5704  0216                     	;# 
  5705  0217                     	;# 
  5706  0217                     	;# 
  5707  028C                     	;# 
  5708  028D                     	;# 
  5709  028E                     	;# 
  5710  0291                     	;# 
  5711  0291                     	;# 
  5712  0292                     	;# 
  5713  0293                     	;# 
  5714  0293                     	;# 
  5715  0298                     	;# 
  5716  0298                     	;# 
  5717  0299                     	;# 
  5718  029A                     	;# 
  5719  029A                     	;# 
  5720  029E                     	;# 
  5721  030C                     	;# 
  5722  030D                     	;# 
  5723  030E                     	;# 
  5724  038C                     	;# 
  5725  038D                     	;# 
  5726  038E                     	;# 
  5727  0390                     	;# 
  5728  0391                     	;# 
  5729  0392                     	;# 
  5730  0393                     	;# 
  5731  0394                     	;# 
  5732  0395                     	;# 
  5733  0396                     	;# 
  5734  0397                     	;# 
  5735  0398                     	;# 
  5736  0399                     	;# 
  5737  039D                     	;# 
  5738  039E                     	;# 
  5739  039F                     	;# 
  5740  0415                     	;# 
  5741  0416                     	;# 
  5742  0417                     	;# 
  5743  041C                     	;# 
  5744  041D                     	;# 
  5745  041E                     	;# 
  5746  0498                     	;# 
  5747  0498                     	;# 
  5748  0499                     	;# 
  5749  049A                     	;# 
  5750  049B                     	;# 
  5751  049B                     	;# 
  5752  049C                     	;# 
  5753  049D                     	;# 
  5754  049E                     	;# 
  5755  049F                     	;# 
  5756  0511                     	;# 
  5757  0515                     	;# 
  5758  0617                     	;# 
  5759  0618                     	;# 
  5760  0619                     	;# 
  5761  0619                     	;# 
  5762  061A                     	;# 
  5763  061B                     	;# 
  5764  061C                     	;# 
  5765  061C                     	;# 
  5766  0691                     	;# 
  5767  0692                     	;# 
  5768  0693                     	;# 
  5769  0694                     	;# 
  5770  0695                     	;# 
  5771  0696                     	;# 
  5772  0697                     	;# 
  5773  0698                     	;# 
  5774  0699                     	;# 
  5775  069A                     	;# 
  5776  069B                     	;# 
  5777  069C                     	;# 
  5778  069D                     	;# 
  5779  069E                     	;# 
  5780  069F                     	;# 
  5781  0E0F                     	;# 
  5782  0E10                     	;# 
  5783  0E11                     	;# 
  5784  0E12                     	;# 
  5785  0E13                     	;# 
  5786  0E14                     	;# 
  5787  0E15                     	;# 
  5788  0E17                     	;# 
  5789  0E20                     	;# 
  5790  0E21                     	;# 
  5791  0E22                     	;# 
  5792  0E24                     	;# 
  5793  0E25                     	;# 
  5794  0E28                     	;# 
  5795  0E29                     	;# 
  5796  0E2A                     	;# 
  5797  0E2B                     	;# 
  5798  0E90                     	;# 
  5799  0E91                     	;# 
  5800  0E92                     	;# 
  5801  0E93                     	;# 
  5802  0E94                     	;# 
  5803  0E95                     	;# 
  5804  0E96                     	;# 
  5805  0E97                     	;# 
  5806  0E98                     	;# 
  5807  0E99                     	;# 
  5808  0E9A                     	;# 
  5809  0E9B                     	;# 
  5810  0E9C                     	;# 
  5811  0E9D                     	;# 
  5812  0E9E                     	;# 
  5813  0E9F                     	;# 
  5814  0EA0                     	;# 
  5815  0EA1                     	;# 
  5816  0EA2                     	;# 
  5817  0EA3                     	;# 
  5818  0EA4                     	;# 
  5819  0EA5                     	;# 
  5820  0EA6                     	;# 
  5821  0EA7                     	;# 
  5822  0F0F                     	;# 
  5823  0F10                     	;# 
  5824  0F11                     	;# 
  5825  0F12                     	;# 
  5826  0F13                     	;# 
  5827  0F14                     	;# 
  5828  0F15                     	;# 
  5829  0F16                     	;# 
  5830  0F17                     	;# 
  5831  0F18                     	;# 
  5832  0F19                     	;# 
  5833  0F1A                     	;# 
  5834  0F1B                     	;# 
  5835  0F1C                     	;# 
  5836  0F1D                     	;# 
  5837  0F1E                     	;# 
  5838  0F1F                     	;# 
  5839  0F20                     	;# 
  5840  0F21                     	;# 
  5841  0F22                     	;# 
  5842  0F23                     	;# 
  5843  0F24                     	;# 
  5844  0F25                     	;# 
  5845  0F26                     	;# 
  5846  0F27                     	;# 
  5847  0F28                     	;# 
  5848  0F29                     	;# 
  5849  0F2A                     	;# 
  5850  0F2B                     	;# 
  5851  0F2C                     	;# 
  5852  0F2D                     	;# 
  5853  0F2E                     	;# 
  5854  0F2F                     	;# 
  5855  0F30                     	;# 
  5856  0F31                     	;# 
  5857  0F32                     	;# 
  5858  0F33                     	;# 
  5859  0F34                     	;# 
  5860  0F35                     	;# 
  5861  0F36                     	;# 
  5862  0F37                     	;# 
  5863  0FE4                     	;# 
  5864  0FE5                     	;# 
  5865  0FE6                     	;# 
  5866  0FE7                     	;# 
  5867  0FE8                     	;# 
  5868  0FE9                     	;# 
  5869  0FEA                     	;# 
  5870  0FEB                     	;# 
  5871  0FED                     	;# 
  5872  0FEE                     	;# 
  5873  0FEF                     	;# 
  5874  0000                     	;# 
  5875  0001                     	;# 
  5876  0002                     	;# 
  5877  0003                     	;# 
  5878  0004                     	;# 
  5879  0005                     	;# 
  5880  0006                     	;# 
  5881  0007                     	;# 
  5882  0008                     	;# 
  5883  0009                     	;# 
  5884  000A                     	;# 
  5885  000B                     	;# 
  5886  000C                     	;# 
  5887  000D                     	;# 
  5888  000E                     	;# 
  5889  0010                     	;# 
  5890  0011                     	;# 
  5891  0012                     	;# 
  5892  0013                     	;# 
  5893  0015                     	;# 
  5894  0016                     	;# 
  5895  0016                     	;# 
  5896  0017                     	;# 
  5897  0018                     	;# 
  5898  0019                     	;# 
  5899  001A                     	;# 
  5900  001B                     	;# 
  5901  001C                     	;# 
  5902  008C                     	;# 
  5903  008D                     	;# 
  5904  008E                     	;# 
  5905  0090                     	;# 
  5906  0091                     	;# 
  5907  0092                     	;# 
  5908  0093                     	;# 
  5909  0095                     	;# 
  5910  0096                     	;# 
  5911  0097                     	;# 
  5912  0098                     	;# 
  5913  0099                     	;# 
  5914  009A                     	;# 
  5915  009B                     	;# 
  5916  009B                     	;# 
  5917  009C                     	;# 
  5918  009D                     	;# 
  5919  009E                     	;# 
  5920  009F                     	;# 
  5921  010C                     	;# 
  5922  010D                     	;# 
  5923  010E                     	;# 
  5924  0111                     	;# 
  5925  0112                     	;# 
  5926  0113                     	;# 
  5927  0114                     	;# 
  5928  0115                     	;# 
  5929  0116                     	;# 
  5930  0117                     	;# 
  5931  0118                     	;# 
  5932  0119                     	;# 
  5933  011A                     	;# 
  5934  011B                     	;# 
  5935  011B                     	;# 
  5936  011C                     	;# 
  5937  018C                     	;# 
  5938  018D                     	;# 
  5939  018E                     	;# 
  5940  0191                     	;# 
  5941  0191                     	;# 
  5942  0192                     	;# 
  5943  0193                     	;# 
  5944  0193                     	;# 
  5945  0194                     	;# 
  5946  0195                     	;# 
  5947  0196                     	;# 
  5948  0197                     	;# 
  5949  0199                     	;# 
  5950  0199                     	;# 
  5951  0199                     	;# 
  5952  019A                     	;# 
  5953  019A                     	;# 
  5954  019A                     	;# 
  5955  019B                     	;# 
  5956  019B                     	;# 
  5957  019B                     	;# 
  5958  019B                     	;# 
  5959  019B                     	;# 
  5960  019C                     	;# 
  5961  019C                     	;# 
  5962  019C                     	;# 
  5963  019D                     	;# 
  5964  019D                     	;# 
  5965  019D                     	;# 
  5966  019E                     	;# 
  5967  019E                     	;# 
  5968  019E                     	;# 
  5969  019F                     	;# 
  5970  019F                     	;# 
  5971  019F                     	;# 
  5972  019F                     	;# 
  5973  019F                     	;# 
  5974  020C                     	;# 
  5975  020D                     	;# 
  5976  020E                     	;# 
  5977  0210                     	;# 
  5978  0211                     	;# 
  5979  0211                     	;# 
  5980  0212                     	;# 
  5981  0212                     	;# 
  5982  0213                     	;# 
  5983  0213                     	;# 
  5984  0214                     	;# 
  5985  0214                     	;# 
  5986  0215                     	;# 
  5987  0215                     	;# 
  5988  0215                     	;# 
  5989  0215                     	;# 
  5990  0216                     	;# 
  5991  0216                     	;# 
  5992  0217                     	;# 
  5993  0217                     	;# 
  5994  028C                     	;# 
  5995  028D                     	;# 
  5996  028E                     	;# 
  5997  0291                     	;# 
  5998  0291                     	;# 
  5999  0292                     	;# 
  6000  0293                     	;# 
  6001  0293                     	;# 
  6002  0298                     	;# 
  6003  0298                     	;# 
  6004  0299                     	;# 
  6005  029A                     	;# 
  6006  029A                     	;# 
  6007  029E                     	;# 
  6008  030C                     	;# 
  6009  030D                     	;# 
  6010  030E                     	;# 
  6011  038C                     	;# 
  6012  038D                     	;# 
  6013  038E                     	;# 
  6014  0390                     	;# 
  6015  0391                     	;# 
  6016  0392                     	;# 
  6017  0393                     	;# 
  6018  0394                     	;# 
  6019  0395                     	;# 
  6020  0396                     	;# 
  6021  0397                     	;# 
  6022  0398                     	;# 
  6023  0399                     	;# 
  6024  039D                     	;# 
  6025  039E                     	;# 
  6026  039F                     	;# 
  6027  0415                     	;# 
  6028  0416                     	;# 
  6029  0417                     	;# 
  6030  041C                     	;# 
  6031  041D                     	;# 
  6032  041E                     	;# 
  6033  0498                     	;# 
  6034  0498                     	;# 
  6035  0499                     	;# 
  6036  049A                     	;# 
  6037  049B                     	;# 
  6038  049B                     	;# 
  6039  049C                     	;# 
  6040  049D                     	;# 
  6041  049E                     	;# 
  6042  049F                     	;# 
  6043  0511                     	;# 
  6044  0515                     	;# 
  6045  0617                     	;# 
  6046  0618                     	;# 
  6047  0619                     	;# 
  6048  0619                     	;# 
  6049  061A                     	;# 
  6050  061B                     	;# 
  6051  061C                     	;# 
  6052  061C                     	;# 
  6053  0691                     	;# 
  6054  0692                     	;# 
  6055  0693                     	;# 
  6056  0694                     	;# 
  6057  0695                     	;# 
  6058  0696                     	;# 
  6059  0697                     	;# 
  6060  0698                     	;# 
  6061  0699                     	;# 
  6062  069A                     	;# 
  6063  069B                     	;# 
  6064  069C                     	;# 
  6065  069D                     	;# 
  6066  069E                     	;# 
  6067  069F                     	;# 
  6068  0E0F                     	;# 
  6069  0E10                     	;# 
  6070  0E11                     	;# 
  6071  0E12                     	;# 
  6072  0E13                     	;# 
  6073  0E14                     	;# 
  6074  0E15                     	;# 
  6075  0E17                     	;# 
  6076  0E20                     	;# 
  6077  0E21                     	;# 
  6078  0E22                     	;# 
  6079  0E24                     	;# 
  6080  0E25                     	;# 
  6081  0E28                     	;# 
  6082  0E29                     	;# 
  6083  0E2A                     	;# 
  6084  0E2B                     	;# 
  6085  0E90                     	;# 
  6086  0E91                     	;# 
  6087  0E92                     	;# 
  6088  0E93                     	;# 
  6089  0E94                     	;# 
  6090  0E95                     	;# 
  6091  0E96                     	;# 
  6092  0E97                     	;# 
  6093  0E98                     	;# 
  6094  0E99                     	;# 
  6095  0E9A                     	;# 
  6096  0E9B                     	;# 
  6097  0E9C                     	;# 
  6098  0E9D                     	;# 
  6099  0E9E                     	;# 
  6100  0E9F                     	;# 
  6101  0EA0                     	;# 
  6102  0EA1                     	;# 
  6103  0EA2                     	;# 
  6104  0EA3                     	;# 
  6105  0EA4                     	;# 
  6106  0EA5                     	;# 
  6107  0EA6                     	;# 
  6108  0EA7                     	;# 
  6109  0F0F                     	;# 
  6110  0F10                     	;# 
  6111  0F11                     	;# 
  6112  0F12                     	;# 
  6113  0F13                     	;# 
  6114  0F14                     	;# 
  6115  0F15                     	;# 
  6116  0F16                     	;# 
  6117  0F17                     	;# 
  6118  0F18                     	;# 
  6119  0F19                     	;# 
  6120  0F1A                     	;# 
  6121  0F1B                     	;# 
  6122  0F1C                     	;# 
  6123  0F1D                     	;# 
  6124  0F1E                     	;# 
  6125  0F1F                     	;# 
  6126  0F20                     	;# 
  6127  0F21                     	;# 
  6128  0F22                     	;# 
  6129  0F23                     	;# 
  6130  0F24                     	;# 
  6131  0F25                     	;# 
  6132  0F26                     	;# 
  6133  0F27                     	;# 
  6134  0F28                     	;# 
  6135  0F29                     	;# 
  6136  0F2A                     	;# 
  6137  0F2B                     	;# 
  6138  0F2C                     	;# 
  6139  0F2D                     	;# 
  6140  0F2E                     	;# 
  6141  0F2F                     	;# 
  6142  0F30                     	;# 
  6143  0F31                     	;# 
  6144  0F32                     	;# 
  6145  0F33                     	;# 
  6146  0F34                     	;# 
  6147  0F35                     	;# 
  6148  0F36                     	;# 
  6149  0F37                     	;# 
  6150  0FE4                     	;# 
  6151  0FE5                     	;# 
  6152  0FE6                     	;# 
  6153  0FE7                     	;# 
  6154  0FE8                     	;# 
  6155  0FE9                     	;# 
  6156  0FEA                     	;# 
  6157  0FEB                     	;# 
  6158  0FED                     	;# 
  6159  0FEE                     	;# 
  6160  0FEF                     	;# 
  6161  0000                     	;# 
  6162  0001                     	;# 
  6163  0002                     	;# 
  6164  0003                     	;# 
  6165  0004                     	;# 
  6166  0005                     	;# 
  6167  0006                     	;# 
  6168  0007                     	;# 
  6169  0008                     	;# 
  6170  0009                     	;# 
  6171  000A                     	;# 
  6172  000B                     	;# 
  6173  000C                     	;# 
  6174  000D                     	;# 
  6175  000E                     	;# 
  6176  0010                     	;# 
  6177  0011                     	;# 
  6178  0012                     	;# 
  6179  0013                     	;# 
  6180  0015                     	;# 
  6181  0016                     	;# 
  6182  0016                     	;# 
  6183  0017                     	;# 
  6184  0018                     	;# 
  6185  0019                     	;# 
  6186  001A                     	;# 
  6187  001B                     	;# 
  6188  001C                     	;# 
  6189  008C                     	;# 
  6190  008D                     	;# 
  6191  008E                     	;# 
  6192  0090                     	;# 
  6193  0091                     	;# 
  6194  0092                     	;# 
  6195  0093                     	;# 
  6196  0095                     	;# 
  6197  0096                     	;# 
  6198  0097                     	;# 
  6199  0098                     	;# 
  6200  0099                     	;# 
  6201  009A                     	;# 
  6202  009B                     	;# 
  6203  009B                     	;# 
  6204  009C                     	;# 
  6205  009D                     	;# 
  6206  009E                     	;# 
  6207  009F                     	;# 
  6208  010C                     	;# 
  6209  010D                     	;# 
  6210  010E                     	;# 
  6211  0111                     	;# 
  6212  0112                     	;# 
  6213  0113                     	;# 
  6214  0114                     	;# 
  6215  0115                     	;# 
  6216  0116                     	;# 
  6217  0117                     	;# 
  6218  0118                     	;# 
  6219  0119                     	;# 
  6220  011A                     	;# 
  6221  011B                     	;# 
  6222  011B                     	;# 
  6223  011C                     	;# 
  6224  018C                     	;# 
  6225  018D                     	;# 
  6226  018E                     	;# 
  6227  0191                     	;# 
  6228  0191                     	;# 
  6229  0192                     	;# 
  6230  0193                     	;# 
  6231  0193                     	;# 
  6232  0194                     	;# 
  6233  0195                     	;# 
  6234  0196                     	;# 
  6235  0197                     	;# 
  6236  0199                     	;# 
  6237  0199                     	;# 
  6238  0199                     	;# 
  6239  019A                     	;# 
  6240  019A                     	;# 
  6241  019A                     	;# 
  6242  019B                     	;# 
  6243  019B                     	;# 
  6244  019B                     	;# 
  6245  019B                     	;# 
  6246  019B                     	;# 
  6247  019C                     	;# 
  6248  019C                     	;# 
  6249  019C                     	;# 
  6250  019D                     	;# 
  6251  019D                     	;# 
  6252  019D                     	;# 
  6253  019E                     	;# 
  6254  019E                     	;# 
  6255  019E                     	;# 
  6256  019F                     	;# 
  6257  019F                     	;# 
  6258  019F                     	;# 
  6259  019F                     	;# 
  6260  019F                     	;# 
  6261  020C                     	;# 
  6262  020D                     	;# 
  6263  020E                     	;# 
  6264  0210                     	;# 
  6265  0211                     	;# 
  6266  0211                     	;# 
  6267  0212                     	;# 
  6268  0212                     	;# 
  6269  0213                     	;# 
  6270  0213                     	;# 
  6271  0214                     	;# 
  6272  0214                     	;# 
  6273  0215                     	;# 
  6274  0215                     	;# 
  6275  0215                     	;# 
  6276  0215                     	;# 
  6277  0216                     	;# 
  6278  0216                     	;# 
  6279  0217                     	;# 
  6280  0217                     	;# 
  6281  028C                     	;# 
  6282  028D                     	;# 
  6283  028E                     	;# 
  6284  0291                     	;# 
  6285  0291                     	;# 
  6286  0292                     	;# 
  6287  0293                     	;# 
  6288  0293                     	;# 
  6289  0298                     	;# 
  6290  0298                     	;# 
  6291  0299                     	;# 
  6292  029A                     	;# 
  6293  029A                     	;# 
  6294  029E                     	;# 
  6295  030C                     	;# 
  6296  030D                     	;# 
  6297  030E                     	;# 
  6298  038C                     	;# 
  6299  038D                     	;# 
  6300  038E                     	;# 
  6301  0390                     	;# 
  6302  0391                     	;# 
  6303  0392                     	;# 
  6304  0393                     	;# 
  6305  0394                     	;# 
  6306  0395                     	;# 
  6307  0396                     	;# 
  6308  0397                     	;# 
  6309  0398                     	;# 
  6310  0399                     	;# 
  6311  039D                     	;# 
  6312  039E                     	;# 
  6313  039F                     	;# 
  6314  0415                     	;# 
  6315  0416                     	;# 
  6316  0417                     	;# 
  6317  041C                     	;# 
  6318  041D                     	;# 
  6319  041E                     	;# 
  6320  0498                     	;# 
  6321  0498                     	;# 
  6322  0499                     	;# 
  6323  049A                     	;# 
  6324  049B                     	;# 
  6325  049B                     	;# 
  6326  049C                     	;# 
  6327  049D                     	;# 
  6328  049E                     	;# 
  6329  049F                     	;# 
  6330  0511                     	;# 
  6331  0515                     	;# 
  6332  0617                     	;# 
  6333  0618                     	;# 
  6334  0619                     	;# 
  6335  0619                     	;# 
  6336  061A                     	;# 
  6337  061B                     	;# 
  6338  061C                     	;# 
  6339  061C                     	;# 
  6340  0691                     	;# 
  6341  0692                     	;# 
  6342  0693                     	;# 
  6343  0694                     	;# 
  6344  0695                     	;# 
  6345  0696                     	;# 
  6346  0697                     	;# 
  6347  0698                     	;# 
  6348  0699                     	;# 
  6349  069A                     	;# 
  6350  069B                     	;# 
  6351  069C                     	;# 
  6352  069D                     	;# 
  6353  069E                     	;# 
  6354  069F                     	;# 
  6355  0E0F                     	;# 
  6356  0E10                     	;# 
  6357  0E11                     	;# 
  6358  0E12                     	;# 
  6359  0E13                     	;# 
  6360  0E14                     	;# 
  6361  0E15                     	;# 
  6362  0E17                     	;# 
  6363  0E20                     	;# 
  6364  0E21                     	;# 
  6365  0E22                     	;# 
  6366  0E24                     	;# 
  6367  0E25                     	;# 
  6368  0E28                     	;# 
  6369  0E29                     	;# 
  6370  0E2A                     	;# 
  6371  0E2B                     	;# 
  6372  0E90                     	;# 
  6373  0E91                     	;# 
  6374  0E92                     	;# 
  6375  0E93                     	;# 
  6376  0E94                     	;# 
  6377  0E95                     	;# 
  6378  0E96                     	;# 
  6379  0E97                     	;# 
  6380  0E98                     	;# 
  6381  0E99                     	;# 
  6382  0E9A                     	;# 
  6383  0E9B                     	;# 
  6384  0E9C                     	;# 
  6385  0E9D                     	;# 
  6386  0E9E                     	;# 
  6387  0E9F                     	;# 
  6388  0EA0                     	;# 
  6389  0EA1                     	;# 
  6390  0EA2                     	;# 
  6391  0EA3                     	;# 
  6392  0EA4                     	;# 
  6393  0EA5                     	;# 
  6394  0EA6                     	;# 
  6395  0EA7                     	;# 
  6396  0F0F                     	;# 
  6397  0F10                     	;# 
  6398  0F11                     	;# 
  6399  0F12                     	;# 
  6400  0F13                     	;# 
  6401  0F14                     	;# 
  6402  0F15                     	;# 
  6403  0F16                     	;# 
  6404  0F17                     	;# 
  6405  0F18                     	;# 
  6406  0F19                     	;# 
  6407  0F1A                     	;# 
  6408  0F1B                     	;# 
  6409  0F1C                     	;# 
  6410  0F1D                     	;# 
  6411  0F1E                     	;# 
  6412  0F1F                     	;# 
  6413  0F20                     	;# 
  6414  0F21                     	;# 
  6415  0F22                     	;# 
  6416  0F23                     	;# 
  6417  0F24                     	;# 
  6418  0F25                     	;# 
  6419  0F26                     	;# 
  6420  0F27                     	;# 
  6421  0F28                     	;# 
  6422  0F29                     	;# 
  6423  0F2A                     	;# 
  6424  0F2B                     	;# 
  6425  0F2C                     	;# 
  6426  0F2D                     	;# 
  6427  0F2E                     	;# 
  6428  0F2F                     	;# 
  6429  0F30                     	;# 
  6430  0F31                     	;# 
  6431  0F32                     	;# 
  6432  0F33                     	;# 
  6433  0F34                     	;# 
  6434  0F35                     	;# 
  6435  0F36                     	;# 
  6436  0F37                     	;# 
  6437  0FE4                     	;# 
  6438  0FE5                     	;# 
  6439  0FE6                     	;# 
  6440  0FE7                     	;# 
  6441  0FE8                     	;# 
  6442  0FE9                     	;# 
  6443  0FEA                     	;# 
  6444  0FEB                     	;# 
  6445  0FED                     	;# 
  6446  0FEE                     	;# 
  6447  0FEF                     	;_MainMenu
  6448                           
  6449                           	psect	idataBANK1
  6450  0003                     __pidataBANK1:	
  6451                           
  6452                           ;initializer for handleButtons@prevUpState
  6453  0003  3401               	retlw	1
  6454                           
  6455                           	psect	idataBANK2
  6456  1800                     __pidataBANK2:	
  6457                           
  6458                           ;initializer for updateTemperature@RunCount
  6459  1800  3401               	retlw	1
  6460  1801  3400               	retlw	0
  6461                           
  6462                           ;initializer for handleButtons@prevDownState
  6463  1802  3401               	retlw	1
  6464                           
  6465                           ;initializer for handleButtons@prevSetState
  6466  1803  3401               	retlw	1
  6467                           
  6468                           	psect	idataBANK5
  6469  1CA5                     __pidataBANK5:	
  6470                           
  6471                           ;initializer for ___cgram
  6472  1CA5  340C               	retlw	12
  6473  1CA6  3412               	retlw	18
  6474  1CA7  3412               	retlw	18
  6475  1CA8  340C               	retlw	12
  6476  1CA9  3400               	retlw	0
  6477  1CAA  3400               	retlw	0
  6478  1CAB  3400               	retlw	0
  6479  1CAC  3400               	retlw	0
  6480  1CAD  3400               	retlw	0
  6481  1CAE  3404               	retlw	4
  6482  1CAF  340E               	retlw	14
  6483  1CB0  341F               	retlw	31
  6484  1CB1  340E               	retlw	14
  6485  1CB2  3404               	retlw	4
  6486  1CB3  3400               	retlw	0
  6487  1CB4  3400               	retlw	0
  6488  1CB5  3404               	retlw	4
  6489  1CB6  3404               	retlw	4
  6490  1CB7  3404               	retlw	4
  6491  1CB8  3404               	retlw	4
  6492  1CB9  341F               	retlw	31
  6493  1CBA  340E               	retlw	14
  6494  1CBB  3404               	retlw	4
  6495  1CBC  3400               	retlw	0
  6496  1CBD  340A               	retlw	10
  6497  1CBE  3415               	retlw	21
  6498  1CBF  3411               	retlw	17
  6499  1CC0  340A               	retlw	10
  6500  1CC1  3404               	retlw	4
  6501  1CC2  3400               	retlw	0
  6502  1CC3  3400               	retlw	0
  6503  1CC4  3400               	retlw	0
  6504  1CC5  340A               	retlw	10
  6505  1CC6  341F               	retlw	31
  6506  1CC7  341F               	retlw	31
  6507  1CC8  340E               	retlw	14
  6508  1CC9  3404               	retlw	4
  6509  1CCA  3400               	retlw	0
  6510  1CCB  3400               	retlw	0
  6511  1CCC  3400               	retlw	0
  6512  1CCD  3400               	retlw	0
  6513  1CCE  3400               	retlw	0
  6514  1CCF  3400               	retlw	0
  6515  1CD0  3400               	retlw	0
  6516  1CD1  3400               	retlw	0
  6517  1CD2  3400               	retlw	0
  6518  1CD3  3400               	retlw	0
  6519  1CD4  3400               	retlw	0
  6520  1CD5  3400               	retlw	0
  6521  1CD6  3400               	retlw	0
  6522  1CD7  3400               	retlw	0
  6523  1CD8  3400               	retlw	0
  6524  1CD9  3400               	retlw	0
  6525  1CDA  3400               	retlw	0
  6526  1CDB  3400               	retlw	0
  6527  1CDC  3400               	retlw	0
  6528  1CDD  3400               	retlw	0
  6529  1CDE  3400               	retlw	0
  6530  1CDF  3400               	retlw	0
  6531  1CE0  3400               	retlw	0
  6532  1CE1  3400               	retlw	0
  6533  1CE2  3400               	retlw	0
  6534  1CE3  3400               	retlw	0
  6535  1CE4  3400               	retlw	0
  6536                           
  6537                           	psect	idataBIGRAM
  6538  1337                     __pidataBIGRAM:	
  6539                           
  6540                           ;initializer for _MainMenu
  6541  1337  3401               	retlw	1
  6542  1338  3453               	retlw	83
  6543  1339  3465               	retlw	101
  6544  133A  3474               	retlw	116
  6545  133B  3474               	retlw	116
  6546  133C  3469               	retlw	105
  6547  133D  346E               	retlw	110
  6548  133E  3467               	retlw	103
  6549  133F  3473               	retlw	115
  6550  1340  3400               	retlw	0
  6551  1341  3403               	retlw	low _ChangeToSettingsScreen
  6552  1342  3410               	retlw	high _ChangeToSettingsScreen
  6553  1343  3401               	retlw	1
  6554  1344  344C               	retlw	76
  6555  1345  3469               	retlw	105
  6556  1346  3467               	retlw	103
  6557  1347  3468               	retlw	104
  6558  1348  3474               	retlw	116
  6559  1349  3400               	retlw	0
  6560  134A  3400               	retlw	0
  6561  134B  3400               	retlw	0
  6562  134C  3400               	retlw	0
  6563  134D  34E7               	retlw	low _LCD_ToggleBacklight
  6564  134E  3427               	retlw	high _LCD_ToggleBacklight
  6565  134F  3400               	retlw	0
  6566  1350  3400               	retlw	0
  6567  1351  3400               	retlw	0
  6568  1352  3400               	retlw	0
  6569  1353  3400               	retlw	0
  6570  1354  3400               	retlw	0
  6571  1355  3400               	retlw	0
  6572  1356  3400               	retlw	0
  6573  1357  3400               	retlw	0
  6574  1358  3400               	retlw	0
  6575  1359  3400               	retlw	0
  6576  135A  3400               	retlw	0
  6577  135B  3400               	retlw	0
  6578  135C  3400               	retlw	0
  6579  135D  3400               	retlw	0
  6580  135E  3400               	retlw	0
  6581  135F  3400               	retlw	0
  6582  1360  3400               	retlw	0
  6583  1361  3400               	retlw	0
  6584  1362  3400               	retlw	0
  6585  1363  3400               	retlw	0
  6586  1364  3400               	retlw	0
  6587  1365  3400               	retlw	0
  6588  1366  3400               	retlw	0
  6589  1367  3400               	retlw	0
  6590  1368  3400               	retlw	0
  6591  1369  3400               	retlw	0
  6592  136A  3400               	retlw	0
  6593  136B  3400               	retlw	0
  6594  136C  3400               	retlw	0
  6595  136D  3400               	retlw	0
  6596  136E  3400               	retlw	0
  6597  136F  3400               	retlw	0
  6598  1370  3400               	retlw	0
  6599  1371  3400               	retlw	0
  6600  1372  3400               	retlw	0
  6601  1373  3400               	retlw	0
  6602  1374  3400               	retlw	0
  6603  1375  3400               	retlw	0
  6604  1376  3400               	retlw	0
  6605  1377  3400               	retlw	0
  6606  1378  3400               	retlw	0
  6607  1379  3400               	retlw	0
  6608  137A  3400               	retlw	0
  6609  137B  3400               	retlw	0
  6610  137C  3400               	retlw	0
  6611  137D  3400               	retlw	0
  6612  137E  3400               	retlw	0
  6613  137F  3400               	retlw	0
  6614  1380  3400               	retlw	0
  6615  1381  3400               	retlw	0
  6616  1382  3400               	retlw	0
  6617  1383  3400               	retlw	0
  6618  1384  3400               	retlw	0
  6619  1385  3400               	retlw	0
  6620  1386  3400               	retlw	0
  6621  1387  3400               	retlw	0
  6622  1388  3400               	retlw	0
  6623  1389  3400               	retlw	0
  6624  138A  3400               	retlw	0
  6625  138B  3400               	retlw	0
  6626  138C  3400               	retlw	0
  6627  138D  3400               	retlw	0
  6628  138E  3400               	retlw	0
  6629  138F  3400               	retlw	0
  6630  1390  3400               	retlw	0
  6631  1391  3400               	retlw	0
  6632  1392  3400               	retlw	0
  6633  1393  3400               	retlw	0
  6634  1394  3400               	retlw	0
  6635  1395  3400               	retlw	0
  6636  1396  3400               	retlw	0
  6637  1397  3400               	retlw	0
  6638  1398  3400               	retlw	0
  6639  1399  3400               	retlw	0
  6640  139A  3400               	retlw	0
  6641  139B  3400               	retlw	0
  6642  139C  3400               	retlw	0
  6643  139D  3400               	retlw	0
  6644  139E  3400               	retlw	0
  6645  139F  3400               	retlw	0
  6646  13A0  3400               	retlw	0
  6647  13A1  3400               	retlw	0
  6648  13A2  3400               	retlw	0
  6649  13A3  3400               	retlw	0
  6650  13A4  3400               	retlw	0
  6651  13A5  3400               	retlw	0
  6652  13A6  3400               	retlw	0
  6653  13A7  3400               	retlw	0
  6654  13A8  3400               	retlw	0
  6655  13A9  3400               	retlw	0
  6656  13AA  3400               	retlw	0
  6657  13AB  3400               	retlw	0
  6658  13AC  3400               	retlw	0
  6659  13AD  3400               	retlw	0
  6660  13AE  3400               	retlw	0
  6661                           
  6662                           	psect	stringtext
  6663  0339                     __pstringtext:	
  6664  0339                     _dpowers:	
  6665  0339  3401               	retlw	1
  6666  033A  3400               	retlw	0
  6667  033B  3400               	retlw	0
  6668  033C  3400               	retlw	0
  6669  033D  340A               	retlw	10
  6670  033E  3400               	retlw	0
  6671  033F  3400               	retlw	0
  6672  0340  3400               	retlw	0
  6673  0341  3464               	retlw	100
  6674  0342  3400               	retlw	0
  6675  0343  3400               	retlw	0
  6676  0344  3400               	retlw	0
  6677  0345  34E8               	retlw	232
  6678  0346  3403               	retlw	3
  6679  0347  3400               	retlw	0
  6680  0348  3400               	retlw	0
  6681  0349  3410               	retlw	16
  6682  034A  3427               	retlw	39
  6683  034B  3400               	retlw	0
  6684  034C  3400               	retlw	0
  6685  034D  34A0               	retlw	160
  6686  034E  3486               	retlw	134
  6687  034F  3401               	retlw	1
  6688  0350  3400               	retlw	0
  6689  0351  3440               	retlw	64
  6690  0352  3442               	retlw	66
  6691  0353  340F               	retlw	15
  6692  0354  3400               	retlw	0
  6693  0355  3480               	retlw	128
  6694  0356  3496               	retlw	150
  6695  0357  3498               	retlw	152
  6696  0358  3400               	retlw	0
  6697  0359  3400               	retlw	0
  6698  035A  34E1               	retlw	225
  6699  035B  34F5               	retlw	245
  6700  035C  3405               	retlw	5
  6701  035D  3400               	retlw	0
  6702  035E  34CA               	retlw	202
  6703  035F  349A               	retlw	154
  6704  0360  343B               	retlw	59
  6705  0361                     __end_of_dpowers:	
  6706  0361                     _hexpowers:	
  6707  0361  3401               	retlw	1
  6708  0362  3400               	retlw	0
  6709  0363  3400               	retlw	0
  6710  0364  3400               	retlw	0
  6711  0365  3410               	retlw	16
  6712  0366  3400               	retlw	0
  6713  0367  3400               	retlw	0
  6714  0368  3400               	retlw	0
  6715  0369  3400               	retlw	0
  6716  036A  3401               	retlw	1
  6717  036B  3400               	retlw	0
  6718  036C  3400               	retlw	0
  6719  036D  3400               	retlw	0
  6720  036E  3410               	retlw	16
  6721  036F  3400               	retlw	0
  6722  0370  3400               	retlw	0
  6723  0371  3400               	retlw	0
  6724  0372  3400               	retlw	0
  6725  0373  3401               	retlw	1
  6726  0374  3400               	retlw	0
  6727  0375  3400               	retlw	0
  6728  0376  3400               	retlw	0
  6729  0377  3410               	retlw	16
  6730  0378  3400               	retlw	0
  6731  0379  3400               	retlw	0
  6732  037A  3400               	retlw	0
  6733  037B  3400               	retlw	0
  6734  037C  3401               	retlw	1
  6735  037D  3400               	retlw	0
  6736  037E  3400               	retlw	0
  6737  037F  3400               	retlw	0
  6738  0380  3410               	retlw	16
  6739  0381                     __end_of_hexpowers:	
  6740  0381                     STR_54:	
  6741  0381  3454               	retlw	84	;'T'
  6742  0382  3465               	retlw	101	;'e'
  6743  0383  346D               	retlw	109	;'m'
  6744  0384  3470               	retlw	112	;'p'
  6745  0385  3465               	retlw	101	;'e'
  6746  0386  3472               	retlw	114	;'r'
  6747  0387  3461               	retlw	97	;'a'
  6748  0388  3474               	retlw	116	;'t'
  6749  0389  3475               	retlw	117	;'u'
  6750  038A  3472               	retlw	114	;'r'
  6751  038B  3465               	retlw	101	;'e'
  6752  038C  343A               	retlw	58	;':'
  6753  038D  3420               	retlw	32	;' '
  6754  038E  3425               	retlw	37	;'%'
  6755  038F  3464               	retlw	100	;'d'
  6756  0390  342E               	retlw	46	;'.'
  6757  0391  3425               	retlw	37	;'%'
  6758  0392  3464               	retlw	100	;'d'
  6759  0393  3420               	retlw	32	;' '
  6760  0394  3443               	retlw	67	;'C'
  6761  0395  342C               	retlw	44	;','
  6762  0396  3420               	retlw	32	;' '
  6763  0397  346C               	retlw	108	;'l'
  6764  0398  3469               	retlw	105	;'i'
  6765  0399  346D               	retlw	109	;'m'
  6766  039A  3469               	retlw	105	;'i'
  6767  039B  3474               	retlw	116	;'t'
  6768  039C  343A               	retlw	58	;':'
  6769  039D  3420               	retlw	32	;' '
  6770  039E  3425               	retlw	37	;'%'
  6771  039F  3464               	retlw	100	;'d'
  6772  03A0  342E               	retlw	46	;'.'
  6773  03A1  3425               	retlw	37	;'%'
  6774  03A2  3464               	retlw	100	;'d'
  6775  03A3  3420               	retlw	32	;' '
  6776  03A4  3443               	retlw	67	;'C'
  6777  03A5  340D               	retlw	13
  6778  03A6  340A               	retlw	10
  6779  03A7  3400               	retlw	0
  6780  03A8                     STR_8:	
  6781  03A8  3442               	retlw	66	;'B'
  6782  03A9  3475               	retlw	117	;'u'
  6783  03AA  3469               	retlw	105	;'i'
  6784  03AB  346C               	retlw	108	;'l'
  6785  03AC  3474               	retlw	116	;'t'
  6786  03AD  3420               	retlw	32	;' '
  6787  03AE  346F               	retlw	111	;'o'
  6788  03AF  346E               	retlw	110	;'n'
  6789  03B0  343A               	retlw	58	;':'
  6790  03B1  3420               	retlw	32	;' '
  6791  03B2  344D               	retlw	77	;'M'
  6792  03B3  3461               	retlw	97	;'a'
  6793  03B4  3479               	retlw	121	;'y'
  6794  03B5  3420               	retlw	32	;' '
  6795  03B6  3432               	retlw	50	;'2'
  6796  03B7  3436               	retlw	54	;'6'
  6797  03B8  3420               	retlw	32	;' '
  6798  03B9  3432               	retlw	50	;'2'
  6799  03BA  3430               	retlw	48	;'0'
  6800  03BB  3431               	retlw	49	;'1'
  6801  03BC  3436               	retlw	54	;'6'
  6802  03BD  3420               	retlw	32	;' '
  6803  03BE  3430               	retlw	48	;'0'
  6804  03BF  3439               	retlw	57	;'9'
  6805  03C0  343A               	retlw	58	;':'
  6806  03C1  3431               	retlw	49	;'1'
  6807  03C2  3437               	retlw	55	;'7'
  6808  03C3  343A               	retlw	58	;':'
  6809  03C4  3434               	retlw	52	;'4'
  6810  03C5  3437               	retlw	55	;'7'
  6811  03C6  340D               	retlw	13
  6812  03C7  340A               	retlw	10
  6813  03C8  3400               	retlw	0
  6814  03C9                     STR_2:	
  6815  03C9  3445               	retlw	69	;'E'
  6816  03CA  3445               	retlw	69	;'E'
  6817  03CB  3450               	retlw	80	;'P'
  6818  03CC  3452               	retlw	82	;'R'
  6819  03CD  344F               	retlw	79	;'O'
  6820  03CE  344D               	retlw	77	;'M'
  6821  03CF  3420               	retlw	32	;' '
  6822  03D0  3473               	retlw	115	;'s'
  6823  03D1  3469               	retlw	105	;'i'
  6824  03D2  347A               	retlw	122	;'z'
  6825  03D3  3465               	retlw	101	;'e'
  6826  03D4  3420               	retlw	32	;' '
  6827  03D5  3473               	retlw	115	;'s'
  6828  03D6  346D               	retlw	109	;'m'
  6829  03D7  3461               	retlw	97	;'a'
  6830  03D8  346C               	retlw	108	;'l'
  6831  03D9  346C               	retlw	108	;'l'
  6832  03DA  3465               	retlw	101	;'e'
  6833  03DB  3472               	retlw	114	;'r'
  6834  03DC  3420               	retlw	32	;' '
  6835  03DD  3474               	retlw	116	;'t'
  6836  03DE  3468               	retlw	104	;'h'
  6837  03DF  3461               	retlw	97	;'a'
  6838  03E0  346E               	retlw	110	;'n'
  6839  03E1  3420               	retlw	32	;' '
  6840  03E2  3425               	retlw	37	;'%'
  6841  03E3  3475               	retlw	117	;'u'
  6842  03E4  340D               	retlw	13
  6843  03E5  340A               	retlw	10
  6844  03E6  3400               	retlw	0
  6845  03E7                     STR_44:	
  6846  03E7  3425               	retlw	37	;'%'
  6847  03E8  346C               	retlw	108	;'l'
  6848  03E9  3475               	retlw	117	;'u'
  6849  03EA  342E               	retlw	46	;'.'
  6850  03EB  3425               	retlw	37	;'%'
  6851  03EC  3475               	retlw	117	;'u'
  6852  03ED  3420               	retlw	32	;' '
  6853  03EE  3425               	retlw	37	;'%'
  6854  03EF  3464               	retlw	100	;'d'
  6855  03F0  342E               	retlw	46	;'.'
  6856  03F1  3425               	retlw	37	;'%'
  6857  03F2  3464               	retlw	100	;'d'
  6858  03F3  3420               	retlw	32	;' '
  6859  03F4  3443               	retlw	67	;'C'
  6860  03F5  3420               	retlw	32	;' '
  6861  03F6  3428               	retlw	40	;'('
  6862  03F7  3425               	retlw	37	;'%'
  6863  03F8  3464               	retlw	100	;'d'
  6864  03F9  342E               	retlw	46	;'.'
  6865  03FA  3425               	retlw	37	;'%'
  6866  03FB  3464               	retlw	100	;'d'
  6867  03FC  3420               	retlw	32	;' '
  6868  03FD  3443               	retlw	67	;'C'
  6869  03FE  3429               	retlw	41	;')'
  6870  03FF  340D               	retlw	13
  6871  0400  340A               	retlw	10
  6872  0401  3400               	retlw	0
  6873  0402                     STR_12:	
  6874  0402  3454               	retlw	84	;'T'
  6875  0403  3465               	retlw	101	;'e'
  6876  0404  346D               	retlw	109	;'m'
  6877  0405  3470               	retlw	112	;'p'
  6878  0406  3465               	retlw	101	;'e'
  6879  0407  3472               	retlw	114	;'r'
  6880  0408  3461               	retlw	97	;'a'
  6881  0409  3474               	retlw	116	;'t'
  6882  040A  3475               	retlw	117	;'u'
  6883  040B  3472               	retlw	114	;'r'
  6884  040C  3465               	retlw	101	;'e'
  6885  040D  343A               	retlw	58	;':'
  6886  040E  3420               	retlw	32	;' '
  6887  040F  3425               	retlw	37	;'%'
  6888  0410  3464               	retlw	100	;'d'
  6889  0411  342E               	retlw	46	;'.'
  6890  0412  3425               	retlw	37	;'%'
  6891  0413  3464               	retlw	100	;'d'
  6892  0414  3420               	retlw	32	;' '
  6893  0415  3443               	retlw	67	;'C'
  6894  0416  340D               	retlw	13
  6895  0417  340A               	retlw	10
  6896  0418  3400               	retlw	0
  6897  0419                     STR_23:	
  6898  0419  3443               	retlw	67	;'C'
  6899  041A  346C               	retlw	108	;'l'
  6900  041B  3465               	retlw	101	;'e'
  6901  041C  3461               	retlw	97	;'a'
  6902  041D  3472               	retlw	114	;'r'
  6903  041E  3469               	retlw	105	;'i'
  6904  041F  346E               	retlw	110	;'n'
  6905  0420  3467               	retlw	103	;'g'
  6906  0421  3420               	retlw	32	;' '
  6907  0422  3461               	retlw	97	;'a'
  6908  0423  346C               	retlw	108	;'l'
  6909  0424  346C               	retlw	108	;'l'
  6910  0425  3420               	retlw	32	;' '
  6911  0426  3465               	retlw	101	;'e'
  6912  0427  3476               	retlw	118	;'v'
  6913  0428  3465               	retlw	101	;'e'
  6914  0429  346E               	retlw	110	;'n'
  6915  042A  3474               	retlw	116	;'t'
  6916  042B  3473               	retlw	115	;'s'
  6917  042C  340D               	retlw	13
  6918  042D  340A               	retlw	10
  6919  042E  3400               	retlw	0
  6920  042F                     STR_1:	
  6921  042F  3445               	retlw	69	;'E'
  6922  0430  3445               	retlw	69	;'E'
  6923  0431  3450               	retlw	80	;'P'
  6924  0432  3452               	retlw	82	;'R'
  6925  0433  344F               	retlw	79	;'O'
  6926  0434  344D               	retlw	77	;'M'
  6927  0435  3420               	retlw	32	;' '
  6928  0436  3477               	retlw	119	;'w'
  6929  0437  3472               	retlw	114	;'r'
  6930  0438  3469               	retlw	105	;'i'
  6931  0439  3474               	retlw	116	;'t'
  6932  043A  3465               	retlw	101	;'e'
  6933  043B  3420               	retlw	32	;' '
  6934  043C  3466               	retlw	102	;'f'
  6935  043D  3461               	retlw	97	;'a'
  6936  043E  3469               	retlw	105	;'i'
  6937  043F  346C               	retlw	108	;'l'
  6938  0440  3465               	retlw	101	;'e'
  6939  0441  3464               	retlw	100	;'d'
  6940  0442  340D               	retlw	13
  6941  0443  340A               	retlw	10
  6942  0444  3400               	retlw	0
  6943  0445                     STR_53:	
  6944  0445  3441               	retlw	65	;'A'
  6945  0446  344C               	retlw	76	;'L'
  6946  0447  3441               	retlw	65	;'A'
  6947  0448  3452               	retlw	82	;'R'
  6948  0449  344D               	retlw	77	;'M'
  6949  044A  3420               	retlw	32	;' '
  6950  044B  3425               	retlw	37	;'%'
  6951  044C  3464               	retlw	100	;'d'
  6952  044D  3420               	retlw	32	;' '
  6953  044E  3440               	retlw	64	;'@'
  6954  044F  3420               	retlw	32	;' '
  6955  0450  3425               	retlw	37	;'%'
  6956  0451  346C               	retlw	108	;'l'
  6957  0452  3475               	retlw	117	;'u'
  6958  0453  342E               	retlw	46	;'.'
  6959  0454  3425               	retlw	37	;'%'
  6960  0455  3475               	retlw	117	;'u'
  6961  0456  343A               	retlw	58	;':'
  6962  0457  340D               	retlw	13
  6963  0458  340A               	retlw	10
  6964  0459  3400               	retlw	0
  6965  045A                     STR_28:	
  6966  045A  3454               	retlw	84	;'T'
  6967  045B  3465               	retlw	101	;'e'
  6968  045C  346D               	retlw	109	;'m'
  6969  045D  3470               	retlw	112	;'p'
  6970  045E  3420               	retlw	32	;' '
  6971  045F  3473               	retlw	115	;'s'
  6972  0460  3465               	retlw	101	;'e'
  6973  0461  346E               	retlw	110	;'n'
  6974  0462  3473               	retlw	115	;'s'
  6975  0463  346F               	retlw	111	;'o'
  6976  0464  3472               	retlw	114	;'r'
  6977  0465  3420               	retlw	32	;' '
  6978  0466  3446               	retlw	70	;'F'
  6979  0467  3441               	retlw	65	;'A'
  6980  0468  3449               	retlw	73	;'I'
  6981  0469  344C               	retlw	76	;'L'
  6982  046A  340D               	retlw	13
  6983  046B  340A               	retlw	10
  6984  046C  3400               	retlw	0
  6985  046D                     STR_52:	
  6986  046D  3441               	retlw	65	;'A'
  6987  046E  346C               	retlw	108	;'l'
  6988  046F  3461               	retlw	97	;'a'
  6989  0470  3472               	retlw	114	;'r'
  6990  0471  346D               	retlw	109	;'m'
  6991  0472  3420               	retlw	32	;' '
  6992  0473  3463               	retlw	99	;'c'
  6993  0474  346F               	retlw	111	;'o'
  6994  0475  3475               	retlw	117	;'u'
  6995  0476  346E               	retlw	110	;'n'
  6996  0477  3474               	retlw	116	;'t'
  6997  0478  343A               	retlw	58	;':'
  6998  0479  3420               	retlw	32	;' '
  6999  047A  3425               	retlw	37	;'%'
  7000  047B  3475               	retlw	117	;'u'
  7001  047C  340D               	retlw	13
  7002  047D  340A               	retlw	10
  7003  047E  3400               	retlw	0
  7004  047F                     STR_60:	
  7005  047F  3430               	retlw	48	;'0'
  7006  0480  3431               	retlw	49	;'1'
  7007  0481  3432               	retlw	50	;'2'
  7008  0482  3433               	retlw	51	;'3'
  7009  0483  3434               	retlw	52	;'4'
  7010  0484  3435               	retlw	53	;'5'
  7011  0485  3436               	retlw	54	;'6'
  7012  0486  3437               	retlw	55	;'7'
  7013  0487  3438               	retlw	56	;'8'
  7014  0488  3439               	retlw	57	;'9'
  7015  0489  3461               	retlw	97	;'a'
  7016  048A  3462               	retlw	98	;'b'
  7017  048B  3463               	retlw	99	;'c'
  7018  048C  3464               	retlw	100	;'d'
  7019  048D  3465               	retlw	101	;'e'
  7020  048E  3466               	retlw	102	;'f'
  7021  048F  3400               	retlw	0
  7022  0490                     STR_47:	
  7023  0490  3441               	retlw	65	;'A'
  7024  0491  344C               	retlw	76	;'L'
  7025  0492  3441               	retlw	65	;'A'
  7026  0493  3452               	retlw	82	;'R'
  7027  0494  344D               	retlw	77	;'M'
  7028  0495  343A               	retlw	58	;':'
  7029  0496  3420               	retlw	32	;' '
  7030  0497  3425               	retlw	37	;'%'
  7031  0498  3464               	retlw	100	;'d'
  7032  0499  342E               	retlw	46	;'.'
  7033  049A  3425               	retlw	37	;'%'
  7034  049B  3464               	retlw	100	;'d'
  7035  049C  3420               	retlw	32	;' '
  7036  049D  3443               	retlw	67	;'C'
  7037  049E  340D               	retlw	13
  7038  049F  340A               	retlw	10
  7039  04A0  3400               	retlw	0
  7040  04A1                     STR_57:	
  7041  04A1  344E               	retlw	78	;'N'
  7042  04A2  344F               	retlw	79	;'O'
  7043  04A3  3454               	retlw	84	;'T'
  7044  04A4  3420               	retlw	32	;' '
  7045  04A5  3461               	retlw	97	;'a'
  7046  04A6  3463               	retlw	99	;'c'
  7047  04A7  346B               	retlw	107	;'k'
  7048  04A8  346E               	retlw	110	;'n'
  7049  04A9  346F               	retlw	111	;'o'
  7050  04AA  3477               	retlw	119	;'w'
  7051  04AB  346C               	retlw	108	;'l'
  7052  04AC  3465               	retlw	101	;'e'
  7053  04AD  3464               	retlw	100	;'d'
  7054  04AE  3467               	retlw	103	;'g'
  7055  04AF  3465               	retlw	101	;'e'
  7056  04B0  3464               	retlw	100	;'d'
  7057  04B1  3400               	retlw	0
  7058  04B2                     STR_27:	
  7059  04B2  3454               	retlw	84	;'T'
  7060  04B3  3465               	retlw	101	;'e'
  7061  04B4  346D               	retlw	109	;'m'
  7062  04B5  3470               	retlw	112	;'p'
  7063  04B6  3420               	retlw	32	;' '
  7064  04B7  3473               	retlw	115	;'s'
  7065  04B8  3465               	retlw	101	;'e'
  7066  04B9  346E               	retlw	110	;'n'
  7067  04BA  3473               	retlw	115	;'s'
  7068  04BB  346F               	retlw	111	;'o'
  7069  04BC  3472               	retlw	114	;'r'
  7070  04BD  3420               	retlw	32	;' '
  7071  04BE  344F               	retlw	79	;'O'
  7072  04BF  344B               	retlw	75	;'K'
  7073  04C0  340D               	retlw	13
  7074  04C1  340A               	retlw	10
  7075  04C2  3400               	retlw	0
  7076  04C3                     STR_43:	
  7077  04C3  3453               	retlw	83	;'S'
  7078  04C4  3461               	retlw	97	;'a'
  7079  04C5  3476               	retlw	118	;'v'
  7080  04C6  3469               	retlw	105	;'i'
  7081  04C7  346E               	retlw	110	;'n'
  7082  04C8  3467               	retlw	103	;'g'
  7083  04C9  3420               	retlw	32	;' '
  7084  04CA  3461               	retlw	97	;'a'
  7085  04CB  346C               	retlw	108	;'l'
  7086  04CC  3461               	retlw	97	;'a'
  7087  04CD  3472               	retlw	114	;'r'
  7088  04CE  346D               	retlw	109	;'m'
  7089  04CF  340D               	retlw	13
  7090  04D0  340A               	retlw	10
  7091  04D1  3400               	retlw	0
  7092  04D2                     STR_10:	
  7093  04D2  3448               	retlw	72	;'H'
  7094  04D3  3465               	retlw	101	;'e'
  7095  04D4  346C               	retlw	108	;'l'
  7096  04D5  346C               	retlw	108	;'l'
  7097  04D6  346F               	retlw	111	;'o'
  7098  04D7  3420               	retlw	32	;' '
  7099  04D8  3477               	retlw	119	;'w'
  7100  04D9  346F               	retlw	111	;'o'
  7101  04DA  3472               	retlw	114	;'r'
  7102  04DB  346C               	retlw	108	;'l'
  7103  04DC  3464               	retlw	100	;'d'
  7104  04DD  3421               	retlw	33	;'!'
  7105  04DE  340D               	retlw	13
  7106  04DF  340A               	retlw	10
  7107  04E0  3400               	retlw	0
  7108  04E1                     STR_19:	
  7109  04E1  3442               	retlw	66	;'B'
  7110  04E2  346F               	retlw	111	;'o'
  7111  04E3  3474               	retlw	116	;'t'
  7112  04E4  3474               	retlw	116	;'t'
  7113  04E5  346F               	retlw	111	;'o'
  7114  04E6  346D               	retlw	109	;'m'
  7115  04E7  3420               	retlw	32	;' '
  7116  04E8  346C               	retlw	108	;'l'
  7117  04E9  3469               	retlw	105	;'i'
  7118  04EA  346D               	retlw	109	;'m'
  7119  04EB  3469               	retlw	105	;'i'
  7120  04EC  3474               	retlw	116	;'t'
  7121  04ED  343A               	retlw	58	;':'
  7122  04EE  3420               	retlw	32	;' '
  7123  04EF  3400               	retlw	0
  7124  04F0                     STR_45:	
  7125  04F0  3441               	retlw	65	;'A'
  7126  04F1  346C               	retlw	108	;'l'
  7127  04F2  3461               	retlw	97	;'a'
  7128  04F3  3472               	retlw	114	;'r'
  7129  04F4  346D               	retlw	109	;'m'
  7130  04F5  3420               	retlw	32	;' '
  7131  04F6  3441               	retlw	65	;'A'
  7132  04F7  3443               	retlw	67	;'C'
  7133  04F8  344B               	retlw	75	;'K'
  7134  04F9  3427               	retlw	39	;'''
  7135  04FA  3464               	retlw	100	;'d'
  7136  04FB  340D               	retlw	13
  7137  04FC  340A               	retlw	10
  7138  04FD  3400               	retlw	0
  7139  04FE                     STR_16:	
  7140  04FE  3425               	retlw	37	;'%'
  7141  04FF  3464               	retlw	100	;'d'
  7142  0500  342E               	retlw	46	;'.'
  7143  0501  3425               	retlw	37	;'%'
  7144  0502  3464               	retlw	100	;'d'
  7145  0503  3420               	retlw	32	;' '
  7146  0504  3443               	retlw	67	;'C'
  7147  0505  3420               	retlw	32	;' '
  7148  0506  3473               	retlw	115	;'s'
  7149  0507  3465               	retlw	101	;'e'
  7150  0508  3474               	retlw	116	;'t'
  7151  0509  340D               	retlw	13
  7152  050A  340A               	retlw	10
  7153  050B  3400               	retlw	0
  7154  050C                     STR_25:	
  7155  050C  3455               	retlw	85	;'U'
  7156  050D  346E               	retlw	110	;'n'
  7157  050E  346B               	retlw	107	;'k'
  7158  050F  346E               	retlw	110	;'n'
  7159  0510  346F               	retlw	111	;'o'
  7160  0511  3477               	retlw	119	;'w'
  7161  0512  346E               	retlw	110	;'n'
  7162  0513  3420               	retlw	32	;' '
  7163  0514  3463               	retlw	99	;'c'
  7164  0515  346D               	retlw	109	;'m'
  7165  0516  3464               	retlw	100	;'d'
  7166  0517  343A               	retlw	58	;':'
  7167  0518  3420               	retlw	32	;' '
  7168  0519  3400               	retlw	0
  7169  051A                     STR_15:	
  7170  051A  3442               	retlw	66	;'B'
  7171  051B  346F               	retlw	111	;'o'
  7172  051C  3474               	retlw	116	;'t'
  7173  051D  3474               	retlw	116	;'t'
  7174  051E  346F               	retlw	111	;'o'
  7175  051F  346D               	retlw	109	;'m'
  7176  0520  3420               	retlw	32	;' '
  7177  0521  346C               	retlw	108	;'l'
  7178  0522  3469               	retlw	105	;'i'
  7179  0523  346D               	retlw	109	;'m'
  7180  0524  3469               	retlw	105	;'i'
  7181  0525  3474               	retlw	116	;'t'
  7182  0526  3420               	retlw	32	;' '
  7183  0527  3400               	retlw	0
  7184  0528                     STR_56:	
  7185  0528  3441               	retlw	65	;'A'
  7186  0529  3463               	retlw	99	;'c'
  7187  052A  346B               	retlw	107	;'k'
  7188  052B  346E               	retlw	110	;'n'
  7189  052C  346F               	retlw	111	;'o'
  7190  052D  3477               	retlw	119	;'w'
  7191  052E  346C               	retlw	108	;'l'
  7192  052F  3465               	retlw	101	;'e'
  7193  0530  3464               	retlw	100	;'d'
  7194  0531  3467               	retlw	103	;'g'
  7195  0532  3465               	retlw	101	;'e'
  7196  0533  3464               	retlw	100	;'d'
  7197  0534  3400               	retlw	0
  7198  0535                     STR_49:	
  7199  0535  3441               	retlw	65	;'A'
  7200  0536  344C               	retlw	76	;'L'
  7201  0537  3441               	retlw	65	;'A'
  7202  0538  3452               	retlw	82	;'R'
  7203  0539  344D               	retlw	77	;'M'
  7204  053A  3420               	retlw	32	;' '
  7205  053B  344F               	retlw	79	;'O'
  7206  053C  3446               	retlw	70	;'F'
  7207  053D  3446               	retlw	70	;'F'
  7208  053E  340D               	retlw	13
  7209  053F  340A               	retlw	10
  7210  0540  3400               	retlw	0
  7211  0541                     STR_18:	
  7212  0541  3455               	retlw	85	;'U'
  7213  0542  3470               	retlw	112	;'p'
  7214  0543  3420               	retlw	32	;' '
  7215  0544  346C               	retlw	108	;'l'
  7216  0545  3469               	retlw	105	;'i'
  7217  0546  346D               	retlw	109	;'m'
  7218  0547  3469               	retlw	105	;'i'
  7219  0548  3474               	retlw	116	;'t'
  7220  0549  343A               	retlw	58	;':'
  7221  054A  3420               	retlw	32	;' '
  7222  054B  3400               	retlw	0
  7223  054C                     STR_6:	
  7224  054C  340D               	retlw	13
  7225  054D  340A               	retlw	10
  7226  054E  3430               	retlw	48	;'0'
  7227  054F  3478               	retlw	120	;'x'
  7228  0550  3425               	retlw	37	;'%'
  7229  0551  3430               	retlw	48	;'0'
  7230  0552  3433               	retlw	51	;'3'
  7231  0553  3478               	retlw	120	;'x'
  7232  0554  343A               	retlw	58	;':'
  7233  0555  3420               	retlw	32	;' '
  7234  0556  3400               	retlw	0
  7235  0557                     STR_51:	
  7236  0557  3442               	retlw	66	;'B'
  7237  0558  3475               	retlw	117	;'u'
  7238  0559  347A               	retlw	122	;'z'
  7239  055A  3420               	retlw	32	;' '
  7240  055B  346F               	retlw	111	;'o'
  7241  055C  3466               	retlw	102	;'f'
  7242  055D  3466               	retlw	102	;'f'
  7243  055E  340D               	retlw	13
  7244  055F  340A               	retlw	10
  7245  0560  3400               	retlw	0
  7246  0561                     STR_17:	
  7247  0561  3469               	retlw	105	;'i'
  7248  0562  346E               	retlw	110	;'n'
  7249  0563  3476               	retlw	118	;'v'
  7250  0564  3461               	retlw	97	;'a'
  7251  0565  346C               	retlw	108	;'l'
  7252  0566  3469               	retlw	105	;'i'
  7253  0567  3464               	retlw	100	;'d'
  7254  0568  340D               	retlw	13
  7255  0569  340A               	retlw	10
  7256  056A  3400               	retlw	0
  7257  056B                     STR_14:	
  7258  056B  3455               	retlw	85	;'U'
  7259  056C  3470               	retlw	112	;'p'
  7260  056D  3420               	retlw	32	;' '
  7261  056E  346C               	retlw	108	;'l'
  7262  056F  3469               	retlw	105	;'i'
  7263  0570  346D               	retlw	109	;'m'
  7264  0571  3469               	retlw	105	;'i'
  7265  0572  3474               	retlw	116	;'t'
  7266  0573  3420               	retlw	32	;' '
  7267  0574  3400               	retlw	0
  7268  0575                     STR_22:	
  7269  0575  3463               	retlw	99	;'c'
  7270  0576  346C               	retlw	108	;'l'
  7271  0577  3472               	retlw	114	;'r'
  7272  0578  3465               	retlw	101	;'e'
  7273  0579  3476               	retlw	118	;'v'
  7274  057A  3465               	retlw	101	;'e'
  7275  057B  346E               	retlw	110	;'n'
  7276  057C  3474               	retlw	116	;'t'
  7277  057D  3473               	retlw	115	;'s'
  7278  057E  3400               	retlw	0
  7279  057F                     STR_7:	
  7280  057F  3442               	retlw	66	;'B'
  7281  0580  346F               	retlw	111	;'o'
  7282  0581  346F               	retlw	111	;'o'
  7283  0582  3474               	retlw	116	;'t'
  7284  0583  3420               	retlw	32	;' '
  7285  0584  344F               	retlw	79	;'O'
  7286  0585  344B               	retlw	75	;'K'
  7287  0586  340D               	retlw	13
  7288  0587  340A               	retlw	10
  7289  0588  3400               	retlw	0
  7290  0589                     STR_4:	
  7291  0589  3430               	retlw	48	;'0'
  7292  058A  3478               	retlw	120	;'x'
  7293  058B  3430               	retlw	48	;'0'
  7294  058C  3430               	retlw	48	;'0'
  7295  058D  3430               	retlw	48	;'0'
  7296  058E  343A               	retlw	58	;':'
  7297  058F  3420               	retlw	32	;' '
  7298  0590  3400               	retlw	0
  7299  0591                     STR_5:	
  7300  0591  3430               	retlw	48	;'0'
  7301  0592  3478               	retlw	120	;'x'
  7302  0593  3425               	retlw	37	;'%'
  7303  0594  3430               	retlw	48	;'0'
  7304  0595  3432               	retlw	50	;'2'
  7305  0596  3478               	retlw	120	;'x'
  7306  0597  3420               	retlw	32	;' '
  7307  0598  3400               	retlw	0
  7308  0599                     STR_59:	
  7309  0599  3428               	retlw	40	;'('
  7310  059A  346E               	retlw	110	;'n'
  7311  059B  3475               	retlw	117	;'u'
  7312  059C  346C               	retlw	108	;'l'
  7313  059D  346C               	retlw	108	;'l'
  7314  059E  3429               	retlw	41	;')'
  7315  059F  3400               	retlw	0
  7316  05A0                     STR_46:	
  7317  05A0  3420               	retlw	32	;' '
  7318  05A1  3420               	retlw	32	;' '
  7319  05A2  3420               	retlw	32	;' '
  7320  05A3  3420               	retlw	32	;' '
  7321  05A4  3420               	retlw	32	;' '
  7322  05A5  3400               	retlw	0
  7323  05A6                     STR_48:	
  7324  05A6  3441               	retlw	65	;'A'
  7325  05A7  344C               	retlw	76	;'L'
  7326  05A8  3441               	retlw	65	;'A'
  7327  05A9  3452               	retlw	82	;'R'
  7328  05AA  344D               	retlw	77	;'M'
  7329  05AB  3400               	retlw	0
  7330  05AC                     STR_9:	
  7331  05AC  3467               	retlw	103	;'g'
  7332  05AD  3472               	retlw	114	;'r'
  7333  05AE  3465               	retlw	101	;'e'
  7334  05AF  3465               	retlw	101	;'e'
  7335  05B0  3474               	retlw	116	;'t'
  7336  05B1  3400               	retlw	0
  7337  05B2                     STR_13:	
  7338  05B2  346C               	retlw	108	;'l'
  7339  05B3  3469               	retlw	105	;'i'
  7340  05B4  346D               	retlw	109	;'m'
  7341  05B5  3469               	retlw	105	;'i'
  7342  05B6  3474               	retlw	116	;'t'
  7343  05B7  3400               	retlw	0
  7344  05B8                     STR_26:	
  7345  05B8  3425               	retlw	37	;'%'
  7346  05B9  3473               	retlw	115	;'s'
  7347  05BA  340D               	retlw	13
  7348  05BB  340A               	retlw	10
  7349  05BC  3400               	retlw	0
  7350  05BD                     STR_11:	
  7351  05BD  3474               	retlw	116	;'t'
  7352  05BE  3465               	retlw	101	;'e'
  7353  05BF  346D               	retlw	109	;'m'
  7354  05C0  3470               	retlw	112	;'p'
  7355  05C1  3400               	retlw	0
  7356  05C2                     STR_24:	
  7357  05C2  3464               	retlw	100	;'d'
  7358  05C3  3475               	retlw	117	;'u'
  7359  05C4  346D               	retlw	109	;'m'
  7360  05C5  3470               	retlw	112	;'p'
  7361  05C6  3400               	retlw	0
  7362  05C7                     STR_32:	
  7363  05C7  3442               	retlw	66	;'B'
  7364  05C8  3420               	retlw	32	;' '
  7365  05C9  3400               	retlw	0
  7366  05CA                     STR_31:	
  7367  05CA  3455               	retlw	85	;'U'
  7368  05CB  3420               	retlw	32	;' '
  7369  05CC  3400               	retlw	0
  7370  05CD                     STR_30:	
  7371  05CD  342A               	retlw	42	;'*'
  7372  05CE  3400               	retlw	0
  7373  05CF                     STR_33:	
  7374  05CF  342D               	retlw	45	;'-'
  7375  05D0  3400               	retlw	0
  7376  05D1                     STR_37:	
  7377  05D1  3443               	retlw	67	;'C'
  7378  05D2  3400               	retlw	0
  7379  05D3                     STR_29:	
  7380  05D3  342E               	retlw	46	;'.'
  7381  05D4  3400               	retlw	0
  7382  04DE                     
  7383                           ; #config settings
  7384  0000                     
  7385                           	psect	nvBANK2
  7386  016C                     __pnvBANK2:	
  7387  016C                     __PWM3_CurDutyValue:	
  7388  016C                     	ds	2
  7389  016E                     _eusartTxBufferRemaining:	
  7390  016E                     	ds	1
  7391  000B                     _INTCONbits	set	11
  7392  0011                     _PIR1bits	set	17
  7393  0012                     _PIR2bits	set	18
  7394  000C                     _PORTA	set	12
  7395  001B                     _PR2	set	27
  7396  001C                     _T2CON	set	28
  7397  001C                     _T2CONbits	set	28
  7398  001A                     _TMR2	set	26
  7399  005F                     _GIE	set	95
  7400  0064                     _RA4	set	100
  7401  0065                     _RA5	set	101
  7402  0068                     _RB0	set	104
  7403  006A                     _RB2	set	106
  7404  006B                     _RB3	set	107
  7405  006C                     _RB4	set	108
  7406  006D                     _RB5	set	109
  7407  0072                     _RC2	set	114
  7408  0075                     _RC5	set	117
  7409  0095                     _OPTION_REGbits	set	149
  7410  0099                     _OSCCON	set	153
  7411  009A                     _OSCSTAT	set	154
  7412  0098                     _OSCTUNE	set	152
  7413  0091                     _PIE1bits	set	145
  7414  0092                     _PIE2bits	set	146
  7415  008C                     _TRISA	set	140
  7416  008C                     _TRISAbits	set	140
  7417  008D                     _TRISB	set	141
  7418  008D                     _TRISBbits	set	141
  7419  008E                     _TRISC	set	142
  7420  0090                     _TRISE	set	144
  7421  0097                     _WDTCONbits	set	151
  7422  0465                     _TRISA5	set	1125
  7423  010C                     _LATA	set	268
  7424  010D                     _LATB	set	269
  7425  010E                     _LATC	set	270
  7426  0865                     _LATA5	set	2149
  7427  086C                     _LATB4	set	2156
  7428  0871                     _LATC1	set	2161
  7429  0875                     _LATC5	set	2165
  7430  018C                     _ANSELA	set	396
  7431  018D                     _ANSELB	set	397
  7432  018E                     _ANSELC	set	398
  7433  019F                     _BAUD1CON	set	415
  7434  0199                     _RC1REG	set	409
  7435  019D                     _RC1STA	set	413
  7436  019D                     _RC1STAbits	set	413
  7437  019C                     _SP1BRGH	set	412
  7438  019B                     _SP1BRGL	set	411
  7439  019A                     _TX1REG	set	410
  7440  019E                     _TX1STA	set	414
  7441  0212                     _SSP1ADD	set	530
  7442  0215                     _SSP1CON1	set	533
  7443  0215                     _SSP1CON1bits	set	533
  7444  0214                     _SSP1STAT	set	532
  7445  0214                     _SSP1STATbits	set	532
  7446  0211                     _SSPBUF	set	529
  7447  020C                     _WPUA	set	524
  7448  020D                     _WPUB	set	525
  7449  020E                     _WPUC	set	526
  7450  0210                     _WPUE	set	528
  7451  029E                     _CCPTMRSbits	set	670
  7452  0416                     _PR4	set	1046
  7453  0417                     _T4CON	set	1047
  7454  0417                     _T4CONbits	set	1047
  7455  0415                     _TMR4	set	1045
  7456  0619                     _PWM3CON	set	1561
  7457  0618                     _PWM3DCH	set	1560
  7458  0617                     _PWM3DCL	set	1559
  7459  0E0F                     _PPSLOCK	set	3599
  7460  0E0F                     _PPSLOCKbits	set	3599
  7461  0E24                     _RXPPSbits	set	3620
  7462  0E20                     _SSPCLKPPSbits	set	3616
  7463  0E21                     _SSPDATPPSbits	set	3617
  7464  0E99                     _RB1PPSbits	set	3737
  7465  0EA0                     _RC0PPSbits	set	3744
  7466  0EA3                     _RC3PPSbits	set	3747
  7467  0EA6                     _RC6PPSbits	set	3750
  7468                           
  7469                           	psect	cinit
  7470  0036                     start_initialization:	
  7471  0036                     __initialization:		;BIGRAM
  7472                           
  7473                           ; Clear objects allocated to COMMON
  7474  0036  01FA               	clrf	__pbssCOMMON& (0+127)
  7475  0037  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  7476                           
  7477                           ; Clear objects allocated to BANK1
  7478  0038  30DE               	movlw	low __pbssBANK1
  7479  0039  0084               	movwf	4
  7480  003A  3000               	movlw	high __pbssBANK1
  7481  003B  0085               	movwf	5
  7482  003C  3011               	movlw	17
  7483  003D  00FE               	movwf	btemp
  7484  003E  3000               	movlw	0
  7485  003F  00FF               	movwf	btemp+1
  7486  0040  31A6  2674  3180   	fcall	clear_ram0
  7487                           
  7488                           ; Clear objects allocated to BANK2
  7489  0043  3020               	movlw	low __pbssBANK2
  7490  0044  0084               	movwf	4
  7491  0045  3001               	movlw	high __pbssBANK2
  7492  0046  0085               	movwf	5
  7493  0047  3048               	movlw	72
  7494  0048  00FE               	movwf	btemp
  7495  0049  3000               	movlw	0
  7496  004A  00FF               	movwf	btemp+1
  7497  004B  31A6  2674  3180   	fcall	clear_ram0
  7498                           
  7499                           ; Clear objects allocated to BANK3
  7500  004E  30A0               	movlw	low __pbssBANK3
  7501  004F  0084               	movwf	4
  7502  0050  3001               	movlw	high __pbssBANK3
  7503  0051  0085               	movwf	5
  7504  0052  3042               	movlw	66
  7505  0053  00FE               	movwf	btemp
  7506  0054  3000               	movlw	0
  7507  0055  00FF               	movwf	btemp+1
  7508  0056  31A6  2674  3180   	fcall	clear_ram0
  7509                           
  7510                           ; Clear objects allocated to BANK4
  7511  0059  3020               	movlw	low __pbssBANK4
  7512  005A  0084               	movwf	4
  7513  005B  3002               	movlw	high __pbssBANK4
  7514  005C  0085               	movwf	5
  7515  005D  3020               	movlw	32
  7516  005E  00FE               	movwf	btemp
  7517  005F  3000               	movlw	0
  7518  0060  00FF               	movwf	btemp+1
  7519  0061  31A6  2674  3180   	fcall	clear_ram0
  7520                           
  7521                           ; Initialize objects allocated to BIGRAM
  7522  0064  3037               	movlw	low __pidataBIGRAM
  7523  0065  0084               	movwf	4
  7524  0066  3093               	movlw	(high __pidataBIGRAM)| (0+128)
  7525  0067  0085               	movwf	5
  7526  0068  3078               	movlw	low (0+10104)
  7527  0069  0086               	movwf	6
  7528  006A  3027               	movlw	high (0+10104)
  7529  006B  0087               	movwf	7
  7530  006C  3000               	movlw	0
  7531  006D  00FF               	movwf	btemp+1
  7532  006E  3078               	movlw	120
  7533  006F  31A6  2668  3180   	fcall	init_ram
  7534                           
  7535                           ; Initialize objects allocated to BANK1
  7536  0072  0021               	movlb	1	; select bank1
  7537  0073  3180  2003  3180   	fcall	__pidataBANK1	;fetch initializer
  7538  0076  00EF               	movwf	__pdataBANK1& (0+127)
  7539                           
  7540                           ; Initialize objects allocated to BANK2
  7541  0077  3000               	movlw	low __pidataBANK2
  7542  0078  0084               	movwf	4
  7543  0079  3098               	movlw	(high __pidataBANK2)| (0+128)
  7544  007A  0085               	movwf	5
  7545  007B  3068               	movlw	low __pdataBANK2
  7546  007C  0086               	movwf	6
  7547  007D  3001               	movlw	high __pdataBANK2
  7548  007E  0087               	movwf	7
  7549  007F  3000               	movlw	0
  7550  0080  00FF               	movwf	btemp+1
  7551  0081  3004               	movlw	4
  7552  0082  31A6  2668  3180   	fcall	init_ram
  7553                           
  7554                           ; Initialize objects allocated to BANK5
  7555  0085  30A5               	movlw	low __pidataBANK5
  7556  0086  0084               	movwf	4
  7557  0087  309C               	movlw	(high __pidataBANK5)| (0+128)
  7558  0088  0085               	movwf	5
  7559  0089  30A0               	movlw	low __pdataBANK5
  7560  008A  0086               	movwf	6
  7561  008B  3002               	movlw	high __pdataBANK5
  7562  008C  0087               	movwf	7
  7563  008D  3000               	movlw	0
  7564  008E  00FF               	movwf	btemp+1
  7565  008F  3040               	movlw	64
  7566  0090  31A6  2668         	fcall	init_ram
  7567  0092                     end_of_initialization:	
  7568                           ;End of C runtime variable initialization code
  7569                           
  7570  0092                     __end_of__initialization:	
  7571  0092  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7572  0093  0020               	movlb	0
  7573  0094  3196  2E61         	ljmp	_main	;jump to C main() function
  7574                           
  7575                           	psect	bssCOMMON
  7576  007A                     __pbssCOMMON:	
  7577  007A                     __Menu_MaxValidIndex:	
  7578  007A                     	ds	1
  7579  007B                     __Menu_SelectedItem:	
  7580  007B                     	ds	1
  7581                           
  7582                           	psect	bssBANK1
  7583  00DE                     __pbssBANK1:	
  7584  00DE                     _CurTempInt:	
  7585  00DE                     	ds	2
  7586  00E0                     _CurTempFract:	
  7587  00E0                     	ds	1
  7588  00E1                     _SavedEventCounter:	
  7589  00E1                     	ds	1
  7590  00E2                     _alarmOn:	
  7591  00E2                     	ds	1
  7592  00E3                     _curRow:	
  7593  00E3                     	ds	1
  7594  00E4                     _eusartRxCount:	
  7595  00E4                     	ds	1
  7596  00E5                     _UpIntLimitRT:	
  7597  00E5                     	ds	2
  7598  00E7                     _curBottomFractLimit:	
  7599  00E7                     	ds	2
  7600  00E9                     _curBottomIntLimit:	
  7601  00E9                     	ds	2
  7602  00EB                     _curUpFractLimit:	
  7603  00EB                     	ds	2
  7604  00ED                     _curUpIntLimit:	
  7605  00ED                     	ds	2
  7606                           
  7607                           	psect	dataBANK1
  7608  00EF                     __pdataBANK1:	
  7609  00EF                     handleButtons@prevUpState:	
  7610  00EF                     	ds	1
  7611                           
  7612                           	psect	bssBANK2
  7613  0120                     __pbssBANK2:	
  7614  0120                     _TMR4_SecCntr:	
  7615  0120                     	ds	4
  7616  0124                     _ButtonDown_LongPressCB:	
  7617  0124                     	ds	2
  7618  0126                     _ButtonDown_PressCB:	
  7619  0126                     	ds	2
  7620  0128                     _ButtonDown_ReleaseCB:	
  7621  0128                     	ds	2
  7622  012A                     _ButtonSet_LongPressCB:	
  7623  012A                     	ds	2
  7624  012C                     _ButtonSet_PressCB:	
  7625  012C                     	ds	2
  7626  012E                     _ButtonSet_ReleaseCB:	
  7627  012E                     	ds	2
  7628  0130                     _ButtonUp_LongPressCB:	
  7629  0130                     	ds	2
  7630  0132                     _ButtonUp_PressCB:	
  7631  0132                     	ds	2
  7632  0134                     _ButtonUp_ReleaseCB:	
  7633  0134                     	ds	2
  7634  0136                     _TMR4_MsCntr:	
  7635  0136                     	ds	2
  7636  0138                     _oldBottomFractLimit:	
  7637  0138                     	ds	2
  7638  013A                     _oldBottomIntLimit:	
  7639  013A                     	ds	2
  7640  013C                     _oldUpFractLimit:	
  7641  013C                     	ds	2
  7642  013E                     _oldUpIntLimit:	
  7643  013E                     	ds	2
  7644  0140                     _prevDownReleaseCB:	
  7645  0140                     	ds	2
  7646  0142                     _prevSetLongPressCB:	
  7647  0142                     	ds	2
  7648  0144                     _prevSetReleaseCB:	
  7649  0144                     	ds	2
  7650  0146                     _prevUpReleaseCB:	
  7651  0146                     	ds	2
  7652  0148                     updateTemperature@TempStartMs:	
  7653  0148                     	ds	2
  7654  014A                     __ButtonDownPressed:	
  7655  014A                     	ds	1
  7656  014B                     __ButtonSetPressed:	
  7657  014B                     	ds	1
  7658  014C                     __ButtonUpPressed:	
  7659  014C                     	ds	1
  7660  014D                     _alarmAckd:	
  7661  014D                     	ds	1
  7662  014E                     _eusartRxHead:	
  7663  014E                     	ds	1
  7664  014F                     _eusartRxTail:	
  7665  014F                     	ds	1
  7666  0150                     _eusartTxHead:	
  7667  0150                     	ds	1
  7668  0151                     _eusartTxTail:	
  7669  0151                     	ds	1
  7670  0152                     _macro_delay:	
  7671  0152                     	ds	1
  7672  0153                     _menuDir:	
  7673  0153                     	ds	1
  7674  0154                     handleButtons@downInLongPress:	
  7675  0154                     	ds	1
  7676  0155                     handleButtons@downLongPressFired:	
  7677  0155                     	ds	1
  7678  0156                     handleButtons@setInLongPress:	
  7679  0156                     	ds	1
  7680  0157                     handleButtons@setLongPressFired:	
  7681  0157                     	ds	1
  7682  0158                     handleButtons@upInLongPress:	
  7683  0158                     	ds	1
  7684  0159                     handleButtons@upLongPressFired:	
  7685  0159                     	ds	1
  7686  015A                     handleUARTInput@i:	
  7687  015A                     	ds	1
  7688  015B                     updateTemperature@TempCheckInProgress:	
  7689  015B                     	ds	1
  7690  015C                     updateTemperature@TempStartSec:	
  7691  015C                     	ds	4
  7692  0160                     _BottomFractLimitRT:	
  7693  0160                     	ds	2
  7694  0162                     _BottomIntLimitRT:	
  7695  0162                     	ds	2
  7696  0164                     _CurrentTemperatureRaw:	
  7697  0164                     	ds	2
  7698  0166                     _UpFractLimitRT:	
  7699  0166                     	ds	2
  7700                           
  7701                           	psect	dataBANK2
  7702  0168                     __pdataBANK2:	
  7703  0168                     updateTemperature@RunCount:	
  7704  0168                     	ds	2
  7705  016A                     handleButtons@prevDownState:	
  7706  016A                     	ds	1
  7707  016B                     handleButtons@prevSetState:	
  7708  016B                     	ds	1
  7709                           
  7710                           	psect	bssBANK3
  7711  01A0                     __pbssBANK3:	
  7712  01A0                     _lastAlarmTime:	
  7713  01A0                     	ds	6
  7714  01A6                     main@F6692:	
  7715  01A6                     	ds	6
  7716  01AC                     LCDWriteInt@F6391:	
  7717  01AC                     	ds	5
  7718  01B1                     _buf:	
  7719  01B1                     	ds	16
  7720  01C1                     MenuScreen_Clear@allSpace:	
  7721  01C1                     	ds	9
  7722  01CA                     __ButtonDown_LastChangeTime:	
  7723  01CA                     	ds	6
  7724  01D0                     __ButtonSet_LastChangeTime:	
  7725  01D0                     	ds	6
  7726  01D6                     __ButtonUp_LastChangeTime:	
  7727  01D6                     	ds	6
  7728  01DC                     _lastBuzStartTime:	
  7729  01DC                     	ds	6
  7730                           
  7731                           	psect	bssBANK4
  7732  0220                     __pbssBANK4:	
  7733  0220                     _eusartRxBuffer:	
  7734  0220                     	ds	16
  7735  0230                     _eusartTxBuffer:	
  7736  0230                     	ds	16
  7737                           
  7738                           	psect	dataBANK5
  7739  02A0                     __pdataBANK5:	
  7740  02A0                     ___cgram:	
  7741  02A0                     	ds	64
  7742                           
  7743                           	psect	clrtext
  7744  2674                     clear_ram0:	
  7745                           ;	Called with FSR0 containing the base address, and
  7746                           ;	btemp/btemp+1 has the size to clear
  7747                           
  7748  2674  0064               	clrwdt	;clear the watchdog before getting into this loop
  7749  2675                     clrloop0:	
  7750  2675  0180               	clrf	0	;clear RAM location pointed to by FSR
  7751  2676  3101               	addfsr 0,1
  7752  2677  3001               	movlw	1
  7753  2678  02FE               	subwf	126,f
  7754  2679  3000               	movlw	0
  7755  267A  3BFF               	subwfb	127,f
  7756  267B  087F               	movf	127,w
  7757  267C  047E               	iorwf	126,w
  7758  267D  1903               	btfsc	3,2
  7759  267E  3400               	retlw	0	;all done for this memory range, return
  7760  267F  2E75               	goto	clrloop0	;have we reached the end yet?
  7761                           
  7762                           	psect	inittext
  7763  2668                     init_ram:	
  7764  2668  00FE               	movwf	126
  7765  2669                     initloop:	
  7766  2669  0012               	moviw fsr0++
  7767  266A  001E               	movwi fsr1++
  7768  266B  3001               	movlw	1
  7769  266C  02FE               	subwf	126,f
  7770  266D  3000               	movlw	0
  7771  266E  3BFF               	subwfb	127,f
  7772  266F  087F               	movf	127,w
  7773  2670  047E               	iorwf	126,w
  7774  2671  1903               	btfsc	3,2
  7775  2672  3400               	retlw	0
  7776  2673  2E69               	goto	initloop
  7777                           
  7778                           	psect	cstackBANK1
  7779  00A0                     __pcstackBANK1:	
  7780  00A0                     ??_checkAlarm:	
  7781  00A0                     clearAllAlarmEvents@i:	
  7782                           ; 0 bytes @ 0x0
  7783                           
  7784  00A0                     Config_SetUpLimit@writeData:	
  7785                           ; 1 bytes @ 0x0
  7786                           
  7787  00A0                     Config_SetBottomLimit@writeData:	
  7788                           ; 4 bytes @ 0x0
  7789                           
  7790  00A0                     __ACKLastSavedEvent@newEvent:	
  7791                           ; 4 bytes @ 0x0
  7792                           
  7793                           
  7794                           ; 16 bytes @ 0x0
  7795  00A0                     	ds	1
  7796  00A1                     clearAllAlarmEvents@nullEvt:	
  7797                           
  7798                           ; 16 bytes @ 0x1
  7799  00A1                     	ds	3
  7800  00A4                     Config_SetUpLimit@success:	
  7801  00A4                     Config_SetBottomLimit@success:	
  7802                           ; 1 bytes @ 0x4
  7803                           
  7804                           
  7805                           ; 1 bytes @ 0x4
  7806  00A4                     	ds	4
  7807  00A8                     checkAlarm@buzOnTime:	
  7808                           
  7809                           ; 4 bytes @ 0x8
  7810  00A8                     	ds	4
  7811  00AC                     _checkAlarm$1557:	
  7812                           
  7813                           ; 1 bytes @ 0xC
  7814  00AC                     	ds	1
  7815  00AD                     _checkAlarm$1559:	
  7816                           
  7817                           ; 1 bytes @ 0xD
  7818  00AD                     	ds	1
  7819  00AE                     checkAlarm@alarmJustChanged:	
  7820                           
  7821                           ; 1 bytes @ 0xE
  7822  00AE                     	ds	1
  7823  00AF                     checkAlarm@belowBottom:	
  7824                           
  7825                           ; 1 bytes @ 0xF
  7826  00AF                     	ds	1
  7827  00B0                     _handleButtons$379:	
  7828  00B0                     checkAlarm@aboveUp:	
  7829                           ; 1 bytes @ 0x10
  7830                           
  7831                           
  7832                           ; 1 bytes @ 0x10
  7833  00B0                     	ds	1
  7834  00B1                     _handleButtons$382:	
  7835  00B1                     processCommand@success:	
  7836                           ; 1 bytes @ 0x11
  7837                           
  7838  00B1                     checkAlarm@curTime:	
  7839                           ; 1 bytes @ 0x11
  7840                           
  7841                           
  7842                           ; 6 bytes @ 0x11
  7843  00B1                     	ds	1
  7844  00B2                     _handleButtons$385:	
  7845  00B2                     processCommand@saveOk:	
  7846                           ; 1 bytes @ 0x12
  7847                           
  7848                           
  7849                           ; 1 bytes @ 0x12
  7850  00B2                     	ds	1
  7851  00B3                     handleButtons@downState:	
  7852  00B3                     processCommand@intLimit:	
  7853                           ; 1 bytes @ 0x13
  7854                           
  7855                           
  7856                           ; 2 bytes @ 0x13
  7857  00B3                     	ds	1
  7858  00B4                     handleButtons@upState:	
  7859                           
  7860                           ; 1 bytes @ 0x14
  7861  00B4                     	ds	1
  7862  00B5                     handleButtons@setState:	
  7863  00B5                     processCommand@fractLimit:	
  7864                           ; 1 bytes @ 0x15
  7865                           
  7866                           
  7867                           ; 2 bytes @ 0x15
  7868  00B5                     	ds	1
  7869  00B6                     handleButtons@now:	
  7870                           
  7871                           ; 6 bytes @ 0x16
  7872  00B6                     	ds	1
  7873  00B7                     processCommand@curIntLimit:	
  7874  00B7                     checkAlarm@e:	
  7875                           ; 2 bytes @ 0x17
  7876                           
  7877                           
  7878                           ; 16 bytes @ 0x17
  7879  00B7                     	ds	2
  7880  00B9                     processCommand@curFractLimit:	
  7881                           
  7882                           ; 2 bytes @ 0x19
  7883  00B9                     	ds	2
  7884  00BB                     processCommand@intEnd:	
  7885                           
  7886                           ; 1 bytes @ 0x1B
  7887  00BB                     	ds	1
  7888  00BC                     processCommand@buf:	
  7889                           
  7890                           ; 1 bytes @ 0x1C
  7891  00BC                     	ds	1
  7892  00BD                     handleUARTInput@hadNL:	
  7893                           
  7894                           ; 1 bytes @ 0x1D
  7895  00BD                     	ds	1
  7896  00BE                     handleUARTInput@c:	
  7897                           
  7898                           ; 1 bytes @ 0x1E
  7899  00BE                     	ds	9
  7900  00C7                     ??_main:	
  7901                           
  7902                           ; 0 bytes @ 0x27
  7903  00C7                     	ds	1
  7904  00C8                     main@diffMs:	
  7905                           
  7906                           ; 4 bytes @ 0x28
  7907  00C8                     	ds	4
  7908  00CC                     main@lastAlarmTime:	
  7909                           
  7910                           ; 6 bytes @ 0x2C
  7911  00CC                     	ds	6
  7912  00D2                     main@prevTime:	
  7913                           
  7914                           ; 6 bytes @ 0x32
  7915  00D2                     	ds	6
  7916  00D8                     main@curTime:	
  7917                           
  7918                           ; 6 bytes @ 0x38
  7919  00D8                     	ds	6
  7920                           
  7921                           	psect	cstackCOMMON
  7922  0070                     __pcstackCOMMON:	
  7923  0070                     ?_LCDBusyLoop:	
  7924  0070                     ?_OSCILLATOR_Initialize:	
  7925                           ; 0 bytes @ 0x0
  7926                           
  7927  0070                     ?_TMR2_Initialize:	
  7928                           ; 0 bytes @ 0x0
  7929                           
  7930  0070                     ?_PWM3_Initialize:	
  7931                           ; 0 bytes @ 0x0
  7932                           
  7933  0070                     ?_EUSART_Initialize:	
  7934                           ; 0 bytes @ 0x0
  7935                           
  7936  0070                     ?_SPI_Initialize:	
  7937                           ; 0 bytes @ 0x0
  7938                           
  7939  0070                     ?_TMR4_Initialize:	
  7940                           ; 0 bytes @ 0x0
  7941                           
  7942  0070                     ?_TMR2_StartTimer:	
  7943                           ; 0 bytes @ 0x0
  7944                           
  7945  0070                     ?_TMR4_ISR:	
  7946                           ; 0 bytes @ 0x0
  7947                           
  7948  0070                     ??_TMR4_ISR:	
  7949                           ; 0 bytes @ 0x0
  7950                           
  7951  0070                     ?_TMR4_StartTimer:	
  7952                           ; 0 bytes @ 0x0
  7953                           
  7954  0070                     ?_TempSensor_Init:	
  7955                           ; 0 bytes @ 0x0
  7956                           
  7957  0070                     ?_Config_InitRTValues:	
  7958                           ; 0 bytes @ 0x0
  7959                           
  7960  0070                     ?_Alarm_Init:	
  7961                           ; 0 bytes @ 0x0
  7962                           
  7963  0070                     ?_ACKAlarm:	
  7964                           ; 0 bytes @ 0x0
  7965                           
  7966  0070                     ?_MenuScreen_Init:	
  7967                           ; 0 bytes @ 0x0
  7968                           
  7969  0070                     ?_MenuScreen_Display:	
  7970                           ; 0 bytes @ 0x0
  7971                           
  7972  0070                     ?_updateTemperature:	
  7973                           ; 0 bytes @ 0x0
  7974                           
  7975  0070                     ?_checkAlarm:	
  7976                           ; 0 bytes @ 0x0
  7977                           
  7978  0070                     ?_printAllAlarmEvents:	
  7979                           ; 0 bytes @ 0x0
  7980                           
  7981  0070                     ?_clearAllAlarmEvents:	
  7982                           ; 0 bytes @ 0x0
  7983                           
  7984  0070                     ?_SettingsScreen_Display:	
  7985                           ; 0 bytes @ 0x0
  7986                           
  7987  0070                     ?_LeaveSettingsScreen:	
  7988                           ; 0 bytes @ 0x0
  7989                           
  7990  0070                     ?_MenuScreen_Clear:	
  7991                           ; 0 bytes @ 0x0
  7992                           
  7993  0070                     ?_isdigit:	
  7994                           ; 0 bytes @ 0x0
  7995                           
  7996  0070                     ?_isspace:	
  7997                           ; 1 bit 
  7998                           
  7999  0070                     ?_isalpha:	
  8000                           ; 1 bit 
  8001                           
  8002  0070                     ?_isupper:	
  8003                           ; 1 bit 
  8004                           
  8005  0070                     ?_drive_OW_low:	
  8006                           ; 1 bit 
  8007                           
  8008  0070                     ?_drive_OW_high:	
  8009                           ; 0 bytes @ 0x0
  8010                           
  8011  0070                     ?_OW_write_bit:	
  8012                           ; 0 bytes @ 0x0
  8013                           
  8014  0070                     ?_OW_write_byte:	
  8015                           ; 0 bytes @ 0x0
  8016                           
  8017  0070                     ?_LCDInit:	
  8018                           ; 0 bytes @ 0x0
  8019                           
  8020  0070                     ?_EEPROM_25AA040A_Dump:	
  8021                           ; 0 bytes @ 0x0
  8022                           
  8023  0070                     ?_DS18B20_StartConversion:	
  8024                           ; 0 bytes @ 0x0
  8025                           
  8026  0070                     ?_DS18B20_SetResolution:	
  8027                           ; 0 bytes @ 0x0
  8028                           
  8029  0070                     ?_handleButtons:	
  8030                           ; 0 bytes @ 0x0
  8031                           
  8032  0070                     ?_FlashLed100ms:	
  8033                           ; 0 bytes @ 0x0
  8034                           
  8035  0070                     ?_PIN_MANAGER_Initialize:	
  8036                           ; 0 bytes @ 0x0
  8037                           
  8038  0070                     ?_SYSTEM_Initialize:	
  8039                           ; 0 bytes @ 0x0
  8040                           
  8041  0070                     ?_EUSART_Write:	
  8042                           ; 0 bytes @ 0x0
  8043                           
  8044  0070                     ?_putch:	
  8045                           ; 0 bytes @ 0x0
  8046                           
  8047  0070                     ?_EUSART_Transmit_ISR:	
  8048                           ; 0 bytes @ 0x0
  8049                           
  8050  0070                     ??_EUSART_Transmit_ISR:	
  8051                           ; 0 bytes @ 0x0
  8052                           
  8053  0070                     ?_EUSART_Receive_ISR:	
  8054                           ; 0 bytes @ 0x0
  8055                           
  8056  0070                     ??_EUSART_Receive_ISR:	
  8057                           ; 0 bytes @ 0x0
  8058                           
  8059  0070                     ?_TMR2_ISR:	
  8060                           ; 0 bytes @ 0x0
  8061                           
  8062  0070                     ??_TMR2_ISR:	
  8063                           ; 0 bytes @ 0x0
  8064                           
  8065  0070                     ?_INTERRUPT_InterruptManager:	
  8066                           ; 0 bytes @ 0x0
  8067                           
  8068  0070                     ?_initDrivers:	
  8069                           ; 0 bytes @ 0x0
  8070                           
  8071  0070                     ?_handleUARTInput:	
  8072                           ; 0 bytes @ 0x0
  8073                           
  8074  0070                     ?_main:	
  8075                           ; 0 bytes @ 0x0
  8076                           
  8077  0070                     ?__SettingsScreen_SetLongPress:	
  8078                           ; 0 bytes @ 0x0
  8079                           
  8080  0070                     ?_SettingsScreen_Init:	
  8081                           ; 0 bytes @ 0x0
  8082                           
  8083  0070                     ?__AlarmEvent_IncreaseSavedCounter:	
  8084                           ; 0 bytes @ 0x0
  8085                           
  8086  0070                     ?__saveAlarmEvent:	
  8087                           ; 0 bytes @ 0x0
  8088                           
  8089  0070                     ?__ACKLastSavedEvent:	
  8090                           ; 0 bytes @ 0x0
  8091                           
  8092  0070                     ?_SPI_Exchange8bit:	
  8093                           ; 0 bytes @ 0x0
  8094                           
  8095  0070                     ?_processCommand:	
  8096                           ; 1 bytes @ 0x0
  8097                           
  8098  0070                     ?_toupper:	
  8099                           ; 1 bytes @ 0x0
  8100                           
  8101  0070                     ?_read_OW:	
  8102                           ; 1 bytes @ 0x0
  8103                           
  8104  0070                     ?_OW_reset_pulse:	
  8105                           ; 1 bytes @ 0x0
  8106                           
  8107  0070                     ?_OW_read_bit:	
  8108                           ; 1 bytes @ 0x0
  8109                           
  8110  0070                     ?_OW_read_byte:	
  8111                           ; 1 bytes @ 0x0
  8112                           
  8113  0070                     ?__EEPROM_25AA040A_ReadStatus:	
  8114                           ; 1 bytes @ 0x0
  8115                           
  8116  0070                     ?__EEPROM_25AA040A_WriteEnable:	
  8117                           ; 1 bytes @ 0x0
  8118                           
  8119  0070                     ?_DS18B20_ResetAndDetect:	
  8120                           ; 1 bytes @ 0x0
  8121                           
  8122  0070                     ?_EUSART_Read:	
  8123                           ; 1 bytes @ 0x0
  8124                           
  8125  0070                     ?_getch:	
  8126                           ; 1 bytes @ 0x0
  8127                           
  8128  0070                     DS18B20_SetResolution@res:	
  8129                           ; 1 bytes @ 0x0
  8130                           
  8131                           
  8132                           ; 1 bytes @ 0x0
  8133  0070                     	ds	1
  8134  0071                     ??_INTERRUPT_InterruptManager:	
  8135                           
  8136                           ; 0 bytes @ 0x1
  8137  0071                     	ds	1
  8138  0072                     ?_PWM3_LoadDutyValue:	
  8139  0072                     ??_LCDBusyLoop:	
  8140                           ; 0 bytes @ 0x2
  8141                           
  8142  0072                     ??_SPI_Exchange8bit:	
  8143                           ; 0 bytes @ 0x2
  8144                           
  8145  0072                     ??_OSCILLATOR_Initialize:	
  8146                           ; 0 bytes @ 0x2
  8147                           
  8148  0072                     ??_TMR2_Initialize:	
  8149                           ; 0 bytes @ 0x2
  8150                           
  8151  0072                     ??_PWM3_Initialize:	
  8152                           ; 0 bytes @ 0x2
  8153                           
  8154  0072                     ??_EUSART_Initialize:	
  8155                           ; 0 bytes @ 0x2
  8156                           
  8157  0072                     ??_SPI_Initialize:	
  8158                           ; 0 bytes @ 0x2
  8159                           
  8160  0072                     ??_TMR4_Initialize:	
  8161                           ; 0 bytes @ 0x2
  8162                           
  8163  0072                     ??_TMR2_StartTimer:	
  8164                           ; 0 bytes @ 0x2
  8165                           
  8166  0072                     ??_TMR4_StartTimer:	
  8167                           ; 0 bytes @ 0x2
  8168                           
  8169  0072                     ??_isdigit:	
  8170                           ; 0 bytes @ 0x2
  8171                           
  8172  0072                     ??_isspace:	
  8173                           ; 0 bytes @ 0x2
  8174                           
  8175  0072                     ??_toupper:	
  8176                           ; 0 bytes @ 0x2
  8177                           
  8178  0072                     ??_isupper:	
  8179                           ; 0 bytes @ 0x2
  8180                           
  8181  0072                     ??_drive_OW_low:	
  8182                           ; 0 bytes @ 0x2
  8183                           
  8184  0072                     ??_drive_OW_high:	
  8185                           ; 0 bytes @ 0x2
  8186                           
  8187  0072                     ??_read_OW:	
  8188                           ; 0 bytes @ 0x2
  8189                           
  8190  0072                     ??_OW_write_bit:	
  8191                           ; 0 bytes @ 0x2
  8192                           
  8193  0072                     ??_FlashLed100ms:	
  8194                           ; 0 bytes @ 0x2
  8195                           
  8196  0072                     ??_PIN_MANAGER_Initialize:	
  8197                           ; 0 bytes @ 0x2
  8198                           
  8199  0072                     ??_EUSART_Read:	
  8200                           ; 0 bytes @ 0x2
  8201                           
  8202  0072                     ??_EUSART_Write:	
  8203                           ; 0 bytes @ 0x2
  8204                           
  8205  0072                     ?___bmul:	
  8206                           ; 0 bytes @ 0x2
  8207                           
  8208  0072                     ?_PWM3_GetDutyValue:	
  8209                           ; 1 bytes @ 0x2
  8210                           
  8211  0072                     ?_memset:	
  8212                           ; 2 bytes @ 0x2
  8213                           
  8214  0072                     ?_strncmp:	
  8215                           ; 2 bytes @ 0x2
  8216                           
  8217  0072                     ?_strlen:	
  8218                           ; 2 bytes @ 0x2
  8219                           
  8220  0072                     ?_TMR4_GetMs:	
  8221                           ; 2 bytes @ 0x2
  8222                           
  8223  0072                     ?___awdiv:	
  8224                           ; 2 bytes @ 0x2
  8225                           
  8226  0072                     ?___awmod:	
  8227                           ; 2 bytes @ 0x2
  8228                           
  8229  0072                     ?_TMR4_GetSec:	
  8230                           ; 2 bytes @ 0x2
  8231                           
  8232  0072                     ?___lmul:	
  8233                           ; 4 bytes @ 0x2
  8234                           
  8235  0072                     ?___lldiv:	
  8236                           ; 4 bytes @ 0x2
  8237                           
  8238  0072                     read_OW@read_data:	
  8239                           ; 4 bytes @ 0x2
  8240                           
  8241  0072                     PIN_MANAGER_Initialize@state:	
  8242                           ; 1 bytes @ 0x2
  8243                           
  8244  0072                     SPI_Exchange8bit@data:	
  8245                           ; 1 bytes @ 0x2
  8246                           
  8247  0072                     ___bmul@multiplicand:	
  8248                           ; 1 bytes @ 0x2
  8249                           
  8250  0072                     _isdigit$1778:	
  8251                           ; 1 bytes @ 0x2
  8252                           
  8253  0072                     _isspace$1878:	
  8254                           ; 1 bytes @ 0x2
  8255                           
  8256  0072                     _isupper$1881:	
  8257                           ; 1 bytes @ 0x2
  8258                           
  8259  0072                     PWM3_LoadDutyValue@dutyValue:	
  8260                           ; 1 bytes @ 0x2
  8261                           
  8262  0072                     ___awdiv@divisor:	
  8263                           ; 2 bytes @ 0x2
  8264                           
  8265  0072                     ___awmod@divisor:	
  8266                           ; 2 bytes @ 0x2
  8267                           
  8268  0072                     memset@p1:	
  8269                           ; 2 bytes @ 0x2
  8270                           
  8271  0072                     strncmp@s2:	
  8272                           ; 2 bytes @ 0x2
  8273                           
  8274  0072                     ___lmul@multiplier:	
  8275                           ; 2 bytes @ 0x2
  8276                           
  8277  0072                     ___lldiv@divisor:	
  8278                           ; 4 bytes @ 0x2
  8279                           
  8280                           
  8281                           ; 4 bytes @ 0x2
  8282  0072                     	ds	1
  8283  0073                     ??_OW_reset_pulse:	
  8284  0073                     ??_OW_read_bit:	
  8285                           ; 0 bytes @ 0x3
  8286                           
  8287  0073                     ??__EEPROM_25AA040A_ReadStatus:	
  8288                           ; 0 bytes @ 0x3
  8289                           
  8290  0073                     ?_EEPROM_25AA040A_ReadToBuffer:	
  8291                           ; 0 bytes @ 0x3
  8292                           
  8293  0073                     ??_SYSTEM_Initialize:	
  8294                           ; 0 bytes @ 0x3
  8295                           
  8296  0073                     ??___bmul:	
  8297                           ; 0 bytes @ 0x3
  8298                           
  8299  0073                     ?_EEPROM_25AA040A_ReadByte:	
  8300                           ; 0 bytes @ 0x3
  8301                           
  8302  0073                     OW_write_bit@write_bit:	
  8303                           ; 1 bytes @ 0x3
  8304                           
  8305  0073                     EUSART_Read@readValue:	
  8306                           ; 1 bytes @ 0x3
  8307                           
  8308  0073                     EUSART_Write@txData:	
  8309                           ; 1 bytes @ 0x3
  8310                           
  8311  0073                     isdigit@c:	
  8312                           ; 1 bytes @ 0x3
  8313                           
  8314  0073                     toupper@c:	
  8315                           ; 1 bytes @ 0x3
  8316                           
  8317  0073                     isspace@c:	
  8318                           ; 1 bytes @ 0x3
  8319                           
  8320  0073                     isupper@c:	
  8321                           ; 1 bytes @ 0x3
  8322                           
  8323  0073                     EEPROM_25AA040A_ReadByte@address:	
  8324                           ; 1 bytes @ 0x3
  8325                           
  8326  0073                     EEPROM_25AA040A_ReadToBuffer@address:	
  8327                           ; 2 bytes @ 0x3
  8328                           
  8329                           
  8330                           ; 2 bytes @ 0x3
  8331  0073                     	ds	1
  8332  0074                     ??_PWM3_GetDutyValue:	
  8333  0074                     ??_PWM3_LoadDutyValue:	
  8334                           ; 0 bytes @ 0x4
  8335                           
  8336  0074                     ??_strlen:	
  8337                           ; 0 bytes @ 0x4
  8338                           
  8339  0074                     ??_isalpha:	
  8340                           ; 0 bytes @ 0x4
  8341                           
  8342  0074                     ??_OW_write_byte:	
  8343                           ; 0 bytes @ 0x4
  8344                           
  8345  0074                     ??_getch:	
  8346                           ; 0 bytes @ 0x4
  8347                           
  8348  0074                     ??_putch:	
  8349                           ; 0 bytes @ 0x4
  8350                           
  8351  0074                     ??_TMR4_GetMs:	
  8352                           ; 0 bytes @ 0x4
  8353                           
  8354  0074                     OW_reset_pulse@presence_detect:	
  8355                           ; 0 bytes @ 0x4
  8356                           
  8357  0074                     OW_read_bit@read_data:	
  8358                           ; 1 bytes @ 0x4
  8359                           
  8360  0074                     LCDBusyLoop@busy:	
  8361                           ; 1 bytes @ 0x4
  8362                           
  8363  0074                     __EEPROM_25AA040A_ReadStatus@regVal:	
  8364                           ; 1 bytes @ 0x4
  8365                           
  8366  0074                     putch@txData:	
  8367                           ; 1 bytes @ 0x4
  8368                           
  8369  0074                     ___bmul@product:	
  8370                           ; 1 bytes @ 0x4
  8371                           
  8372  0074                     _isalpha$1875:	
  8373                           ; 1 bytes @ 0x4
  8374                           
  8375  0074                     ___awdiv@dividend:	
  8376                           ; 1 bytes @ 0x4
  8377                           
  8378  0074                     ___awmod@dividend:	
  8379                           ; 2 bytes @ 0x4
  8380                           
  8381  0074                     memset@c:	
  8382                           ; 2 bytes @ 0x4
  8383                           
  8384  0074                     strncmp@len:	
  8385                           ; 2 bytes @ 0x4
  8386                           
  8387                           
  8388                           ; 2 bytes @ 0x4
  8389  0074                     	ds	1
  8390  0075                     ??_OW_read_byte:	
  8391  0075                     ??_EEPROM_25AA040A_ReadByte:	
  8392                           ; 0 bytes @ 0x5
  8393                           
  8394  0075                     ??_DS18B20_ResetAndDetect:	
  8395                           ; 0 bytes @ 0x5
  8396                           
  8397  0075                     OW_write_byte@write_data:	
  8398                           ; 0 bytes @ 0x5
  8399                           
  8400  0075                     LCDBusyLoop@temp:	
  8401                           ; 1 bytes @ 0x5
  8402                           
  8403  0075                     EEPROM_25AA040A_ReadToBuffer@dst:	
  8404                           ; 1 bytes @ 0x5
  8405                           
  8406  0075                     ___bmul@multiplier:	
  8407                           ; 1 bytes @ 0x5
  8408                           
  8409  0075                     isalpha@c:	
  8410                           ; 1 bytes @ 0x5
  8411                           
  8412                           
  8413                           ; 1 bytes @ 0x5
  8414  0075                     	ds	1
  8415  0076                     ??_SysTime_GetNow:	
  8416  0076                     ??_strncmp:	
  8417                           ; 0 bytes @ 0x6
  8418                           
  8419  0076                     ??_TMR4_GetSec:	
  8420                           ; 0 bytes @ 0x6
  8421                           
  8422  0076                     ??___awdiv:	
  8423                           ; 0 bytes @ 0x6
  8424                           
  8425  0076                     ??___awmod:	
  8426                           ; 0 bytes @ 0x6
  8427                           
  8428  0076                     OW_write_byte@loop:	
  8429                           ; 0 bytes @ 0x6
  8430                           
  8431  0076                     OW_read_byte@result:	
  8432                           ; 1 bytes @ 0x6
  8433                           
  8434  0076                     LCDBusyLoop@status:	
  8435                           ; 1 bytes @ 0x6
  8436                           
  8437  0076                     DS18B20_ResetAndDetect@present:	
  8438                           ; 1 bytes @ 0x6
  8439                           
  8440  0076                     EEPROM_25AA040A_ReadToBuffer@dataLength:	
  8441                           ; 1 bytes @ 0x6
  8442                           
  8443  0076                     memset@n:	
  8444                           ; 2 bytes @ 0x6
  8445                           
  8446  0076                     ___lmul@multiplicand:	
  8447                           ; 2 bytes @ 0x6
  8448                           
  8449  0076                     ___lldiv@dividend:	
  8450                           ; 4 bytes @ 0x6
  8451                           
  8452                           
  8453                           ; 4 bytes @ 0x6
  8454  0076                     	ds	1
  8455  0077                     ?_LCDByte:	
  8456  0077                     ??_DS18B20_StartConversion:	
  8457                           ; 0 bytes @ 0x7
  8458                           
  8459  0077                     ??_DS18B20_SetResolution:	
  8460                           ; 0 bytes @ 0x7
  8461                           
  8462  0077                     OW_read_byte@loop:	
  8463                           ; 0 bytes @ 0x7
  8464                           
  8465  0077                     LCDByte@isdata:	
  8466                           ; 1 bytes @ 0x7
  8467                           
  8468  0077                     DS18B20_SetResolution@configData:	
  8469                           ; 1 bytes @ 0x7
  8470                           
  8471  0077                     ___awmod@counter:	
  8472                           ; 1 bytes @ 0x7
  8473                           
  8474                           
  8475                           ; 1 bytes @ 0x7
  8476  0077                     	ds	1
  8477  0078                     ??_memset:	
  8478  0078                     ??_Config_GetUpLimit:	
  8479                           ; 0 bytes @ 0x8
  8480                           
  8481  0078                     ??_Config_GetBottomLimit:	
  8482                           ; 0 bytes @ 0x8
  8483                           
  8484  0078                     ??_LCDByte:	
  8485                           ; 0 bytes @ 0x8
  8486                           
  8487  0078                     ?_DS18B20_ReadRawTemperature:	
  8488                           ; 0 bytes @ 0x8
  8489                           
  8490  0078                     ___awmod@sign:	
  8491                           ; 2 bytes @ 0x8
  8492                           
  8493  0078                     strlen@s:	
  8494                           ; 1 bytes @ 0x8
  8495                           
  8496  0078                     strncmp@s1:	
  8497                           ; 1 bytes @ 0x8
  8498                           
  8499  0078                     memset@p:	
  8500                           ; 1 bytes @ 0x8
  8501                           
  8502                           
  8503                           ; 2 bytes @ 0x8
  8504  0078                     	ds	1
  8505  0079                     ??_Config_InitRTValues:	
  8506  0079                     ??_Alarm_Init:	
  8507                           ; 0 bytes @ 0x9
  8508                           
  8509  0079                     ??___wmul:	
  8510                           ; 0 bytes @ 0x9
  8511                           
  8512  0079                     MenuScreen_Init@i:	
  8513                           ; 0 bytes @ 0x9
  8514                           
  8515  0079                     strlen@cp:	
  8516                           ; 1 bytes @ 0x9
  8517                           
  8518                           
  8519                           ; 1 bytes @ 0x9
  8520  0079                     	ds	1
  8521  007A                     ??_ACKAlarm:	
  8522  007A                     ??_LeaveSettingsScreen:	
  8523                           ; 0 bytes @ 0xA
  8524                           
  8525  007A                     ??_LCD_ToggleBacklight:	
  8526                           ; 0 bytes @ 0xA
  8527                           
  8528  007A                     ??_initDrivers:	
  8529                           ; 0 bytes @ 0xA
  8530                           
  8531  007A                     ??__SettingsScreen_SetLongPress:	
  8532                           ; 0 bytes @ 0xA
  8533                           
  8534  007A                     ??_SettingsScreen_Init:	
  8535                           ; 0 bytes @ 0xA
  8536                           
  8537  007A                     ??_ChangeToSettingsScreen:	
  8538                           ; 0 bytes @ 0xA
  8539                           
  8540  007A                     ??___lmul:	
  8541                           ; 0 bytes @ 0xA
  8542                           
  8543                           
  8544                           	psect	cstackBANK0
  8545  0020                     __pcstackBANK0:	
  8546                           ; 0 bytes @ 0xA
  8547                           
  8548  0020                     ??_EEPROM_25AA040A_ReadToBuffer:	
  8549  0020                     ??_DS18B20_ReadRawTemperature:	
  8550                           ; 0 bytes @ 0x0
  8551                           
  8552  0020                     ??___lldiv:	
  8553                           ; 0 bytes @ 0x0
  8554                           
  8555  0020                     ?___wmul:	
  8556                           ; 0 bytes @ 0x0
  8557                           
  8558  0020                     ?_SysTime_GetNow:	
  8559                           ; 2 bytes @ 0x0
  8560                           
  8561  0020                     LCDByte@hn:	
  8562                           ; 6 bytes @ 0x0
  8563                           
  8564  0020                     EEPROM_25AA040A_ReadByte@opcode:	
  8565                           ; 1 bytes @ 0x0
  8566                           
  8567  0020                     ___awdiv@counter:	
  8568                           ; 1 bytes @ 0x0
  8569                           
  8570  0020                     ___wmul@multiplier:	
  8571                           ; 1 bytes @ 0x0
  8572                           
  8573  0020                     ___lmul@product:	
  8574                           ; 2 bytes @ 0x0
  8575                           
  8576                           
  8577                           ; 4 bytes @ 0x0
  8578  0020                     	ds	1
  8579  0021                     LCDByte@ln:	
  8580  0021                     EEPROM_25AA040A_ReadByte@result:	
  8581                           ; 1 bytes @ 0x1
  8582                           
  8583  0021                     ___awdiv@sign:	
  8584                           ; 1 bytes @ 0x1
  8585                           
  8586  0021                     ___lldiv@quotient:	
  8587                           ; 1 bytes @ 0x1
  8588                           
  8589                           
  8590                           ; 4 bytes @ 0x1
  8591  0021                     	ds	1
  8592  0022                     LCDByte@c:	
  8593  0022                     ___wmul@multiplicand:	
  8594                           ; 1 bytes @ 0x2
  8595                           
  8596  0022                     ___awdiv@quotient:	
  8597                           ; 2 bytes @ 0x2
  8598                           
  8599                           
  8600                           ; 2 bytes @ 0x2
  8601  0022                     	ds	1
  8602  0023                     LCDByte@temp:	
  8603  0023                     DS18B20_ReadRawTemperature@result:	
  8604                           ; 1 bytes @ 0x3
  8605                           
  8606                           
  8607                           ; 2 bytes @ 0x3
  8608  0023                     	ds	1
  8609  0024                     ??_LCDInit:	
  8610  0024                     ?_LCDWriteInt:	
  8611                           ; 0 bytes @ 0x4
  8612                           
  8613  0024                     ?_LCDGotoXY:	
  8614                           ; 0 bytes @ 0x4
  8615                           
  8616  0024                     ?_SysTime_DiffMs:	
  8617                           ; 0 bytes @ 0x4
  8618                           
  8619  0024                     ?_strtol:	
  8620                           ; 4 bytes @ 0x4
  8621                           
  8622  0024                     LCDGotoXY@y:	
  8623                           ; 4 bytes @ 0x4
  8624                           
  8625  0024                     EEPROM_25AA040A_ReadToBuffer@opcode:	
  8626                           ; 1 bytes @ 0x4
  8627                           
  8628  0024                     strtol@endptr:	
  8629                           ; 1 bytes @ 0x4
  8630                           
  8631  0024                     LCDWriteInt@val:	
  8632                           ; 1 bytes @ 0x4
  8633                           
  8634  0024                     SysTime_DiffMs@firstTime:	
  8635                           ; 2 bytes @ 0x4
  8636                           
  8637  0024                     ___wmul@product:	
  8638                           ; 2 bytes @ 0x4
  8639                           
  8640                           
  8641                           ; 2 bytes @ 0x4
  8642  0024                     	ds	1
  8643  0025                     ??_LCDGotoXY:	
  8644  0025                     DS18B20_ReadRawTemperature@lowbyte:	
  8645                           ; 0 bytes @ 0x5
  8646                           
  8647  0025                     ___lldiv@counter:	
  8648                           ; 1 bytes @ 0x5
  8649                           
  8650  0025                     EEPROM_25AA040A_ReadToBuffer@cntr:	
  8651                           ; 1 bytes @ 0x5
  8652                           
  8653  0025                     strtol@base:	
  8654                           ; 2 bytes @ 0x5
  8655                           
  8656                           
  8657                           ; 2 bytes @ 0x5
  8658  0025                     	ds	1
  8659  0026                     ??_MenuScreen_Init:	
  8660  0026                     ?_LCDWriteString:	
  8661                           ; 0 bytes @ 0x6
  8662                           
  8663  0026                     ?___llmod:	
  8664                           ; 0 bytes @ 0x6
  8665                           
  8666  0026                     LCDInit@style:	
  8667                           ; 4 bytes @ 0x6
  8668                           
  8669  0026                     LCDWriteInt@field_length:	
  8670                           ; 1 bytes @ 0x6
  8671                           
  8672  0026                     LCDGotoXY@x:	
  8673                           ; 1 bytes @ 0x6
  8674                           
  8675  0026                     DS18B20_ReadRawTemperature@hibyte:	
  8676                           ; 1 bytes @ 0x6
  8677                           
  8678  0026                     SysTime_DiffMs@secondTime:	
  8679                           ; 1 bytes @ 0x6
  8680                           
  8681  0026                     LCDWriteString@msg:	
  8682                           ; 1 bytes @ 0x6
  8683                           
  8684  0026                     ___llmod@divisor:	
  8685                           ; 2 bytes @ 0x6
  8686                           
  8687  0026                     SysTime_GetNow@result:	
  8688                           ; 4 bytes @ 0x6
  8689                           
  8690                           
  8691                           ; 6 bytes @ 0x6
  8692  0026                     	ds	1
  8693  0027                     ?_Config_GetUpLimit:	
  8694  0027                     ?_Config_GetBottomLimit:	
  8695                           ; 0 bytes @ 0x7
  8696                           
  8697  0027                     ??_LCDWriteInt:	
  8698                           ; 0 bytes @ 0x7
  8699                           
  8700  0027                     LCDInit@__i:	
  8701                           ; 0 bytes @ 0x7
  8702                           
  8703  0027                     Config_GetUpLimit@p_fractLimit:	
  8704                           ; 1 bytes @ 0x7
  8705                           
  8706  0027                     Config_GetBottomLimit@p_intLimit:	
  8707                           ; 2 bytes @ 0x7
  8708                           
  8709                           
  8710                           ; 2 bytes @ 0x7
  8711  0027                     	ds	1
  8712  0028                     ??_SysTime_DiffMs:	
  8713  0028                     ??_strtol:	
  8714                           ; 0 bytes @ 0x8
  8715                           
  8716  0028                     ??_LCDWriteString:	
  8717                           ; 0 bytes @ 0x8
  8718                           
  8719                           
  8720                           ; 0 bytes @ 0x8
  8721  0028                     	ds	1
  8722  0029                     LCDWriteString@cc:	
  8723  0029                     Config_GetBottomLimit@p_fractLimit:	
  8724                           ; 1 bytes @ 0x9
  8725                           
  8726  0029                     Config_GetUpLimit@bufData:	
  8727                           ; 2 bytes @ 0x9
  8728                           
  8729  0029                     LCDWriteInt@str:	
  8730                           ; 4 bytes @ 0x9
  8731                           
  8732                           
  8733                           ; 5 bytes @ 0x9
  8734  0029                     	ds	1
  8735  002A                     ??_MenuScreen_Clear:	
  8736  002A                     ___llmod@dividend:	
  8737                           ; 0 bytes @ 0xA
  8738                           
  8739                           
  8740                           ; 4 bytes @ 0xA
  8741  002A                     	ds	1
  8742  002B                     MenuScreen_Clear@i:	
  8743  002B                     Config_GetBottomLimit@bufData:	
  8744                           ; 2 bytes @ 0xB
  8745                           
  8746                           
  8747                           ; 4 bytes @ 0xB
  8748  002B                     	ds	1
  8749  002C                     strtol@sign:	
  8750                           
  8751                           ; 1 bytes @ 0xC
  8752  002C                     	ds	1
  8753  002D                     ??_MenuScreen_Display:	
  8754  002D                     Config_GetUpLimit@p_intLimit:	
  8755                           ; 0 bytes @ 0xD
  8756                           
  8757  002D                     strtol@a:	
  8758                           ; 1 bytes @ 0xD
  8759                           
  8760                           
  8761                           ; 4 bytes @ 0xD
  8762  002D                     	ds	1
  8763  002E                     ??___llmod:	
  8764  002E                     LCDWriteInt@j:	
  8765                           ; 0 bytes @ 0xE
  8766                           
  8767                           
  8768                           ; 2 bytes @ 0xE
  8769  002E                     	ds	1
  8770  002F                     ___llmod@counter:	
  8771                           
  8772                           ; 1 bytes @ 0xF
  8773  002F                     	ds	1
  8774  0030                     ?_printf:	
  8775  0030                     LCDWriteInt@i:	
  8776                           ; 2 bytes @ 0x10
  8777                           
  8778  0030                     printf@f:	
  8779                           ; 2 bytes @ 0x10
  8780                           
  8781                           
  8782                           ; 2 bytes @ 0x10
  8783  0030                     	ds	1
  8784  0031                     strtol@s:	
  8785                           
  8786                           ; 1 bytes @ 0x11
  8787  0031                     	ds	1
  8788  0032                     ??_updateTemperature:	
  8789  0032                     ??_SettingsScreen_Display:	
  8790                           ; 0 bytes @ 0x12
  8791                           
  8792  0032                     strtol@c:	
  8793                           ; 0 bytes @ 0x12
  8794                           
  8795                           
  8796                           ; 1 bytes @ 0x12
  8797  0032                     	ds	1
  8798  0033                     SettingsScreen_Display@upInt:	
  8799                           
  8800                           ; 2 bytes @ 0x13
  8801  0033                     	ds	2
  8802  0035                     SettingsScreen_Display@bottomInt:	
  8803                           
  8804                           ; 2 bytes @ 0x15
  8805  0035                     	ds	2
  8806  0037                     ?_LCD_ToggleBacklight:	
  8807  0037                     ?__SettingsScreen_UpRelease:	
  8808                           ; 0 bytes @ 0x17
  8809                           
  8810  0037                     ?__SettingsScreen_DownRelease:	
  8811                           ; 0 bytes @ 0x17
  8812                           
  8813  0037                     ?_ChangeToSettingsScreen:	
  8814                           ; 0 bytes @ 0x17
  8815                           
  8816  0037                     ?__MenuScreen_MoveUp:	
  8817                           ; 0 bytes @ 0x17
  8818                           
  8819  0037                     ?__MenuScreen_MoveDown:	
  8820                           ; 0 bytes @ 0x17
  8821                           
  8822  0037                     __SettingsScreen_UpRelease@wasLongPress:	
  8823                           ; 0 bytes @ 0x17
  8824                           
  8825  0037                     __SettingsScreen_DownRelease@wasLongPress:	
  8826                           ; 1 bytes @ 0x17
  8827                           
  8828  0037                     ChangeToSettingsScreen@param:	
  8829                           ; 1 bytes @ 0x17
  8830                           
  8831  0037                     __MenuScreen_MoveUp@wasLongPress:	
  8832                           ; 1 bytes @ 0x17
  8833                           
  8834  0037                     __MenuScreen_MoveDown@wasLongPress:	
  8835                           ; 1 bytes @ 0x17
  8836                           
  8837                           
  8838                           ; 1 bytes @ 0x17
  8839  0037                     	ds	1
  8840  0038                     ??__SettingsScreen_UpRelease:	
  8841  0038                     ??__SettingsScreen_DownRelease:	
  8842                           ; 0 bytes @ 0x18
  8843                           
  8844  0038                     ??__MenuScreen_MoveUp:	
  8845                           ; 0 bytes @ 0x18
  8846                           
  8847  0038                     ??__MenuScreen_MoveDown:	
  8848                           ; 0 bytes @ 0x18
  8849                           
  8850  0038                     LCD_ToggleBacklight@duty:	
  8851                           ; 0 bytes @ 0x18
  8852                           
  8853                           
  8854                           ; 2 bytes @ 0x18
  8855  0038                     	ds	2
  8856  003A                     ?__SettingsScreen_SetRelease:	
  8857  003A                     ?__MenuScreen_SetRelease:	
  8858                           ; 0 bytes @ 0x1A
  8859                           
  8860  003A                     __SettingsScreen_SetRelease@isFromLongPress:	
  8861                           ; 0 bytes @ 0x1A
  8862                           
  8863  003A                     __MenuScreen_SetRelease@isFromLongPress:	
  8864                           ; 1 bytes @ 0x1A
  8865                           
  8866  003A                     updateTemperature@curMs:	
  8867                           ; 1 bytes @ 0x1A
  8868                           
  8869                           
  8870                           ; 2 bytes @ 0x1A
  8871  003A                     	ds	1
  8872  003B                     ??__SettingsScreen_SetRelease:	
  8873  003B                     ??__MenuScreen_SetRelease:	
  8874                           ; 0 bytes @ 0x1B
  8875                           
  8876                           
  8877                           ; 0 bytes @ 0x1B
  8878  003B                     	ds	1
  8879  003C                     __MenuScreen_MoveUp@oldSelected:	
  8880  003C                     __MenuScreen_MoveDown@oldSelected:	
  8881                           ; 1 bytes @ 0x1C
  8882                           
  8883  003C                     updateTemperature@data:	
  8884                           ; 1 bytes @ 0x1C
  8885                           
  8886                           
  8887                           ; 2 bytes @ 0x1C
  8888  003C                     	ds	2
  8889  003E                     updateTemperature@sec:	
  8890                           
  8891                           ; 4 bytes @ 0x1E
  8892  003E                     	ds	2
  8893  0040                     ??_printf:	
  8894  0040                     ??__EEPROM_25AA040A_WriteEnable:	
  8895                           ; 0 bytes @ 0x20
  8896                           
  8897                           
  8898                           ; 0 bytes @ 0x20
  8899  0040                     	ds	1
  8900  0041                     __EEPROM_25AA040A_WriteEnable@statusReg:	
  8901                           
  8902                           ; 1 bytes @ 0x21
  8903  0041                     	ds	1
  8904  0042                     __EEPROM_25AA040A_WriteEnable@statusOk:	
  8905                           
  8906                           ; 1 bytes @ 0x22
  8907  0042                     	ds	1
  8908  0043                     __EEPROM_25AA040A_WriteEnable@start:	
  8909                           
  8910                           ; 6 bytes @ 0x23
  8911  0043                     	ds	3
  8912  0046                     printf@idx:	
  8913                           
  8914                           ; 1 bytes @ 0x26
  8915  0046                     	ds	1
  8916  0047                     printf@prec:	
  8917                           
  8918                           ; 2 bytes @ 0x27
  8919  0047                     	ds	2
  8920  0049                     printf@cp:	
  8921  0049                     __EEPROM_25AA040A_WriteEnable@curTime:	
  8922                           ; 2 bytes @ 0x29
  8923                           
  8924                           
  8925                           ; 6 bytes @ 0x29
  8926  0049                     	ds	2
  8927  004B                     printf@len:	
  8928                           
  8929                           ; 2 bytes @ 0x2B
  8930  004B                     	ds	2
  8931  004D                     printf@ap:	
  8932                           
  8933                           ; 1 bytes @ 0x2D
  8934  004D                     	ds	1
  8935  004E                     printf@val:	
  8936                           
  8937                           ; 4 bytes @ 0x2E
  8938  004E                     	ds	4
  8939  0052                     printf@flag:	
  8940                           
  8941                           ; 1 bytes @ 0x32
  8942  0052                     	ds	1
  8943  0053                     printf@width:	
  8944                           
  8945                           ; 2 bytes @ 0x33
  8946  0053                     	ds	2
  8947  0055                     printf@c:	
  8948                           
  8949                           ; 1 bytes @ 0x35
  8950  0055                     	ds	1
  8951  0056                     ??_TempSensor_Init:	
  8952  0056                     ??_printAllAlarmEvents:	
  8953                           ; 0 bytes @ 0x36
  8954                           
  8955  0056                     ?_EEPROM_25AA040A_WriteByte:	
  8956                           ; 0 bytes @ 0x36
  8957                           
  8958  0056                     ?_EEPROM_25AA040A_WriteBuffer:	
  8959                           ; 0 bytes @ 0x36
  8960                           
  8961  0056                     ??_EEPROM_25AA040A_Dump:	
  8962                           ; 0 bytes @ 0x36
  8963                           
  8964  0056                     EEPROM_25AA040A_WriteByte@address:	
  8965                           ; 0 bytes @ 0x36
  8966                           
  8967  0056                     EEPROM_25AA040A_WriteBuffer@address:	
  8968                           ; 2 bytes @ 0x36
  8969                           
  8970                           
  8971                           ; 2 bytes @ 0x36
  8972  0056                     	ds	1
  8973  0057                     TempSensor_Init@OW_Ok:	
  8974                           
  8975                           ; 1 bytes @ 0x37
  8976  0057                     	ds	1
  8977  0058                     EEPROM_25AA040A_WriteByte@data:	
  8978  0058                     EEPROM_25AA040A_WriteBuffer@data:	
  8979                           ; 1 bytes @ 0x38
  8980                           
  8981  0058                     EEPROM_25AA040A_Dump@b:	
  8982                           ; 1 bytes @ 0x38
  8983                           
  8984                           
  8985                           ; 1 bytes @ 0x38
  8986  0058                     	ds	1
  8987  0059                     ??_EEPROM_25AA040A_WriteByte:	
  8988  0059                     EEPROM_25AA040A_WriteBuffer@dataLength:	
  8989                           ; 0 bytes @ 0x39
  8990                           
  8991  0059                     EEPROM_25AA040A_Dump@i:	
  8992                           ; 1 bytes @ 0x39
  8993                           
  8994  0059                     _printAllAlarmEvents$1599:	
  8995                           ; 2 bytes @ 0x39
  8996                           
  8997                           
  8998                           ; 2 bytes @ 0x39
  8999  0059                     	ds	1
  9000  005A                     ??_EEPROM_25AA040A_WriteBuffer:	
  9001                           
  9002                           ; 0 bytes @ 0x3A
  9003  005A                     	ds	1
  9004  005B                     printAllAlarmEvents@i:	
  9005                           
  9006                           ; 1 bytes @ 0x3B
  9007  005B                     	ds	1
  9008  005C                     printAllAlarmEvents@evt:	
  9009                           
  9010                           ; 16 bytes @ 0x3C
  9011  005C                     	ds	1
  9012  005D                     EEPROM_25AA040A_WriteByte@opcode:	
  9013                           
  9014                           ; 1 bytes @ 0x3D
  9015  005D                     	ds	1
  9016  005E                     EEPROM_25AA040A_WriteByte@WREN_Ok:	
  9017  005E                     EEPROM_25AA040A_WriteBuffer@lastPageLen:	
  9018                           ; 1 bytes @ 0x3E
  9019                           
  9020                           
  9021                           ; 1 bytes @ 0x3E
  9022  005E                     	ds	1
  9023  005F                     ??__AlarmEvent_IncreaseSavedCounter:	
  9024  005F                     EEPROM_25AA040A_WriteBuffer@opcode:	
  9025                           ; 0 bytes @ 0x3F
  9026                           
  9027                           
  9028                           ; 1 bytes @ 0x3F
  9029  005F                     	ds	1
  9030  0060                     EEPROM_25AA040A_WriteBuffer@WREN_Ok:	
  9031                           
  9032                           ; 1 bytes @ 0x40
  9033  0060                     	ds	1
  9034  0061                     EEPROM_25AA040A_WriteBuffer@pageAddr:	
  9035                           
  9036                           ; 2 bytes @ 0x41
  9037  0061                     	ds	2
  9038  0063                     EEPROM_25AA040A_WriteBuffer@bytesOnPage:	
  9039                           
  9040                           ; 1 bytes @ 0x43
  9041  0063                     	ds	1
  9042  0064                     EEPROM_25AA040A_WriteBuffer@j:	
  9043                           
  9044                           ; 1 bytes @ 0x44
  9045  0064                     	ds	1
  9046  0065                     EEPROM_25AA040A_WriteBuffer@pageCount:	
  9047                           
  9048                           ; 1 bytes @ 0x45
  9049  0065                     	ds	1
  9050  0066                     EEPROM_25AA040A_WriteBuffer@i:	
  9051                           
  9052                           ; 1 bytes @ 0x46
  9053  0066                     	ds	1
  9054  0067                     ??_clearAllAlarmEvents:	
  9055  0067                     ?__AlarmEvent_SaveToAddress:	
  9056                           ; 0 bytes @ 0x47
  9057                           
  9058  0067                     ?_Config_SetUpLimit:	
  9059                           ; 0 bytes @ 0x47
  9060                           
  9061  0067                     ?_Config_SetBottomLimit:	
  9062                           ; 1 bytes @ 0x47
  9063                           
  9064  0067                     Config_SetUpLimit@intLimit:	
  9065                           ; 1 bytes @ 0x47
  9066                           
  9067  0067                     Config_SetBottomLimit@intLimit:	
  9068                           ; 2 bytes @ 0x47
  9069                           
  9070  0067                     __AlarmEvent_SaveToAddress@address:	
  9071                           ; 2 bytes @ 0x47
  9072                           
  9073                           
  9074                           ; 2 bytes @ 0x47
  9075  0067                     	ds	2
  9076  0069                     __AlarmEvent_SaveToAddress@e:	
  9077  0069                     Config_SetUpLimit@fractLimit:	
  9078                           ; 1 bytes @ 0x49
  9079                           
  9080  0069                     Config_SetBottomLimit@fractLimit:	
  9081                           ; 2 bytes @ 0x49
  9082                           
  9083                           
  9084                           ; 2 bytes @ 0x49
  9085  0069                     	ds	1
  9086  006A                     ??__AlarmEvent_SaveToAddress:	
  9087                           
  9088                           ; 0 bytes @ 0x4A
  9089  006A                     	ds	1
  9090  006B                     ??_Config_SetUpLimit:	
  9091  006B                     ??_Config_SetBottomLimit:	
  9092                           ; 0 bytes @ 0x4B
  9093                           
  9094                           
  9095                           ; 0 bytes @ 0x4B
  9096  006B                     	ds	1
  9097  006C                     ??__saveAlarmEvent:	
  9098  006C                     ??__ACKLastSavedEvent:	
  9099                           ; 0 bytes @ 0x4C
  9100                           
  9101                           
  9102                           ; 0 bytes @ 0x4C
  9103  006C                     	ds	1
  9104  006D                     ??_processCommand:	
  9105                           
  9106                           ; 0 bytes @ 0x4D
  9107  006D                     	ds	2
  9108  006F                     ??_handleButtons:	
  9109  006F                     ??_handleUARTInput:	
  9110                           ; 0 bytes @ 0x4F
  9111                           
  9112  006F                     __saveAlarmEvent@e:	
  9113                           ; 0 bytes @ 0x4F
  9114                           
  9115                           
  9116                           ; 1 bytes @ 0x4F
  9117  006F                     	ds	1
  9118                           
  9119                           	psect	maintext
  9120  1661                     __pmaintext:	
  9121 ;;
  9122 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  9123 ;;
  9124 ;; *************** function _main *****************
  9125 ;; Defined at:
  9126 ;;		line 121 in file "main.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;		None
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;  curTime         6   56[BANK1 ] volatile struct _SysTime
  9131 ;;  diffMs          4   40[BANK1 ] unsigned long 
  9132 ;;  prevTime        6   50[BANK1 ] volatile struct _SysTime
  9133 ;;  lastAlarmTim    6   44[BANK1 ] volatile struct _SysTime
  9134 ;;  alarmSec        4    0        unsigned long 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;		None               void
  9137 ;; Registers used:
  9138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9139 ;; Tracked objects:
  9140 ;;		On entry : B1F/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9145 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9146 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9147 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9148 ;;Total ram usage:       23 bytes
  9149 ;; Hardware stack levels required when called:   10
  9150 ;; This function calls:
  9151 ;;		_Alarm_Init
  9152 ;;		_Config_InitRTValues
  9153 ;;		_MenuScreen_Display
  9154 ;;		_MenuScreen_Init
  9155 ;;		_SYSTEM_Initialize
  9156 ;;		_SysTime_DiffMs
  9157 ;;		_SysTime_GetNow
  9158 ;;		_checkAlarm
  9159 ;;		_getch
  9160 ;;		_handleButtons
  9161 ;;		_handleUARTInput
  9162 ;;		_initDrivers
  9163 ;;		_printf
  9164 ;;		_updateTemperature
  9165 ;; This function is called by:
  9166 ;;		Startup code after reset
  9167 ;; This function uses a non-reentrant model
  9168 ;;
  9169                           
  9170                           
  9171                           ;psect for function _main
  9172  1661                     _main:	
  9173                           
  9174                           ;main.c: 124: SYSTEM_Initialize();
  9175                           
  9176                           ;incstack = 0
  9177                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9178  1661  31A7  2789  3196   	fcall	_SYSTEM_Initialize
  9179                           
  9180                           ;main.c: 127: WDTCONbits.WDTPS = 0b01100;
  9181  1664  0021               	movlb	1	; select bank1
  9182  1665  0817               	movf	23,w	;volatile
  9183  1666  39C1               	andlw	-63
  9184  1667  3818               	iorlw	24
  9185  1668  0097               	movwf	23	;volatile
  9186                           
  9187                           ;main.c: 130: (INTCONbits.GIE = 1);
  9188  1669  178B               	bsf	11,7	;volatile
  9189                           
  9190                           ;main.c: 133: (INTCONbits.PEIE = 1);
  9191  166A  170B               	bsf	11,6	;volatile
  9192                           
  9193                           ;main.c: 135: initDrivers();
  9194  166B  31A7  2760  3196   	fcall	_initDrivers
  9195                           
  9196                           ;main.c: 136: Config_InitRTValues();
  9197  166E  31A7  2774  3196   	fcall	_Config_InitRTValues
  9198                           
  9199                           ;main.c: 137: Alarm_Init();
  9200  1671  31A6  263B  3196   	fcall	_Alarm_Init
  9201                           
  9202                           ;main.c: 139: ButtonUp_LongPressCB = LCD_ToggleBacklight;
  9203  1674  30E7               	movlw	low _LCD_ToggleBacklight
  9204  1675  0022               	movlb	2	; select bank2
  9205  1676  00B0               	movwf	_ButtonUp_LongPressCB^(0+256)
  9206  1677  3027               	movlw	high _LCD_ToggleBacklight
  9207  1678  00B1               	movwf	(_ButtonUp_LongPressCB^(0+256)+1)
  9208                           
  9209                           ;main.c: 140: ButtonSet_LongPressCB = ACKAlarm;
  9210  1679  30E5               	movlw	low _ACKAlarm
  9211  167A  00AA               	movwf	_ButtonSet_LongPressCB^(0+256)
  9212  167B  3019               	movlw	high _ACKAlarm
  9213  167C  00AB               	movwf	(_ButtonSet_LongPressCB^(0+256)+1)
  9214                           
  9215                           ;main.c: 142: printf("Boot OK\r\n");
  9216  167D  307F               	movlw	low (STR_7| (0+32768))
  9217  167E  0020               	movlb	0	; select bank0
  9218  167F  00B0               	movwf	printf@f
  9219  1680  3085               	movlw	high (STR_7| (0+32768))
  9220  1681  00B1               	movwf	printf@f+1
  9221  1682  3180  2096  3196   	fcall	_printf
  9222                           
  9223                           ;main.c: 143: printf("Built on: " "May 26 2016" " " "09:17:47" "\r\n");
  9224  1685  30A8               	movlw	low (STR_8| (0+32768))
  9225  1686  0020               	movlb	0	; select bank0
  9226  1687  00B0               	movwf	printf@f
  9227  1688  3083               	movlw	high (STR_8| (0+32768))
  9228  1689  00B1               	movwf	printf@f+1
  9229  168A  3180  2096  3196   	fcall	_printf
  9230                           
  9231                           ;main.c: 145: MenuScreen_Init();
  9232  168D  319E  2639  3196   	fcall	_MenuScreen_Init
  9233                           
  9234                           ;main.c: 146: MenuScreen_Display();
  9235  1690  318A  2204  3196   	fcall	_MenuScreen_Display
  9236                           
  9237                           ;main.c: 148: SysTime prevTime = SysTime_GetNow();
  9238  1693  3198  20E8  3196   	fcall	_SysTime_GetNow
  9239  1696  0020               	movlb	0	; select bank0
  9240  1697  3020               	movlw	low ?_SysTime_GetNow
  9241  1698  0086               	movwf	6
  9242  1699  3000               	movlw	high ?_SysTime_GetNow
  9243  169A  0087               	movwf	7
  9244  169B  30D2               	movlw	low main@prevTime
  9245  169C  0084               	movwf	4
  9246  169D  3000               	movlw	high main@prevTime
  9247  169E  0085               	movwf	5
  9248  169F  3006               	movlw	6
  9249  16A0  0021               	movlb	1	; select bank1
  9250  16A1  00C7               	movwf	??_main^(0+128)
  9251  16A2                     u10170:	
  9252  16A2  0016               	moviw fsr1++
  9253  16A3  001A               	movwi fsr0++
  9254  16A4  0BC7               	decfsz	??_main^(0+128),f
  9255  16A5  2EA2               	goto	u10170
  9256  16A6                     l8061:	
  9257                           ;main.c: 150: while(eusartRxCount > 0)
  9258                           
  9259  16A6  0021               	movlb	1	; select bank1
  9260  16A7  0864               	movf	_eusartRxCount^(0+128),w	;volatile
  9261  16A8  1903               	btfsc	3,2
  9262  16A9  2EAE               	goto	l8063
  9263                           
  9264                           ;main.c: 151: {
  9265                           ;main.c: 152: getch();
  9266  16AA  3190  2000  3196   	fcall	_getch
  9267  16AD  2EA6               	goto	l8061
  9268  16AE                     l8063:	
  9269                           
  9270                           ;main.c: 153: }
  9271                           ;main.c: 156: SysTime lastAlarmTime = { 0, 0 };
  9272  16AE  30A6               	movlw	low main@F6692
  9273  16AF  0086               	movwf	6
  9274  16B0  3001               	movlw	high main@F6692
  9275  16B1  0087               	movwf	7
  9276  16B2  30CC               	movlw	low main@lastAlarmTime
  9277  16B3  0084               	movwf	4
  9278  16B4  3000               	movlw	high main@lastAlarmTime
  9279  16B5  0085               	movwf	5
  9280  16B6  3006               	movlw	6
  9281  16B7  00C7               	movwf	??_main^(0+128)
  9282  16B8                     u10190:	
  9283  16B8  0016               	moviw fsr1++
  9284  16B9  001A               	movwi fsr0++
  9285  16BA  0BC7               	decfsz	??_main^(0+128),f
  9286  16BB  2EB8               	goto	u10190
  9287  16BC                     l8065:	
  9288                           ;main.c: 157: uint32_t alarmSec;
  9289                           ;main.c: 159: while (1)
  9290                           
  9291                           
  9292                           ;main.c: 160: {
  9293                           ;main.c: 161: SysTime curTime = SysTime_GetNow();
  9294  16BC  3198  20E8  3196   	fcall	_SysTime_GetNow
  9295  16BF  0020               	movlb	0	; select bank0
  9296  16C0  3020               	movlw	low ?_SysTime_GetNow
  9297  16C1  0086               	movwf	6
  9298  16C2  3000               	movlw	high ?_SysTime_GetNow
  9299  16C3  0087               	movwf	7
  9300  16C4  30D8               	movlw	low main@curTime
  9301  16C5  0084               	movwf	4
  9302  16C6  3000               	movlw	high main@curTime
  9303  16C7  0085               	movwf	5
  9304  16C8  3006               	movlw	6
  9305  16C9  0021               	movlb	1	; select bank1
  9306  16CA  00C7               	movwf	??_main^(0+128)
  9307  16CB                     u10200:	
  9308  16CB  0016               	moviw fsr1++
  9309  16CC  001A               	movwi fsr0++
  9310  16CD  0BC7               	decfsz	??_main^(0+128),f
  9311  16CE  2ECB               	goto	u10200
  9312                           
  9313                           ;main.c: 164: uint32_t diffMs = SysTime_DiffMs(&prevTime, &curTime);
  9314  16CF  30D2               	movlw	low main@prevTime
  9315  16D0  0020               	movlb	0	; select bank0
  9316  16D1  00A4               	movwf	SysTime_DiffMs@firstTime
  9317  16D2  3000               	movlw	high main@prevTime
  9318  16D3  00A5               	movwf	SysTime_DiffMs@firstTime+1
  9319  16D4  30D8               	movlw	(low (main@curTime| 0))& (0+255)
  9320  16D5  0021               	movlb	1	; select bank1
  9321  16D6  00C7               	movwf	??_main^(0+128)
  9322  16D7  0847               	movf	??_main^(0+128),w
  9323  16D8  0020               	movlb	0	; select bank0
  9324  16D9  00A6               	movwf	SysTime_DiffMs@secondTime
  9325  16DA  3194  242D  3196   	fcall	_SysTime_DiffMs
  9326  16DD  0020               	movlb	0	; select bank0
  9327  16DE  0827               	movf	?_SysTime_DiffMs+3,w
  9328  16DF  0021               	movlb	1	; select bank1
  9329  16E0  00CB               	movwf	(main@diffMs+3)^(0+128)
  9330  16E1  0020               	movlb	0	; select bank0
  9331  16E2  0826               	movf	?_SysTime_DiffMs+2,w
  9332  16E3  0021               	movlb	1	; select bank1
  9333  16E4  00CA               	movwf	(main@diffMs+2)^(0+128)
  9334  16E5  0020               	movlb	0	; select bank0
  9335  16E6  0825               	movf	?_SysTime_DiffMs+1,w
  9336  16E7  0021               	movlb	1	; select bank1
  9337  16E8  00C9               	movwf	(main@diffMs+1)^(0+128)
  9338  16E9  0020               	movlb	0	; select bank0
  9339  16EA  0824               	movf	?_SysTime_DiffMs,w
  9340  16EB  0021               	movlb	1	; select bank1
  9341  16EC  00C8               	movwf	main@diffMs^(0+128)
  9342                           
  9343                           ;main.c: 165: if(diffMs > 10)
  9344  16ED  084B               	movf	(main@diffMs+3)^(0+128),w
  9345  16EE  1D03               	btfss	3,2
  9346  16EF  2EFA               	goto	l8071
  9347  16F0  084A               	movf	(main@diffMs+2)^(0+128),w
  9348  16F1  1D03               	btfss	3,2
  9349  16F2  2EFA               	goto	l8071
  9350  16F3  0849               	movf	(main@diffMs+1)^(0+128),w
  9351  16F4  1D03               	btfss	3,2
  9352  16F5  2EFA               	goto	l8071
  9353  16F6  300B               	movlw	11
  9354  16F7  0248               	subwf	main@diffMs^(0+128),w
  9355  16F8  1C03               	btfss	3,0
  9356  16F9  2F0B               	goto	l8075
  9357  16FA                     l8071:	
  9358                           
  9359                           ;main.c: 166: {
  9360                           ;main.c: 167: prevTime = curTime;
  9361  16FA  30D8               	movlw	low main@curTime
  9362  16FB  0086               	movwf	6
  9363  16FC  3000               	movlw	high main@curTime
  9364  16FD  0087               	movwf	7
  9365  16FE  30D2               	movlw	low main@prevTime
  9366  16FF  0084               	movwf	4
  9367  1700  3000               	movlw	high main@prevTime
  9368  1701  0085               	movwf	5
  9369  1702  3006               	movlw	6
  9370  1703  00C7               	movwf	??_main^(0+128)
  9371  1704                     u10220:	
  9372  1704  0016               	moviw fsr1++
  9373  1705  001A               	movwi fsr0++
  9374  1706  0BC7               	decfsz	??_main^(0+128),f
  9375  1707  2F04               	goto	u10220
  9376                           
  9377                           ;main.c: 168: handleButtons();
  9378  1708  318C  24B6  3196   	fcall	_handleButtons
  9379  170B                     l8075:	
  9380                           
  9381                           ;main.c: 169: }
  9382                           ;main.c: 171: handleUARTInput();
  9383  170B  319E  267F  3196   	fcall	_handleUARTInput
  9384                           
  9385                           ;main.c: 173: updateTemperature();
  9386  170E  318B  234F  3196   	fcall	_updateTemperature
  9387                           
  9388                           ;main.c: 175: if(curTime.Sec > 10)
  9389  1711  0021               	movlb	1	; select bank1
  9390  1712  085B               	movf	(main@curTime+3)^(0+128),w	;volatile
  9391  1713  1D03               	btfss	3,2
  9392  1714  2F1F               	goto	l8081
  9393  1715  085A               	movf	(main@curTime+2)^(0+128),w	;volatile
  9394  1716  1D03               	btfss	3,2
  9395  1717  2F1F               	goto	l8081
  9396  1718  0859               	movf	(main@curTime+1)^(0+128),w	;volatile
  9397  1719  1D03               	btfss	3,2
  9398  171A  2F1F               	goto	l8081
  9399  171B  300B               	movlw	11
  9400  171C  0258               	subwf	main@curTime^(0+128),w	;volatile
  9401  171D  1C03               	btfss	3,0
  9402  171E  2F22               	goto	l755
  9403  171F                     l8081:	
  9404                           
  9405                           ;main.c: 176: {
  9406                           ;main.c: 177: checkAlarm();
  9407  171F  318E  264D  3196   	fcall	_checkAlarm
  9408  1722                     l755:	
  9409  1722  0064               	clrwdt	;# 
  9410  1723  2EBC               	goto	l8065
  9411  1724                     __end_of_main:	
  9412                           
  9413                           	psect	text1
  9414  0B4F                     __ptext1:	
  9415 ;; *************** function _updateTemperature *****************
  9416 ;; Defined at:
  9417 ;;		line 28 in file "temperature.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;		None
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;  data            2   28[BANK0 ] int 
  9422 ;;  curMs           2   26[BANK0 ] unsigned int 
  9423 ;;  sec             4   30[BANK0 ] unsigned long 
  9424 ;; Return value:  Size  Location     Type
  9425 ;;		None               void
  9426 ;; Registers used:
  9427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9428 ;; Tracked objects:
  9429 ;;		On entry : 0/0
  9430 ;;		On exit  : 0/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9434 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9435 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9436 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9437 ;;Total ram usage:       16 bytes
  9438 ;; Hardware stack levels used:    1
  9439 ;; Hardware stack levels required when called:    6
  9440 ;; This function calls:
  9441 ;;		_DS18B20_ReadRawTemperature
  9442 ;;		_DS18B20_StartConversion
  9443 ;;		_LCDByte
  9444 ;;		_LCDGotoXY
  9445 ;;		_LCDWriteInt
  9446 ;;		_LCDWriteString
  9447 ;;		_TMR4_GetMs
  9448 ;;		_TMR4_GetSec
  9449 ;;		___awdiv
  9450 ;;		___bmul
  9451 ;;		___wmul
  9452 ;; This function is called by:
  9453 ;;		_main
  9454 ;; This function uses a non-reentrant model
  9455 ;;
  9456                           
  9457                           
  9458                           ;psect for function _updateTemperature
  9459  0B4F                     _updateTemperature:	
  9460                           
  9461                           ;temperature.c: 33: static bool TempCheckInProgress = 0;
  9462                           ;temperature.c: 36: static uint32_t TempStartSec = 0;
  9463                           ;temperature.c: 39: static uint16_t TempStartMs = 0;
  9464                           ;temperature.c: 41: static int RunCount = 1;
  9465                           ;temperature.c: 44: uint32_t sec = TMR4_GetSec();
  9466                           
  9467                           ;incstack = 0
  9468                           ; Regs used in _updateTemperature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9469  0B4F  31A6  2631  318B   	fcall	_TMR4_GetSec
  9470  0B52  0875               	movf	?_TMR4_GetSec+3,w
  9471  0B53  0020               	movlb	0	; select bank0
  9472  0B54  00C1               	movwf	updateTemperature@sec+3
  9473  0B55  0874               	movf	?_TMR4_GetSec+2,w
  9474  0B56  00C0               	movwf	updateTemperature@sec+2
  9475  0B57  0873               	movf	?_TMR4_GetSec+1,w
  9476  0B58  00BF               	movwf	updateTemperature@sec+1
  9477  0B59  0872               	movf	?_TMR4_GetSec,w
  9478  0B5A  00BE               	movwf	updateTemperature@sec
  9479                           
  9480                           ;temperature.c: 45: if (TempCheckInProgress)
  9481  0B5B  0022               	movlb	2	; select bank2
  9482  0B5C  085B               	movf	updateTemperature@TempCheckInProgress^(0+256),w
  9483  0B5D  1903               	btfsc	3,2
  9484  0B5E  2C58               	goto	l7883
  9485                           
  9486                           ;temperature.c: 46: {
  9487                           ;temperature.c: 47: uint16_t curMs = TMR4_GetMs();
  9488  0B5F  31A6  2616  318B   	fcall	_TMR4_GetMs
  9489  0B62  0873               	movf	?_TMR4_GetMs+1,w
  9490  0B63  0020               	movlb	0	; select bank0
  9491  0B64  00BB               	movwf	updateTemperature@curMs+1
  9492  0B65  0872               	movf	?_TMR4_GetMs,w
  9493  0B66  00BA               	movwf	updateTemperature@curMs
  9494                           
  9495                           ;temperature.c: 48: curMs += (sec - TempStartSec) * 1000;
  9496  0B67  0022               	movlb	2	; select bank2
  9497  0B68  095C               	comf	updateTemperature@TempStartSec^(0+256),w
  9498  0B69  0020               	movlb	0	; select bank0
  9499  0B6A  00B2               	movwf	??_updateTemperature
  9500  0B6B  0022               	movlb	2	; select bank2
  9501  0B6C  095D               	comf	(updateTemperature@TempStartSec+1)^(0+256),w
  9502  0B6D  0020               	movlb	0	; select bank0
  9503  0B6E  00B3               	movwf	??_updateTemperature+1
  9504  0B6F  0AB2               	incf	??_updateTemperature,f
  9505  0B70  1903               	skipnz
  9506  0B71  0AB3               	incf	??_updateTemperature+1,f
  9507  0B72  083E               	movf	updateTemperature@sec,w
  9508  0B73  0732               	addwf	??_updateTemperature,w
  9509  0B74  00A0               	movwf	___wmul@multiplier
  9510  0B75  083F               	movf	updateTemperature@sec+1,w
  9511  0B76  3D33               	addwfc	??_updateTemperature+1,w
  9512  0B77  00A1               	movwf	___wmul@multiplier+1
  9513  0B78  30E8               	movlw	232
  9514  0B79  00A2               	movwf	___wmul@multiplicand
  9515  0B7A  3003               	movlw	3
  9516  0B7B  00A3               	movwf	___wmul@multiplicand+1
  9517  0B7C  3198  203A  318B   	fcall	___wmul
  9518  0B7F  0020               	movlb	0	; select bank0
  9519  0B80  0820               	movf	?___wmul,w
  9520  0B81  07BA               	addwf	updateTemperature@curMs,f
  9521  0B82  0821               	movf	?___wmul+1,w
  9522  0B83  3DBB               	addwfc	updateTemperature@curMs+1,f
  9523                           
  9524                           ;temperature.c: 51: if (curMs - TempStartMs > 750)
  9525  0B84  0022               	movlb	2	; select bank2
  9526  0B85  0948               	comf	updateTemperature@TempStartMs^(0+256),w
  9527  0B86  0020               	movlb	0	; select bank0
  9528  0B87  00B2               	movwf	??_updateTemperature
  9529  0B88  0022               	movlb	2	; select bank2
  9530  0B89  0949               	comf	(updateTemperature@TempStartMs+1)^(0+256),w
  9531  0B8A  0020               	movlb	0	; select bank0
  9532  0B8B  00B3               	movwf	??_updateTemperature+1
  9533  0B8C  0AB2               	incf	??_updateTemperature,f
  9534  0B8D  1903               	skipnz
  9535  0B8E  0AB3               	incf	??_updateTemperature+1,f
  9536  0B8F  083A               	movf	updateTemperature@curMs,w
  9537  0B90  0732               	addwf	??_updateTemperature,w
  9538  0B91  00B4               	movwf	??_updateTemperature+2
  9539  0B92  083B               	movf	updateTemperature@curMs+1,w
  9540  0B93  3D33               	addwfc	??_updateTemperature+1,w
  9541  0B94  00B5               	movwf	??_updateTemperature+3
  9542  0B95  3002               	movlw	2
  9543  0B96  0235               	subwf	??_updateTemperature+3,w
  9544  0B97  30EF               	movlw	239
  9545  0B98  1903               	skipnz
  9546  0B99  0234               	subwf	??_updateTemperature+2,w
  9547  0B9A  1C03               	skipc
  9548  0B9B  2C58               	goto	l7883
  9549                           
  9550                           ;temperature.c: 52: {
  9551                           ;temperature.c: 53: TempCheckInProgress = 0;
  9552  0B9C  0022               	movlb	2	; select bank2
  9553  0B9D  01DB               	clrf	updateTemperature@TempCheckInProgress^(0+256)
  9554                           
  9555                           ;temperature.c: 54: int16_t data = DS18B20_ReadRawTemperature();
  9556  0B9E  319B  2308  318B   	fcall	_DS18B20_ReadRawTemperature
  9557  0BA1  0879               	movf	?_DS18B20_ReadRawTemperature+1,w
  9558  0BA2  0020               	movlb	0	; select bank0
  9559  0BA3  00BD               	movwf	updateTemperature@data+1
  9560  0BA4  0878               	movf	?_DS18B20_ReadRawTemperature,w
  9561  0BA5  00BC               	movwf	updateTemperature@data
  9562                           
  9563                           ;temperature.c: 56: if (RunCount < 3)
  9564  0BA6  0022               	movlb	2	; select bank2
  9565  0BA7  0869               	movf	(updateTemperature@RunCount+1)^(0+256),w
  9566  0BA8  3A80               	xorlw	128
  9567  0BA9  0020               	movlb	0	; select bank0
  9568  0BAA  00B2               	movwf	??_updateTemperature
  9569  0BAB  3080               	movlw	128
  9570  0BAC  0232               	subwf	??_updateTemperature,w
  9571  0BAD  1D03               	skipz
  9572  0BAE  2BB2               	goto	u9825
  9573  0BAF  3003               	movlw	3
  9574  0BB0  0022               	movlb	2	; select bank2
  9575  0BB1  0268               	subwf	updateTemperature@RunCount^(0+256),w
  9576  0BB2                     u9825:	
  9577  0BB2  1803               	skipnc
  9578  0BB3  2BC2               	goto	l7863
  9579                           
  9580                           ;temperature.c: 57: {
  9581                           ;temperature.c: 58: ++RunCount;
  9582  0BB4  3001               	movlw	1
  9583  0BB5  0022               	movlb	2	; select bank2
  9584  0BB6  07E8               	addwf	updateTemperature@RunCount^(0+256),f
  9585  0BB7  3000               	movlw	0
  9586  0BB8  3DE9               	addwfc	(updateTemperature@RunCount+1)^(0+256),f
  9587                           
  9588                           ;temperature.c: 59: CurrentTemperatureRaw = data;
  9589  0BB9  0020               	movlb	0	; select bank0
  9590  0BBA  083D               	movf	updateTemperature@data+1,w
  9591  0BBB  0022               	movlb	2	; select bank2
  9592  0BBC  00E5               	movwf	(_CurrentTemperatureRaw+1)^(0+256)
  9593  0BBD  0020               	movlb	0	; select bank0
  9594  0BBE  083C               	movf	updateTemperature@data,w
  9595  0BBF  0022               	movlb	2	; select bank2
  9596  0BC0  00E4               	movwf	_CurrentTemperatureRaw^(0+256)
  9597                           
  9598                           ;temperature.c: 60: }
  9599  0BC1  2BE9               	goto	l863
  9600  0BC2                     l7863:	
  9601                           
  9602                           ;temperature.c: 61: else
  9603                           ;temperature.c: 62: {
  9604                           ;temperature.c: 63: CurrentTemperatureRaw = data / 2 + CurrentTemperatureRaw / 2;
  9605  0BC2  3002               	movlw	2
  9606  0BC3  00F2               	movwf	___awdiv@divisor
  9607  0BC4  3000               	movlw	0
  9608  0BC5  00F3               	movwf	___awdiv@divisor+1
  9609  0BC6  0020               	movlb	0	; select bank0
  9610  0BC7  083D               	movf	updateTemperature@data+1,w
  9611  0BC8  00F5               	movwf	___awdiv@dividend+1
  9612  0BC9  083C               	movf	updateTemperature@data,w
  9613  0BCA  00F4               	movwf	___awdiv@dividend
  9614  0BCB  319F  27AE  318B   	fcall	___awdiv
  9615  0BCE  0872               	movf	?___awdiv,w
  9616  0BCF  0020               	movlb	0	; select bank0
  9617  0BD0  00B2               	movwf	??_updateTemperature
  9618  0BD1  0873               	movf	?___awdiv+1,w
  9619  0BD2  00B3               	movwf	??_updateTemperature+1
  9620  0BD3  3002               	movlw	2
  9621  0BD4  00F2               	movwf	___awdiv@divisor
  9622  0BD5  3000               	movlw	0
  9623  0BD6  00F3               	movwf	___awdiv@divisor+1
  9624  0BD7  0022               	movlb	2	; select bank2
  9625  0BD8  0865               	movf	(_CurrentTemperatureRaw+1)^(0+256),w
  9626  0BD9  00F5               	movwf	___awdiv@dividend+1
  9627  0BDA  0864               	movf	_CurrentTemperatureRaw^(0+256),w
  9628  0BDB  00F4               	movwf	___awdiv@dividend
  9629  0BDC  319F  27AE  318B   	fcall	___awdiv
  9630  0BDF  0872               	movf	?___awdiv,w
  9631  0BE0  0020               	movlb	0	; select bank0
  9632  0BE1  0732               	addwf	??_updateTemperature,w
  9633  0BE2  0022               	movlb	2	; select bank2
  9634  0BE3  00E4               	movwf	_CurrentTemperatureRaw^(0+256)
  9635  0BE4  0873               	movf	?___awdiv+1,w
  9636  0BE5  0020               	movlb	0	; select bank0
  9637  0BE6  3D33               	addwfc	??_updateTemperature+1,w
  9638  0BE7  0022               	movlb	2	; select bank2
  9639  0BE8  00E5               	movwf	(_CurrentTemperatureRaw+1)^(0+256)
  9640  0BE9                     l863:	
  9641                           
  9642                           ;temperature.c: 64: }
  9643                           ;temperature.c: 66: CurTempInt = CurrentTemperatureRaw / 2;
  9644  0BE9  3002               	movlw	2
  9645  0BEA  00F2               	movwf	___awdiv@divisor
  9646  0BEB  3000               	movlw	0
  9647  0BEC  00F3               	movwf	___awdiv@divisor+1
  9648  0BED  0865               	movf	(_CurrentTemperatureRaw+1)^(0+256),w
  9649  0BEE  00F5               	movwf	___awdiv@dividend+1
  9650  0BEF  0864               	movf	_CurrentTemperatureRaw^(0+256),w
  9651  0BF0  00F4               	movwf	___awdiv@dividend
  9652  0BF1  319F  27AE  318B   	fcall	___awdiv
  9653  0BF4  0873               	movf	?___awdiv+1,w
  9654  0BF5  0021               	movlb	1	; select bank1
  9655  0BF6  00DF               	movwf	(_CurTempInt+1)^(0+128)
  9656  0BF7  0872               	movf	?___awdiv,w
  9657  0BF8  00DE               	movwf	_CurTempInt^(0+128)
  9658                           
  9659                           ;temperature.c: 67: CurTempFract = 5 * (CurrentTemperatureRaw & 0x01);
  9660  0BF9  3005               	movlw	5
  9661  0BFA  0020               	movlb	0	; select bank0
  9662  0BFB  00B2               	movwf	??_updateTemperature
  9663  0BFC  0832               	movf	??_updateTemperature,w
  9664  0BFD  00F2               	movwf	___bmul@multiplicand
  9665  0BFE  0022               	movlb	2	; select bank2
  9666  0BFF  0864               	movf	_CurrentTemperatureRaw^(0+256),w
  9667  0C00  3901               	andlw	1
  9668  0C01  3188  2000  318B   	fcall	___bmul
  9669  0C04  0020               	movlb	0	; select bank0
  9670  0C05  00B3               	movwf	??_updateTemperature+1
  9671  0C06  0833               	movf	??_updateTemperature+1,w
  9672  0C07  0021               	movlb	1	; select bank1
  9673  0C08  00E0               	movwf	_CurTempFract^(0+128)
  9674                           
  9675                           ;temperature.c: 70: { LCDGotoXY(0,0); LCDWriteInt(CurTempInt,2);};
  9676  0C09  0020               	movlb	0	; select bank0
  9677  0C0A  01A4               	clrf	LCDGotoXY@y
  9678  0C0B  3000               	movlw	0
  9679  0C0C  3199  210B  318B   	fcall	_LCDGotoXY
  9680  0C0F  0021               	movlb	1	; select bank1
  9681  0C10  085F               	movf	(_CurTempInt+1)^(0+128),w
  9682  0C11  0020               	movlb	0	; select bank0
  9683  0C12  00A5               	movwf	LCDWriteInt@val+1
  9684  0C13  0021               	movlb	1	; select bank1
  9685  0C14  085E               	movf	_CurTempInt^(0+128),w
  9686  0C15  0020               	movlb	0	; select bank0
  9687  0C16  00A4               	movwf	LCDWriteInt@val
  9688  0C17  3002               	movlw	2
  9689  0C18  00B2               	movwf	??_updateTemperature
  9690  0C19  0832               	movf	??_updateTemperature,w
  9691  0C1A  00A6               	movwf	LCDWriteInt@field_length
  9692  0C1B  3195  25D0  318B   	fcall	_LCDWriteInt
  9693                           
  9694                           ;temperature.c: 71: { LCDGotoXY(2,0); LCDWriteString(".");};
  9695  0C1E  0020               	movlb	0	; select bank0
  9696  0C1F  01A4               	clrf	LCDGotoXY@y
  9697  0C20  3002               	movlw	2
  9698  0C21  3199  210B  318B   	fcall	_LCDGotoXY
  9699  0C24  30D3               	movlw	low (STR_29| (0+32768))
  9700  0C25  0020               	movlb	0	; select bank0
  9701  0C26  00A6               	movwf	LCDWriteString@msg
  9702  0C27  3085               	movlw	high (STR_29| (0+32768))
  9703  0C28  00A7               	movwf	LCDWriteString@msg+1
  9704  0C29  319C  2465  318B   	fcall	_LCDWriteString
  9705                           
  9706                           ;temperature.c: 72: { LCDGotoXY(3,0); LCDWriteInt(CurTempFract,1);};
  9707  0C2C  0020               	movlb	0	; select bank0
  9708  0C2D  01A4               	clrf	LCDGotoXY@y
  9709  0C2E  3003               	movlw	3
  9710  0C2F  3199  210B  318B   	fcall	_LCDGotoXY
  9711  0C32  0021               	movlb	1	; select bank1
  9712  0C33  0860               	movf	_CurTempFract^(0+128),w
  9713  0C34  0020               	movlb	0	; select bank0
  9714  0C35  00B2               	movwf	??_updateTemperature
  9715  0C36  01B3               	clrf	??_updateTemperature+1
  9716  0C37  0832               	movf	??_updateTemperature,w
  9717  0C38  00A4               	movwf	LCDWriteInt@val
  9718  0C39  0833               	movf	??_updateTemperature+1,w
  9719  0C3A  00A5               	movwf	LCDWriteInt@val+1
  9720  0C3B  01A6               	clrf	LCDWriteInt@field_length
  9721  0C3C  0AA6               	incf	LCDWriteInt@field_length,f
  9722  0C3D  3195  25D0  318B   	fcall	_LCDWriteInt
  9723                           
  9724                           ;temperature.c: 73: LCDGotoXY(4, 0);
  9725  0C40  0020               	movlb	0	; select bank0
  9726  0C41  01A4               	clrf	LCDGotoXY@y
  9727  0C42  3004               	movlw	4
  9728  0C43  3199  210B  318B   	fcall	_LCDGotoXY
  9729                           
  9730                           ;temperature.c: 74: (LCDByte(0x00,1));
  9731  0C46  01F7               	clrf	LCDByte@isdata
  9732  0C47  0AF7               	incf	LCDByte@isdata,f
  9733  0C48  3000               	movlw	0
  9734  0C49  319B  2375  318B   	fcall	_LCDByte
  9735                           
  9736                           ;temperature.c: 75: LCDGotoXY(5, 0);
  9737  0C4C  0020               	movlb	0	; select bank0
  9738  0C4D  01A4               	clrf	LCDGotoXY@y
  9739  0C4E  3005               	movlw	5
  9740  0C4F  3199  210B  318B   	fcall	_LCDGotoXY
  9741                           
  9742                           ;temperature.c: 76: (LCDByte('C',1));
  9743  0C52  01F7               	clrf	LCDByte@isdata
  9744  0C53  0AF7               	incf	LCDByte@isdata,f
  9745  0C54  3043               	movlw	67
  9746  0C55  319B  2375  318B   	fcall	_LCDByte
  9747  0C58                     l7883:	
  9748                           
  9749                           ;temperature.c: 83: }
  9750                           ;temperature.c: 84: }
  9751                           ;temperature.c: 86: if (((sec - TempStartSec) >= 5 && !TempCheckInProgress) ||
  9752                           ;temperature.c: 87: RunCount)
  9753  0C58  0020               	movlb	0	; select bank0
  9754  0C59  083E               	movf	updateTemperature@sec,w
  9755  0C5A  00B2               	movwf	??_updateTemperature
  9756  0C5B  083F               	movf	updateTemperature@sec+1,w
  9757  0C5C  00B3               	movwf	??_updateTemperature+1
  9758  0C5D  0840               	movf	updateTemperature@sec+2,w
  9759  0C5E  00B4               	movwf	??_updateTemperature+2
  9760  0C5F  0841               	movf	updateTemperature@sec+3,w
  9761  0C60  00B5               	movwf	??_updateTemperature+3
  9762  0C61  0022               	movlb	2	; select bank2
  9763  0C62  095C               	comf	updateTemperature@TempStartSec^(0+256),w
  9764  0C63  0020               	movlb	0	; select bank0
  9765  0C64  00B6               	movwf	??_updateTemperature+4
  9766  0C65  0022               	movlb	2	; select bank2
  9767  0C66  095D               	comf	(updateTemperature@TempStartSec+1)^(0+256),w
  9768  0C67  0020               	movlb	0	; select bank0
  9769  0C68  00B7               	movwf	??_updateTemperature+5
  9770  0C69  0022               	movlb	2	; select bank2
  9771  0C6A  095E               	comf	(updateTemperature@TempStartSec+2)^(0+256),w
  9772  0C6B  0020               	movlb	0	; select bank0
  9773  0C6C  00B8               	movwf	??_updateTemperature+6
  9774  0C6D  0022               	movlb	2	; select bank2
  9775  0C6E  095F               	comf	(updateTemperature@TempStartSec+3)^(0+256),w
  9776  0C6F  0020               	movlb	0	; select bank0
  9777  0C70  00B9               	movwf	??_updateTemperature+7
  9778  0C71  0AB6               	incf	??_updateTemperature+4,f
  9779  0C72  1903               	skipnz
  9780  0C73  0AB7               	incf	??_updateTemperature+5,f
  9781  0C74  1903               	skipnz
  9782  0C75  0AB8               	incf	??_updateTemperature+6,f
  9783  0C76  1903               	skipnz
  9784  0C77  0AB9               	incf	??_updateTemperature+7,f
  9785  0C78  0836               	movf	??_updateTemperature+4,w
  9786  0C79  07B2               	addwf	??_updateTemperature,f
  9787  0C7A  0837               	movf	??_updateTemperature+5,w
  9788  0C7B  3DB3               	addwfc	??_updateTemperature+1,f
  9789  0C7C  0838               	movf	??_updateTemperature+6,w
  9790  0C7D  3DB4               	addwfc	??_updateTemperature+2,f
  9791  0C7E  0839               	movf	??_updateTemperature+7,w
  9792  0C7F  3DB5               	addwfc	??_updateTemperature+3,f
  9793  0C80  0835               	movf	??_updateTemperature+3,w
  9794  0C81  1D03               	btfss	3,2
  9795  0C82  2C8D               	goto	l7885
  9796  0C83  0834               	movf	??_updateTemperature+2,w
  9797  0C84  1D03               	btfss	3,2
  9798  0C85  2C8D               	goto	l7885
  9799  0C86  0833               	movf	??_updateTemperature+1,w
  9800  0C87  1D03               	btfss	3,2
  9801  0C88  2C8D               	goto	l7885
  9802  0C89  3005               	movlw	5
  9803  0C8A  0232               	subwf	??_updateTemperature,w
  9804  0C8B  1C03               	btfss	3,0
  9805  0C8C  2C91               	goto	l7887
  9806  0C8D                     l7885:	
  9807  0C8D  0022               	movlb	2	; select bank2
  9808  0C8E  085B               	movf	updateTemperature@TempCheckInProgress^(0+256),w
  9809  0C8F  1903               	btfsc	3,2
  9810  0C90  2C96               	goto	l7889
  9811  0C91                     l7887:	
  9812  0C91  0022               	movlb	2	; select bank2
  9813  0C92  0868               	movf	updateTemperature@RunCount^(0+256),w
  9814  0C93  0469               	iorwf	(updateTemperature@RunCount+1)^(0+256),w
  9815  0C94  1903               	btfsc	3,2
  9816  0C95  2CB3               	goto	l7897
  9817  0C96                     l7889:	
  9818                           
  9819                           ;temperature.c: 88: {
  9820                           ;temperature.c: 90: DS18B20_StartConversion();
  9821  0C96  31A6  269A  318B   	fcall	_DS18B20_StartConversion
  9822                           
  9823                           ;temperature.c: 91: TempCheckInProgress = 1;
  9824  0C99  0022               	movlb	2	; select bank2
  9825  0C9A  01DB               	clrf	updateTemperature@TempCheckInProgress^(0+256)
  9826  0C9B  0ADB               	incf	updateTemperature@TempCheckInProgress^(0+256),f
  9827                           
  9828                           ;temperature.c: 92: TempStartSec = sec;
  9829  0C9C  0020               	movlb	0	; select bank0
  9830  0C9D  0841               	movf	updateTemperature@sec+3,w
  9831  0C9E  0022               	movlb	2	; select bank2
  9832  0C9F  00DF               	movwf	(updateTemperature@TempStartSec+3)^(0+256)
  9833  0CA0  0020               	movlb	0	; select bank0
  9834  0CA1  0840               	movf	updateTemperature@sec+2,w
  9835  0CA2  0022               	movlb	2	; select bank2
  9836  0CA3  00DE               	movwf	(updateTemperature@TempStartSec+2)^(0+256)
  9837  0CA4  0020               	movlb	0	; select bank0
  9838  0CA5  083F               	movf	updateTemperature@sec+1,w
  9839  0CA6  0022               	movlb	2	; select bank2
  9840  0CA7  00DD               	movwf	(updateTemperature@TempStartSec+1)^(0+256)
  9841  0CA8  0020               	movlb	0	; select bank0
  9842  0CA9  083E               	movf	updateTemperature@sec,w
  9843  0CAA  0022               	movlb	2	; select bank2
  9844  0CAB  00DC               	movwf	updateTemperature@TempStartSec^(0+256)
  9845                           
  9846                           ;temperature.c: 93: TempStartMs = TMR4_GetMs();
  9847  0CAC  31A6  2616         	fcall	_TMR4_GetMs
  9848  0CAE  0873               	movf	?_TMR4_GetMs+1,w
  9849  0CAF  0022               	movlb	2	; select bank2
  9850  0CB0  00C9               	movwf	(updateTemperature@TempStartMs+1)^(0+256)
  9851  0CB1  0872               	movf	?_TMR4_GetMs,w
  9852  0CB2  00C8               	movwf	updateTemperature@TempStartMs^(0+256)
  9853  0CB3                     l7897:	
  9854                           
  9855                           ;temperature.c: 94: }
  9856                           ;temperature.c: 95: RunCount = 0;
  9857  0CB3  01E8               	clrf	updateTemperature@RunCount^(0+256)
  9858  0CB4  01E9               	clrf	(updateTemperature@RunCount+1)^(0+256)
  9859  0CB5  0008               	return
  9860  0CB6                     __end_of_updateTemperature:	
  9861                           
  9862                           	psect	text2
  9863  0800                     __ptext2:	
  9864 ;; *************** function ___bmul *****************
  9865 ;; Defined at:
  9866 ;;		line 4 in file "/opt/microchip/xc8/v1.35/sources/common/Umul8.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  multiplier      1    wreg     unsigned char 
  9869 ;;  multiplicand    1    2[COMMON] unsigned char 
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  multiplier      1    5[COMMON] unsigned char 
  9872 ;;  product         1    4[COMMON] unsigned char 
  9873 ;; Return value:  Size  Location     Type
  9874 ;;                  1    wreg      unsigned char 
  9875 ;; Registers used:
  9876 ;;		wreg, status,2, status,0
  9877 ;; Tracked objects:
  9878 ;;		On entry : 0/0
  9879 ;;		On exit  : 0/0
  9880 ;;		Unchanged: 0/0
  9881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9885 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9886 ;;Total ram usage:        4 bytes
  9887 ;; Hardware stack levels used:    1
  9888 ;; Hardware stack levels required when called:    2
  9889 ;; This function calls:
  9890 ;;		Nothing
  9891 ;; This function is called by:
  9892 ;;		_updateTemperature
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           
  9897                           ;psect for function ___bmul
  9898  0800                     ___bmul:	
  9899                           
  9900                           ;incstack = 0
  9901                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9902                           ;___bmul@multiplier stored from wreg
  9903  0800  00F5               	movwf	___bmul@multiplier
  9904  0801  01F4               	clrf	___bmul@product
  9905  0802                     l5897:	
  9906  0802  1C75               	btfss	___bmul@multiplier,0
  9907  0803  2808               	goto	l5901
  9908  0804  0872               	movf	___bmul@multiplicand,w
  9909  0805  00F3               	movwf	??___bmul
  9910  0806  0873               	movf	??___bmul,w
  9911  0807  07F4               	addwf	___bmul@product,f
  9912  0808                     l5901:	
  9913  0808  1003               	clrc
  9914  0809  0DF2               	rlf	___bmul@multiplicand,f
  9915  080A  1003               	clrc
  9916  080B  0CF5               	rrf	___bmul@multiplier,f
  9917  080C  0875               	movf	___bmul@multiplier,w
  9918  080D  1D03               	btfss	3,2
  9919  080E  2802               	goto	l5897
  9920  080F  0874               	movf	___bmul@product,w
  9921  0810  0008               	return
  9922  0811                     __end_of___bmul:	
  9923                           
  9924                           	psect	text3
  9925  269A                     __ptext3:	
  9926 ;; *************** function _DS18B20_StartConversion *****************
  9927 ;; Defined at:
  9928 ;;		line 12 in file "DS18B20.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;		None
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;		None
  9933 ;; Return value:  Size  Location     Type
  9934 ;;		None               void
  9935 ;; Registers used:
  9936 ;;		wreg, status,2, status,0, pclath, cstack
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9946 ;;Total ram usage:        0 bytes
  9947 ;; Hardware stack levels used:    1
  9948 ;; Hardware stack levels required when called:    5
  9949 ;; This function calls:
  9950 ;;		_OW_reset_pulse
  9951 ;;		_OW_write_byte
  9952 ;; This function is called by:
  9953 ;;		_updateTemperature
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           
  9958                           ;psect for function _DS18B20_StartConversion
  9959  269A                     _DS18B20_StartConversion:	
  9960                           
  9961                           ;DS18B20.c: 14: (INTCONbits.GIE = 0);
  9962                           
  9963                           ;incstack = 0
  9964                           ; Regs used in _DS18B20_StartConversion: [wreg+status,2+status,0+pclath+cstack]
  9965  269A  138B               	bcf	11,7	;volatile
  9966                           
  9967                           ;DS18B20.c: 16: OW_reset_pulse();
  9968  269B  319A  2210  31A6   	fcall	_OW_reset_pulse
  9969                           
  9970                           ;DS18B20.c: 17: OW_write_byte(DS18B20_Command_SkipRom);
  9971  269E  30CC               	movlw	204
  9972  269F  31A7  2727  31A6   	fcall	_OW_write_byte
  9973                           
  9974                           ;DS18B20.c: 18: OW_write_byte(DS18B20_Command_Convert_T);
  9975  26A2  3044               	movlw	68
  9976  26A3  31A7  2727         	fcall	_OW_write_byte
  9977                           
  9978                           ;DS18B20.c: 20: (INTCONbits.GIE = 1);
  9979  26A5  178B               	bsf	11,7	;volatile
  9980  26A6  0008               	return
  9981  26A7                     __end_of_DS18B20_StartConversion:	
  9982                           
  9983                           	psect	text4
  9984  1B08                     __ptext4:	
  9985 ;; *************** function _DS18B20_ReadRawTemperature *****************
  9986 ;; Defined at:
  9987 ;;		line 25 in file "DS18B20.c"
  9988 ;; Parameters:    Size  Location     Type
  9989 ;;		None
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;  result          2    3[BANK0 ] int 
  9992 ;;  hibyte          1    6[BANK0 ] char 
  9993 ;;  lowbyte         1    5[BANK0 ] char 
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  2    8[COMMON] int 
  9996 ;; Registers used:
  9997 ;;		wreg, status,2, status,0, pclath, cstack
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/0
 10000 ;;		On exit  : 0/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10004 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10005 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10006 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10007 ;;Total ram usage:        9 bytes
 10008 ;; Hardware stack levels used:    1
 10009 ;; Hardware stack levels required when called:    5
 10010 ;; This function calls:
 10011 ;;		_OW_read_byte
 10012 ;;		_OW_reset_pulse
 10013 ;;		_OW_write_byte
 10014 ;; This function is called by:
 10015 ;;		_updateTemperature
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           
 10020                           ;psect for function _DS18B20_ReadRawTemperature
 10021  1B08                     _DS18B20_ReadRawTemperature:	
 10022                           
 10023                           ;DS18B20.c: 27: int16_t result = 0;
 10024                           
 10025                           ;incstack = 0
 10026                           ; Regs used in _DS18B20_ReadRawTemperature: [wreg+status,2+status,0+pclath+cstack]
 10027  1B08  0020               	movlb	0	; select bank0
 10028  1B09  01A3               	clrf	DS18B20_ReadRawTemperature@result
 10029  1B0A  01A4               	clrf	DS18B20_ReadRawTemperature@result+1
 10030                           
 10031                           ;DS18B20.c: 29: (INTCONbits.GIE = 0);
 10032  1B0B  138B               	bcf	11,7	;volatile
 10033                           
 10034                           ;DS18B20.c: 30: OW_reset_pulse();
 10035  1B0C  319A  2210  319B   	fcall	_OW_reset_pulse
 10036                           
 10037                           ;DS18B20.c: 31: OW_write_byte(DS18B20_Command_SkipRom);
 10038  1B0F  30CC               	movlw	204
 10039  1B10  31A7  2727  319B   	fcall	_OW_write_byte
 10040                           
 10041                           ;DS18B20.c: 32: OW_write_byte(DS18B20_Command_ReadScratchpad);
 10042  1B13  30BE               	movlw	190
 10043  1B14  31A7  2727  319B   	fcall	_OW_write_byte
 10044                           
 10045                           ;DS18B20.c: 34: int8_t lowbyte = OW_read_byte();
 10046  1B17  31A7  27B6  319B   	fcall	_OW_read_byte
 10047  1B1A  0020               	movlb	0	; select bank0
 10048  1B1B  00A0               	movwf	??_DS18B20_ReadRawTemperature
 10049  1B1C  0820               	movf	??_DS18B20_ReadRawTemperature,w
 10050  1B1D  00A5               	movwf	DS18B20_ReadRawTemperature@lowbyte
 10051                           
 10052                           ;DS18B20.c: 35: int8_t hibyte = OW_read_byte();
 10053  1B1E  31A7  27B6  319B   	fcall	_OW_read_byte
 10054  1B21  0020               	movlb	0	; select bank0
 10055  1B22  00A0               	movwf	??_DS18B20_ReadRawTemperature
 10056  1B23  0820               	movf	??_DS18B20_ReadRawTemperature,w
 10057  1B24  00A6               	movwf	DS18B20_ReadRawTemperature@hibyte
 10058                           
 10059                           ;DS18B20.c: 36: OW_reset_pulse();
 10060  1B25  319A  2210         	fcall	_OW_reset_pulse
 10061                           
 10062                           ;DS18B20.c: 37: (INTCONbits.GIE = 1);
 10063  1B27  178B               	bsf	11,7	;volatile
 10064                           
 10065                           ;DS18B20.c: 39: result = (int16_t)(hibyte << 8) | lowbyte;
 10066  1B28  0020               	movlb	0	; select bank0
 10067  1B29  0826               	movf	DS18B20_ReadRawTemperature@hibyte,w
 10068  1B2A  00A0               	movwf	??_DS18B20_ReadRawTemperature
 10069  1B2B  01A1               	clrf	??_DS18B20_ReadRawTemperature+1
 10070  1B2C  0820               	movf	??_DS18B20_ReadRawTemperature,w
 10071  1B2D  00A1               	movwf	??_DS18B20_ReadRawTemperature+1
 10072  1B2E  01A0               	clrf	??_DS18B20_ReadRawTemperature
 10073  1B2F  0825               	movf	DS18B20_ReadRawTemperature@lowbyte,w
 10074  1B30  0420               	iorwf	??_DS18B20_ReadRawTemperature,w
 10075  1B31  00A3               	movwf	DS18B20_ReadRawTemperature@result
 10076  1B32  01A4               	clrf	DS18B20_ReadRawTemperature@result+1
 10077  1B33  1BA5               	btfsc	DS18B20_ReadRawTemperature@lowbyte,7
 10078  1B34  03A4               	decf	DS18B20_ReadRawTemperature@result+1,f
 10079  1B35  0020               	movlb	0	; select bank0
 10080  1B36  0821               	movf	??_DS18B20_ReadRawTemperature+1,w
 10081  1B37  04A4               	iorwf	DS18B20_ReadRawTemperature@result+1,f
 10082                           
 10083                           ;DS18B20.c: 42: return result;
 10084  1B38  0824               	movf	DS18B20_ReadRawTemperature@result+1,w
 10085  1B39  00F9               	movwf	?_DS18B20_ReadRawTemperature+1
 10086  1B3A  0823               	movf	DS18B20_ReadRawTemperature@result,w
 10087  1B3B  00F8               	movwf	?_DS18B20_ReadRawTemperature
 10088  1B3C  0008               	return
 10089  1B3D                     __end_of_DS18B20_ReadRawTemperature:	
 10090                           
 10091                           	psect	text5
 10092  27B6                     __ptext5:	
 10093 ;; *************** function _OW_read_byte *****************
 10094 ;; Defined at:
 10095 ;;		line 215 in file "lib1wire/1wire.c"
 10096 ;; Parameters:    Size  Location     Type
 10097 ;;		None
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;  loop            1    7[COMMON] unsigned char 
 10100 ;;  result          1    6[COMMON] unsigned char 
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1    wreg      unsigned char 
 10103 ;; Registers used:
 10104 ;;		wreg, status,2, status,0, pclath, cstack
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10113 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10114 ;;Total ram usage:        3 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:    4
 10117 ;; This function calls:
 10118 ;;		_OW_read_bit
 10119 ;; This function is called by:
 10120 ;;		_DS18B20_ReadRawTemperature
 10121 ;;		_DS18B20_ReadResolution
 10122 ;; This function uses a non-reentrant model
 10123 ;;
 10124                           
 10125                           
 10126                           ;psect for function _OW_read_byte
 10127  27B6                     _OW_read_byte:	
 10128                           
 10129                           ;1wire.c: 217: unsigned char loop, result = 0;
 10130                           
 10131                           ;incstack = 0
 10132                           ; Regs used in _OW_read_byte: [wreg+status,2+status,0+pclath+cstack]
 10133  27B6  01F6               	clrf	OW_read_byte@result
 10134                           
 10135                           ;1wire.c: 219: for (loop = 0; loop < 8; loop++)
 10136  27B7  01F7               	clrf	OW_read_byte@loop
 10137  27B8  3008               	movlw	8
 10138  27B9  0277               	subwf	OW_read_byte@loop,w
 10139  27BA  1803               	btfsc	3,0
 10140  27BB  2FCC               	goto	l5163
 10141                           
 10142                           ;1wire.c: 220: {
 10143                           ;1wire.c: 222: result >>= 1;
 10144  27BC  1003               	clrc
 10145  27BD                     L1:	
 10146  27BD  0CF6               	rrf	OW_read_byte@result,f
 10147                           
 10148                           ;1wire.c: 223: if (OW_read_bit())
 10149  27BE  3198  2056  31A7   	fcall	_OW_read_bit
 10150  27C1  3A00               	xorlw	0
 10151  27C2  1D03               	btfss	3,2
 10152                           
 10153                           ;1wire.c: 224: result |= 0x80;
 10154  27C3  17F6               	bsf	OW_read_byte@result,7
 10155  27C4  3001               	movlw	1
 10156  27C5  00F5               	movwf	??_OW_read_byte
 10157  27C6  0875               	movf	??_OW_read_byte,w
 10158  27C7  07F7               	addwf	OW_read_byte@loop,f
 10159  27C8  3008               	movlw	8
 10160  27C9  0277               	subwf	OW_read_byte@loop,w
 10161  27CA  1C03               	skipc
 10162  27CB  2FBD               	goto	L1
 10163  27CC                     l5163:	
 10164                           
 10165                           ;1wire.c: 225: }
 10166                           ;1wire.c: 226: return result;
 10167  27CC  0876               	movf	OW_read_byte@result,w
 10168  27CD  0008               	return
 10169  27CE                     __end_of_OW_read_byte:	
 10170                           
 10171                           	psect	text6
 10172  1856                     __ptext6:	
 10173 ;; *************** function _OW_read_bit *****************
 10174 ;; Defined at:
 10175 ;;		line 173 in file "lib1wire/1wire.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;		None
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;  read_data       1    4[COMMON] unsigned char 
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1    wreg      unsigned char 
 10182 ;; Registers used:
 10183 ;;		wreg, status,2, status,0, pclath, cstack
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10192 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10193 ;;Total ram usage:        2 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; Hardware stack levels required when called:    3
 10196 ;; This function calls:
 10197 ;;		_drive_OW_high
 10198 ;;		_drive_OW_low
 10199 ;;		_read_OW
 10200 ;; This function is called by:
 10201 ;;		_OW_read_byte
 10202 ;; This function uses a non-reentrant model
 10203 ;;
 10204                           
 10205                           
 10206                           ;psect for function _OW_read_bit
 10207  1856                     _OW_read_bit:	
 10208                           
 10209                           ;1wire.c: 175: unsigned char read_data;
 10210                           ;1wire.c: 177: drive_OW_low();
 10211                           
 10212                           ;incstack = 0
 10213                           ; Regs used in _OW_read_bit: [wreg+status,2+status,0+pclath+cstack]
 10214  1856  31A6  2605  3198   	fcall	_drive_OW_low
 10215                           
 10216                           ;1wire.c: 178: _delay((unsigned long)((6)*(16000000/4000000.0)));
 10217  1859  3007               	movlw	7
 10218  185A  00F3               	movwf	??_OW_read_bit
 10219  185B                     u10247:	
 10220  185B  0BF3               	decfsz	??_OW_read_bit,f
 10221  185C  285B               	goto	u10247
 10222  185D  3200               	nop2	;nop
 10223                           
 10224                           ;1wire.c: 179: drive_OW_high();
 10225  185E  31A6  2600  3198   	fcall	_drive_OW_high
 10226                           
 10227                           ;1wire.c: 180: _delay((unsigned long)((9)*(16000000/4000000.0)));
 10228  1861  300B               	movlw	11
 10229  1862  00F3               	movwf	??_OW_read_bit
 10230  1863                     u10257:	
 10231  1863  0BF3               	decfsz	??_OW_read_bit,f
 10232  1864  2863               	goto	u10257
 10233  1865  3200               	nop2	;nop
 10234                           
 10235                           ;1wire.c: 182: read_data = read_OW();
 10236  1866  31A6  265C  3198   	fcall	_read_OW
 10237  1869  00F3               	movwf	??_OW_read_bit
 10238  186A  0873               	movf	??_OW_read_bit,w
 10239  186B  00F4               	movwf	OW_read_bit@read_data
 10240                           
 10241                           ;1wire.c: 184: _delay((unsigned long)((55)*(16000000/4000000.0)));
 10242  186C  3049               	movlw	73
 10243  186D  00F3               	movwf	??_OW_read_bit
 10244  186E                     u10267:	
 10245  186E  0BF3               	decfsz	??_OW_read_bit,f
 10246  186F  286E               	goto	u10267
 10247                           
 10248                           ;1wire.c: 185: return read_data;
 10249  1870  0874               	movf	OW_read_bit@read_data,w
 10250  1871  0008               	return
 10251  1872                     __end_of_OW_read_bit:	
 10252                           
 10253                           	psect	text7
 10254  2760                     __ptext7:	
 10255 ;; *************** function _initDrivers *****************
 10256 ;; Defined at:
 10257 ;;		line 70 in file "main.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;		None
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;		None
 10262 ;; Return value:  Size  Location     Type
 10263 ;;		None               void
 10264 ;; Registers used:
 10265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10275 ;;Total ram usage:        0 bytes
 10276 ;; Hardware stack levels used:    1
 10277 ;; Hardware stack levels required when called:    7
 10278 ;; This function calls:
 10279 ;;		_LCDByte
 10280 ;;		_LCDInit
 10281 ;;		_PWM3_LoadDutyValue
 10282 ;;		_TempSensor_Init
 10283 ;; This function is called by:
 10284 ;;		_main
 10285 ;; This function uses a non-reentrant model
 10286 ;;
 10287                           
 10288                           
 10289                           ;psect for function _initDrivers
 10290  2760                     _initDrivers:	
 10291                           
 10292                           ;main.c: 73: PWM3_LoadDutyValue(0);
 10293                           
 10294                           ;incstack = 0
 10295                           ; Regs used in _initDrivers: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10296  2760  3000               	movlw	0
 10297  2761  00F2               	movwf	PWM3_LoadDutyValue@dutyValue
 10298  2762  00F3               	movwf	PWM3_LoadDutyValue@dutyValue+1
 10299  2763  3198  201F  31A7   	fcall	_PWM3_LoadDutyValue
 10300                           
 10301                           ;main.c: 75: LCDInit(0B00000000);
 10302  2766  3000               	movlw	0
 10303  2767  319F  275E  31A7   	fcall	_LCDInit
 10304                           
 10305                           ;main.c: 76: (LCDByte(0b00000001,0));
 10306  276A  01F7               	clrf	LCDByte@isdata
 10307  276B  3001               	movlw	1
 10308  276C  319B  2375  31A7   	fcall	_LCDByte
 10309                           
 10310                           ;main.c: 78: TempSensor_Init();
 10311  276F  3198  208F         	fcall	_TempSensor_Init
 10312                           
 10313                           ;main.c: 82: do { LATC5 = 0; } while(0);
 10314  2771  0022               	movlb	2	; select bank2
 10315  2772  128E               	bcf	14,5	;volatile
 10316  2773  0008               	return
 10317  2774                     __end_of_initDrivers:	
 10318                           
 10319                           	psect	text8
 10320  188F                     __ptext8:	
 10321 ;; *************** function _TempSensor_Init *****************
 10322 ;; Defined at:
 10323 ;;		line 12 in file "temperature.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;		None
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;  OW_Ok           1   55[BANK0 ] unsigned char 
 10328 ;; Return value:  Size  Location     Type
 10329 ;;		None               void
 10330 ;; Registers used:
 10331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10339 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10340 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10341 ;;Total ram usage:        2 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; Hardware stack levels required when called:    6
 10344 ;; This function calls:
 10345 ;;		_DS18B20_ResetAndDetect
 10346 ;;		_DS18B20_SetResolution
 10347 ;;		_printf
 10348 ;; This function is called by:
 10349 ;;		_initDrivers
 10350 ;; This function uses a non-reentrant model
 10351 ;;
 10352                           
 10353                           
 10354                           ;psect for function _TempSensor_Init
 10355  188F                     _TempSensor_Init:	
 10356                           
 10357                           ;temperature.c: 14: bool OW_Ok = DS18B20_ResetAndDetect();
 10358                           
 10359                           ;incstack = 0
 10360                           ; Regs used in _TempSensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10361  188F  31A6  268D  3198   	fcall	_DS18B20_ResetAndDetect
 10362  1892  0020               	movlb	0	; select bank0
 10363  1893  00D6               	movwf	??_TempSensor_Init
 10364  1894  0856               	movf	??_TempSensor_Init,w
 10365  1895  00D7               	movwf	TempSensor_Init@OW_Ok
 10366                           
 10367                           ;temperature.c: 15: if (OW_Ok)
 10368  1896  0857               	movf	TempSensor_Init@OW_Ok,w
 10369  1897  1903               	btfsc	3,2
 10370  1898  28A4               	goto	l7431
 10371                           
 10372                           ;temperature.c: 16: {
 10373                           ;temperature.c: 17: printf("Temp sensor OK\r\n");
 10374  1899  30B2               	movlw	low (STR_27| (0+32768))
 10375  189A  00B0               	movwf	printf@f
 10376  189B  3084               	movlw	high (STR_27| (0+32768))
 10377  189C  00B1               	movwf	printf@f+1
 10378  189D  3180  2096  3198   	fcall	_printf
 10379                           
 10380                           ;temperature.c: 18: DS18B20_SetResolution(DS18B20_Resolution_9bit);
 10381  18A0  3000               	movlw	0
 10382  18A1  3199  21C0         	fcall	_DS18B20_SetResolution
 10383                           
 10384                           ;temperature.c: 19: }
 10385  18A3  0008               	return
 10386  18A4                     l7431:	
 10387                           
 10388                           ;temperature.c: 20: else
 10389                           ;temperature.c: 21: {
 10390                           ;temperature.c: 22: printf("Temp sensor FAIL\r\n");
 10391  18A4  305A               	movlw	low (STR_28| (0+32768))
 10392  18A5  0020               	movlb	0	; select bank0
 10393  18A6  00B0               	movwf	printf@f
 10394  18A7  3084               	movlw	high (STR_28| (0+32768))
 10395  18A8  00B1               	movwf	printf@f+1
 10396  18A9  3180  2096         	fcall	_printf
 10397  18AB  0008               	return
 10398  18AC                     __end_of_TempSensor_Init:	
 10399                           
 10400                           	psect	text9
 10401  19C0                     __ptext9:	
 10402 ;; *************** function _DS18B20_SetResolution *****************
 10403 ;; Defined at:
 10404 ;;		line 77 in file "DS18B20.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  res             1    wreg     enum E6366
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;  res             1    0[COMMON] enum E6366
 10409 ;;  configData      1    7[COMMON] unsigned char 
 10410 ;; Return value:  Size  Location     Type
 10411 ;;		None               void
 10412 ;; Registers used:
 10413 ;;		wreg, status,2, status,0, pclath, cstack
 10414 ;; Tracked objects:
 10415 ;;		On entry : 0/0
 10416 ;;		On exit  : 0/0
 10417 ;;		Unchanged: 0/0
 10418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10422 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10423 ;;Total ram usage:        1 bytes
 10424 ;; Hardware stack levels used:    1
 10425 ;; Hardware stack levels required when called:    5
 10426 ;; This function calls:
 10427 ;;		_OW_reset_pulse
 10428 ;;		_OW_write_byte
 10429 ;; This function is called by:
 10430 ;;		_TempSensor_Init
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           
 10435                           ;psect for function _DS18B20_SetResolution
 10436  19C0                     _DS18B20_SetResolution:	
 10437                           
 10438                           ;DS18B20.c: 79: uint8_t configData = 0x00;
 10439                           
 10440                           ;incstack = 0
 10441                           ; Regs used in _DS18B20_SetResolution: [wreg+status,2+status,0+pclath+cstack]
 10442  19C0  01F7               	clrf	DS18B20_SetResolution@configData
 10443                           
 10444                           ;DS18B20.c: 81: (INTCONbits.GIE = 0);
 10445  19C1  138B               	bcf	11,7	;volatile
 10446                           
 10447                           ;DS18B20.c: 82: OW_reset_pulse();
 10448  19C2  319A  2210  3199   	fcall	_OW_reset_pulse
 10449                           
 10450                           ;DS18B20.c: 83: OW_write_byte(DS18B20_Command_SkipRom);
 10451  19C5  30CC               	movlw	204
 10452  19C6  31A7  2727  3199   	fcall	_OW_write_byte
 10453                           
 10454                           ;DS18B20.c: 84: OW_write_byte(DS18B20_Command_WriteScratchpad);
 10455  19C9  304E               	movlw	78
 10456  19CA  31A7  2727  3199   	fcall	_OW_write_byte
 10457                           
 10458                           ;DS18B20.c: 87: OW_write_byte(0);
 10459  19CD  3000               	movlw	0
 10460  19CE  31A7  2727  3199   	fcall	_OW_write_byte
 10461                           
 10462                           ;DS18B20.c: 88: OW_write_byte(0);
 10463  19D1  3000               	movlw	0
 10464  19D2  31A7  2727  3199   	fcall	_OW_write_byte
 10465                           
 10466                           ;DS18B20.c: 90: OW_write_byte(configData);
 10467  19D5  0877               	movf	DS18B20_SetResolution@configData,w
 10468  19D6  31A7  2727  3199   	fcall	_OW_write_byte
 10469                           
 10470                           ;DS18B20.c: 92: OW_reset_pulse();
 10471  19D9  319A  2210  3199   	fcall	_OW_reset_pulse
 10472                           
 10473                           ;DS18B20.c: 93: OW_write_byte(DS18B20_Command_SkipRom);
 10474  19DC  30CC               	movlw	204
 10475  19DD  31A7  2727  3199   	fcall	_OW_write_byte
 10476                           
 10477                           ;DS18B20.c: 94: OW_write_byte(DS18B20_Command_CopyScratchpad);
 10478  19E0  3048               	movlw	72
 10479  19E1  31A7  2727         	fcall	_OW_write_byte
 10480                           
 10481                           ;DS18B20.c: 95: (INTCONbits.GIE = 1);
 10482  19E3  178B               	bsf	11,7	;volatile
 10483  19E4  0008               	return
 10484  19E5                     __end_of_DS18B20_SetResolution:	
 10485                           
 10486                           	psect	text10
 10487  2727                     __ptext10:	
 10488 ;; *************** function _OW_write_byte *****************
 10489 ;; Defined at:
 10490 ;;		line 196 in file "lib1wire/1wire.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  write_data      1    wreg     unsigned char 
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;  write_data      1    5[COMMON] unsigned char 
 10495 ;;  loop            1    6[COMMON] unsigned char 
 10496 ;; Return value:  Size  Location     Type
 10497 ;;		None               void
 10498 ;; Registers used:
 10499 ;;		wreg, status,2, status,0, pclath, cstack
 10500 ;; Tracked objects:
 10501 ;;		On entry : 0/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10507 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10508 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10509 ;;Total ram usage:        3 bytes
 10510 ;; Hardware stack levels used:    1
 10511 ;; Hardware stack levels required when called:    4
 10512 ;; This function calls:
 10513 ;;		_OW_write_bit
 10514 ;; This function is called by:
 10515 ;;		_DS18B20_StartConversion
 10516 ;;		_DS18B20_ReadRawTemperature
 10517 ;;		_DS18B20_SetResolution
 10518 ;;		_DS18B20_ReadResolution
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           
 10523                           ;psect for function _OW_write_byte
 10524  2727                     _OW_write_byte:	
 10525                           
 10526                           ;incstack = 0
 10527                           ; Regs used in _OW_write_byte: [wreg+status,2+status,0+pclath+cstack]
 10528                           ;OW_write_byte@write_data stored from wreg
 10529  2727  00F5               	movwf	OW_write_byte@write_data
 10530                           
 10531                           ;1wire.c: 198: unsigned char loop;
 10532                           ;1wire.c: 200: for (loop = 0; loop < 8; loop++)
 10533  2728  01F6               	clrf	OW_write_byte@loop
 10534  2729                     L2:	
 10535  2729  3008               	movlw	8
 10536  272A  0276               	subwf	OW_write_byte@loop,w
 10537  272B  1803               	btfsc	3,0
 10538  272C  0008               	return
 10539                           
 10540                           ;1wire.c: 201: {
 10541                           ;1wire.c: 202: OW_write_bit(write_data & 0x01);
 10542  272D  0875               	movf	OW_write_byte@write_data,w
 10543  272E  3901               	andlw	1
 10544  272F  3199  2177  31A7   	fcall	_OW_write_bit
 10545                           
 10546                           ;1wire.c: 203: write_data >>= 1;
 10547  2732  1003               	clrc
 10548  2733  0CF5               	rrf	OW_write_byte@write_data,f
 10549  2734  3001               	movlw	1
 10550  2735  00F4               	movwf	??_OW_write_byte
 10551  2736  0874               	movf	??_OW_write_byte,w
 10552  2737  07F6               	addwf	OW_write_byte@loop,f
 10553  2738  2F29               	goto	L2
 10554  2739                     __end_of_OW_write_byte:	
 10555                           
 10556                           	psect	text11
 10557  1977                     __ptext11:	
 10558 ;; *************** function _OW_write_bit *****************
 10559 ;; Defined at:
 10560 ;;		line 144 in file "lib1wire/1wire.c"
 10561 ;; Parameters:    Size  Location     Type
 10562 ;;  write_bit       1    wreg     unsigned char 
 10563 ;; Auto vars:     Size  Location     Type
 10564 ;;  write_bit       1    3[COMMON] unsigned char 
 10565 ;; Return value:  Size  Location     Type
 10566 ;;		None               void
 10567 ;; Registers used:
 10568 ;;		wreg, status,2, status,0, pclath, cstack
 10569 ;; Tracked objects:
 10570 ;;		On entry : 0/0
 10571 ;;		On exit  : 0/0
 10572 ;;		Unchanged: 0/0
 10573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10577 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10578 ;;Total ram usage:        2 bytes
 10579 ;; Hardware stack levels used:    1
 10580 ;; Hardware stack levels required when called:    3
 10581 ;; This function calls:
 10582 ;;		_drive_OW_high
 10583 ;;		_drive_OW_low
 10584 ;; This function is called by:
 10585 ;;		_OW_write_byte
 10586 ;; This function uses a non-reentrant model
 10587 ;;
 10588                           
 10589                           
 10590                           ;psect for function _OW_write_bit
 10591  1977                     _OW_write_bit:	
 10592                           
 10593                           ;incstack = 0
 10594                           ; Regs used in _OW_write_bit: [wreg+status,2+status,0+pclath+cstack]
 10595                           ;OW_write_bit@write_bit stored from wreg
 10596  1977  00F3               	movwf	OW_write_bit@write_bit
 10597                           
 10598                           ;1wire.c: 146: if (write_bit)
 10599  1978  0873               	movf	OW_write_bit@write_bit,w
 10600  1979  1903               	btfsc	3,2
 10601  197A  298B               	goto	l4727
 10602                           
 10603                           ;1wire.c: 147: {
 10604                           ;1wire.c: 149: drive_OW_low();
 10605  197B  31A6  2605  3199   	fcall	_drive_OW_low
 10606                           
 10607                           ;1wire.c: 150: _delay((unsigned long)((6)*(16000000/4000000.0)));
 10608  197E  3007               	movlw	7
 10609  197F  00F2               	movwf	??_OW_write_bit
 10610  1980                     u10277:	
 10611  1980  0BF2               	decfsz	??_OW_write_bit,f
 10612  1981  2980               	goto	u10277
 10613  1982  3200               	nop2	;nop
 10614                           
 10615                           ;1wire.c: 151: drive_OW_high();
 10616  1983  31A6  2600  3199   	fcall	_drive_OW_high
 10617                           
 10618                           ;1wire.c: 152: _delay((unsigned long)((64)*(16000000/4000000.0)));
 10619  1986  3055               	movlw	85
 10620  1987  00F2               	movwf	??_OW_write_bit
 10621  1988                     u10287:	
 10622  1988  0BF2               	decfsz	??_OW_write_bit,f
 10623  1989  2988               	goto	u10287
 10624                           
 10625                           ;1wire.c: 153: }
 10626  198A  0008               	return
 10627  198B                     l4727:	
 10628                           
 10629                           ;1wire.c: 154: else
 10630                           ;1wire.c: 155: {
 10631                           ;1wire.c: 157: drive_OW_low();
 10632  198B  31A6  2605  3199   	fcall	_drive_OW_low
 10633                           
 10634                           ;1wire.c: 158: _delay((unsigned long)((60)*(16000000/4000000.0)));
 10635  198E  304F               	movlw	79
 10636  198F  00F2               	movwf	??_OW_write_bit
 10637  1990                     u10297:	
 10638  1990  0BF2               	decfsz	??_OW_write_bit,f
 10639  1991  2990               	goto	u10297
 10640  1992  3200               	nop2	;nop
 10641                           
 10642                           ;1wire.c: 159: drive_OW_high();
 10643  1993  31A6  2600  3199   	fcall	_drive_OW_high
 10644                           
 10645                           ;1wire.c: 160: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10646  1996  300D               	movlw	13
 10647  1997  00F2               	movwf	??_OW_write_bit
 10648  1998                     u10307:	
 10649  1998  0BF2               	decfsz	??_OW_write_bit,f
 10650  1999  2998               	goto	u10307
 10651  199A  0008               	return
 10652  199B                     __end_of_OW_write_bit:	
 10653                           
 10654                           	psect	text12
 10655  268D                     __ptext12:	
 10656 ;; *************** function _DS18B20_ResetAndDetect *****************
 10657 ;; Defined at:
 10658 ;;		line 4 in file "DS18B20.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;		None
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;  present         1    6[COMMON] unsigned char 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1    wreg      unsigned char 
 10665 ;; Registers used:
 10666 ;;		wreg, status,2, status,0, pclath, cstack
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10676 ;;Total ram usage:        2 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    4
 10679 ;; This function calls:
 10680 ;;		_OW_reset_pulse
 10681 ;; This function is called by:
 10682 ;;		_TempSensor_Init
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           
 10687                           ;psect for function _DS18B20_ResetAndDetect
 10688  268D                     _DS18B20_ResetAndDetect:	
 10689                           
 10690                           ;DS18B20.c: 6: bool present = OW_reset_pulse();
 10691                           
 10692                           ;incstack = 0
 10693                           ; Regs used in _DS18B20_ResetAndDetect: [wreg+status,2+status,0+pclath+cstack]
 10694  268D  319A  2210  31A6   	fcall	_OW_reset_pulse
 10695  2690  00F5               	movwf	??_DS18B20_ResetAndDetect
 10696  2691  0875               	movf	??_DS18B20_ResetAndDetect,w
 10697  2692  00F6               	movwf	DS18B20_ResetAndDetect@present
 10698                           
 10699                           ;DS18B20.c: 7: return (present == 0);
 10700  2693  0876               	movf	DS18B20_ResetAndDetect@present,w
 10701  2694  1D03               	btfss	3,2
 10702  2695  2E98               	goto	u5210
 10703  2696  3001               	movlw	1
 10704  2697  0008               	return
 10705  2698                     u5210:	
 10706  2698  3000               	movlw	0
 10707  2699  0008               	return
 10708  269A                     __end_of_DS18B20_ResetAndDetect:	
 10709                           
 10710                           	psect	text13
 10711  1A10                     __ptext13:	
 10712 ;; *************** function _OW_reset_pulse *****************
 10713 ;; Defined at:
 10714 ;;		line 111 in file "lib1wire/1wire.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;		None
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;  presence_det    1    4[COMMON] unsigned char 
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      unsigned char 
 10721 ;; Registers used:
 10722 ;;		wreg, status,2, status,0, pclath, cstack
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10732 ;;Total ram usage:        2 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; Hardware stack levels required when called:    3
 10735 ;; This function calls:
 10736 ;;		_drive_OW_high
 10737 ;;		_drive_OW_low
 10738 ;;		_read_OW
 10739 ;; This function is called by:
 10740 ;;		_DS18B20_ResetAndDetect
 10741 ;;		_DS18B20_StartConversion
 10742 ;;		_DS18B20_ReadRawTemperature
 10743 ;;		_DS18B20_SetResolution
 10744 ;;		_DS18B20_ReadResolution
 10745 ;; This function uses a non-reentrant model
 10746 ;;
 10747                           
 10748                           
 10749                           ;psect for function _OW_reset_pulse
 10750  1A10                     _OW_reset_pulse:	
 10751                           
 10752                           ;1wire.c: 114: unsigned char presence_detect;
 10753                           ;1wire.c: 116: drive_OW_low();
 10754                           
 10755                           ;incstack = 0
 10756                           ; Regs used in _OW_reset_pulse: [wreg+status,2+status,0+pclath+cstack]
 10757  1A10  31A6  2605  319A   	fcall	_drive_OW_low
 10758                           
 10759                           ;1wire.c: 118: _delay((unsigned long)((240)*(16000000/4000000.0)));
 10760  1A13  3089               	movlw	137
 10761  1A14  00F3               	movwf	??_OW_reset_pulse
 10762  1A15                     u10317:	
 10763  1A15  3200               	nop2
 10764  1A16  3200               	nop2
 10765  1A17  0BF3               	decfsz	??_OW_reset_pulse,f
 10766  1A18  2A15               	goto	u10317
 10767                           
 10768                           ;1wire.c: 119: _delay((unsigned long)((240)*(16000000/4000000.0)));
 10769  1A19  3089               	movlw	137
 10770  1A1A  00F3               	movwf	??_OW_reset_pulse
 10771  1A1B                     u10327:	
 10772  1A1B  3200               	nop2
 10773  1A1C  3200               	nop2
 10774  1A1D  0BF3               	decfsz	??_OW_reset_pulse,f
 10775  1A1E  2A1B               	goto	u10327
 10776                           
 10777                           ;1wire.c: 121: drive_OW_high();
 10778  1A1F  31A6  2600  319A   	fcall	_drive_OW_high
 10779                           
 10780                           ;1wire.c: 123: _delay((unsigned long)((70)*(16000000/4000000.0)));
 10781  1A22  305D               	movlw	93
 10782  1A23  00F3               	movwf	??_OW_reset_pulse
 10783  1A24                     u10337:	
 10784  1A24  0BF3               	decfsz	??_OW_reset_pulse,f
 10785  1A25  2A24               	goto	u10337
 10786                           
 10787                           ;1wire.c: 125: presence_detect = read_OW();
 10788  1A26  31A6  265C  319A   	fcall	_read_OW
 10789  1A29  00F3               	movwf	??_OW_reset_pulse
 10790  1A2A  0873               	movf	??_OW_reset_pulse,w
 10791  1A2B  00F4               	movwf	OW_reset_pulse@presence_detect
 10792                           
 10793                           ;1wire.c: 127: _delay((unsigned long)((205)*(16000000/4000000.0)));
 10794  1A2C  3075               	movlw	117
 10795  1A2D  00F3               	movwf	??_OW_reset_pulse
 10796  1A2E                     u10347:	
 10797  1A2E  3200               	nop2
 10798  1A2F  3200               	nop2
 10799  1A30  0BF3               	decfsz	??_OW_reset_pulse,f
 10800  1A31  2A2E               	goto	u10347
 10801                           
 10802                           ;1wire.c: 128: _delay((unsigned long)((205)*(16000000/4000000.0)));
 10803  1A32  3075               	movlw	117
 10804  1A33  00F3               	movwf	??_OW_reset_pulse
 10805  1A34                     u10357:	
 10806  1A34  3200               	nop2
 10807  1A35  3200               	nop2
 10808  1A36  0BF3               	decfsz	??_OW_reset_pulse,f
 10809  1A37  2A34               	goto	u10357
 10810                           
 10811                           ;1wire.c: 130: drive_OW_high();
 10812  1A38  31A6  2600         	fcall	_drive_OW_high
 10813                           
 10814                           ;1wire.c: 132: return presence_detect;
 10815  1A3A  0874               	movf	OW_reset_pulse@presence_detect,w
 10816  1A3B  0008               	return
 10817  1A3C                     __end_of_OW_reset_pulse:	
 10818                           
 10819                           	psect	text14
 10820  265C                     __ptext14:	
 10821 ;; *************** function _read_OW *****************
 10822 ;; Defined at:
 10823 ;;		line 89 in file "lib1wire/1wire.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;		None
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;  read_data       1    2[COMMON] unsigned char 
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  1    wreg      unsigned char 
 10830 ;; Registers used:
 10831 ;;		wreg, status,2
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10841 ;;Total ram usage:        1 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; Hardware stack levels required when called:    2
 10844 ;; This function calls:
 10845 ;;		Nothing
 10846 ;; This function is called by:
 10847 ;;		_OW_reset_pulse
 10848 ;;		_OW_read_bit
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           
 10853                           ;psect for function _read_OW
 10854  265C                     _read_OW:	
 10855                           
 10856                           ;1wire.c: 91: unsigned char read_data = 0;
 10857                           
 10858                           ;incstack = 0
 10859                           ; Regs used in _read_OW: [wreg+status,2]
 10860  265C  01F2               	clrf	read_OW@read_data
 10861                           
 10862                           ;1wire.c: 93: LATA5 = 1;
 10863  265D  0022               	movlb	2	; select bank2
 10864  265E  168C               	bsf	12,5	;volatile
 10865                           
 10866                           ;1wire.c: 95: if (1 == RA5)
 10867  265F  0020               	movlb	0	; select bank0
 10868  2660  1E8C               	btfss	12,5	;volatile
 10869  2661  2E65               	goto	l4713
 10870                           
 10871                           ;1wire.c: 96: read_data = 1;
 10872  2662  01F2               	clrf	read_OW@read_data
 10873  2663  0AF2               	incf	read_OW@read_data,f
 10874  2664  2E66               	goto	l4715
 10875  2665                     l4713:	
 10876                           
 10877                           ;1wire.c: 97: else
 10878                           ;1wire.c: 98: read_data = 0;
 10879  2665  01F2               	clrf	read_OW@read_data
 10880  2666                     l4715:	
 10881                           
 10882                           ;1wire.c: 100: return read_data;
 10883  2666  0872               	movf	read_OW@read_data,w
 10884  2667  0008               	return
 10885  2668                     __end_of_read_OW:	
 10886                           
 10887                           	psect	text15
 10888  2605                     __ptext15:	
 10889 ;; *************** function _drive_OW_low *****************
 10890 ;; Defined at:
 10891 ;;		line 63 in file "lib1wire/1wire.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;		None
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;		None               void
 10898 ;; Registers used:
 10899 ;;		None
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10909 ;;Total ram usage:        0 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:    2
 10912 ;; This function calls:
 10913 ;;		Nothing
 10914 ;; This function is called by:
 10915 ;;		_OW_reset_pulse
 10916 ;;		_OW_write_bit
 10917 ;;		_OW_read_bit
 10918 ;; This function uses a non-reentrant model
 10919 ;;
 10920                           
 10921                           
 10922                           ;psect for function _drive_OW_low
 10923  2605                     _drive_OW_low:	
 10924                           
 10925                           ;1wire.c: 65: TRISA5 = 0;
 10926                           
 10927                           ;incstack = 0
 10928                           ; Regs used in _drive_OW_low: []
 10929  2605  0021               	movlb	1	; select bank1
 10930  2606  128C               	bcf	12,5	;volatile
 10931                           
 10932                           ;1wire.c: 66: LATA5 = 0;
 10933  2607  0022               	movlb	2	; select bank2
 10934  2608  128C               	bcf	12,5	;volatile
 10935  2609  0008               	return
 10936  260A                     __end_of_drive_OW_low:	
 10937                           
 10938                           	psect	text16
 10939  2600                     __ptext16:	
 10940 ;; *************** function _drive_OW_high *****************
 10941 ;; Defined at:
 10942 ;;		line 76 in file "lib1wire/1wire.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;		None
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;		None
 10947 ;; Return value:  Size  Location     Type
 10948 ;;		None               void
 10949 ;; Registers used:
 10950 ;;		None
 10951 ;; Tracked objects:
 10952 ;;		On entry : 0/0
 10953 ;;		On exit  : 0/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10960 ;;Total ram usage:        0 bytes
 10961 ;; Hardware stack levels used:    1
 10962 ;; Hardware stack levels required when called:    2
 10963 ;; This function calls:
 10964 ;;		Nothing
 10965 ;; This function is called by:
 10966 ;;		_OW_reset_pulse
 10967 ;;		_OW_write_bit
 10968 ;;		_OW_read_bit
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972                           
 10973                           ;psect for function _drive_OW_high
 10974  2600                     _drive_OW_high:	
 10975                           
 10976                           ;1wire.c: 78: TRISA5 = 0;
 10977                           
 10978                           ;incstack = 0
 10979                           ; Regs used in _drive_OW_high: []
 10980  2600  0021               	movlb	1	; select bank1
 10981  2601  128C               	bcf	12,5	;volatile
 10982                           
 10983                           ;1wire.c: 79: LATA5 = 1;
 10984  2602  0022               	movlb	2	; select bank2
 10985  2603  168C               	bsf	12,5	;volatile
 10986  2604  0008               	return
 10987  2605                     __end_of_drive_OW_high:	
 10988                           
 10989                           	psect	text17
 10990  1F5E                     __ptext17:	
 10991 ;; *************** function _LCDInit *****************
 10992 ;; Defined at:
 10993 ;;		line 211 in file "liblcd/lcd.c"
 10994 ;; Parameters:    Size  Location     Type
 10995 ;;  style           1    wreg     unsigned char 
 10996 ;; Auto vars:     Size  Location     Type
 10997 ;;  style           1    6[BANK0 ] unsigned char 
 10998 ;;  __i             1    7[BANK0 ] unsigned char 
 10999 ;; Return value:  Size  Location     Type
 11000 ;;		None               void
 11001 ;; Registers used:
 11002 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11009 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11011 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11012 ;;Total ram usage:        4 bytes
 11013 ;; Hardware stack levels used:    1
 11014 ;; Hardware stack levels required when called:    4
 11015 ;; This function calls:
 11016 ;;		_LCDBusyLoop
 11017 ;;		_LCDByte
 11018 ;; This function is called by:
 11019 ;;		_initDrivers
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           
 11024                           ;psect for function _LCDInit
 11025  1F5E                     _LCDInit:	
 11026                           
 11027                           ;incstack = 0
 11028                           ; Regs used in _LCDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11029                           ;LCDInit@style stored from wreg
 11030  1F5E  0020               	movlb	0	; select bank0
 11031  1F5F  00A6               	movwf	LCDInit@style
 11032                           
 11033                           ;lcd.c: 227: _delay((unsigned long)((30)*(16000000/4000.0)));
 11034  1F60  309C               	movlw	156
 11035  1F61  00A5               	movwf	??_LCDInit+1
 11036  1F62  30D7               	movlw	215
 11037  1F63  00A4               	movwf	??_LCDInit
 11038  1F64                     u10367:	
 11039  1F64  0BA4               	decfsz	??_LCDInit,f
 11040  1F65  2F64               	goto	u10367
 11041  1F66  0BA5               	decfsz	??_LCDInit+1,f
 11042  1F67  2F64               	goto	u10367
 11043                           
 11044                           ;lcd.c: 230: TRISA &= (~(0x0F << 0));
 11045  1F68  30F0               	movlw	240
 11046  1F69  0020               	movlb	0	; select bank0
 11047  1F6A  00A4               	movwf	??_LCDInit
 11048  1F6B  0824               	movf	??_LCDInit,w
 11049  1F6C  0021               	movlb	1	; select bank1
 11050  1F6D  058C               	andwf	12,f	;volatile
 11051                           
 11052                           ;lcd.c: 232: TRISAbits.TRISA4 = 0;
 11053  1F6E  120C               	bcf	12,4	;volatile
 11054                           
 11055                           ;lcd.c: 233: TRISBbits.TRISB3 = 0;
 11056  1F6F  118D               	bcf	13,3	;volatile
 11057                           
 11058                           ;lcd.c: 234: TRISBbits.TRISB2 = 0;
 11059  1F70  110D               	bcf	13,2	;volatile
 11060                           
 11061                           ;lcd.c: 236: PORTA &= (~(0x0F << 0));
 11062  1F71  30F0               	movlw	240
 11063  1F72  0020               	movlb	0	; select bank0
 11064  1F73  00A4               	movwf	??_LCDInit
 11065  1F74  0824               	movf	??_LCDInit,w
 11066  1F75  058C               	andwf	12,f	;volatile
 11067                           
 11068                           ;lcd.c: 238: (RA4=0);
 11069  1F76  120C               	bcf	12,4	;volatile
 11070                           
 11071                           ;lcd.c: 239: (RB2=0);
 11072  1F77  110D               	bcf	13,2	;volatile
 11073                           
 11074                           ;lcd.c: 240: (RB3=0);
 11075  1F78  118D               	bcf	13,3	;volatile
 11076                           
 11077                           ;lcd.c: 243: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
 11078  1F79  3200               	nop2	;2 cycle nop
 11079                           
 11080                           ;lcd.c: 245: (RA4=1);
 11081  1F7A  0020               	movlb	0	; select bank0
 11082  1F7B  160C               	bsf	12,4	;volatile
 11083                           
 11084                           ;lcd.c: 246: PORTA |= ((0b00000010) << 0);
 11085  1F7C  148C               	bsf	12,1	;volatile
 11086                           
 11087                           ;lcd.c: 247: _delay((unsigned long)((1)*(16000000/4000000.0)));
 11088  1F7D  3200               	nop2	;2 cycle nop
 11089  1F7E  3200               	nop2	;2 cycle nop
 11090                           
 11091                           ;lcd.c: 248: (RA4=0);
 11092  1F7F  0020               	movlb	0	; select bank0
 11093  1F80  120C               	bcf	12,4	;volatile
 11094                           
 11095                           ;lcd.c: 249: _delay((unsigned long)((1)*(16000000/4000000.0)));
 11096  1F81  3200               	nop2	;2 cycle nop
 11097  1F82  3200               	nop2	;2 cycle nop
 11098                           
 11099                           ;lcd.c: 252: LCDBusyLoop();
 11100  1F83  319E  26C6  319F   	fcall	_LCDBusyLoop
 11101                           
 11102                           ;lcd.c: 257: (LCDByte(0b00101000,0));
 11103  1F86  01F7               	clrf	LCDByte@isdata
 11104  1F87  3028               	movlw	40
 11105  1F88  319B  2375  319F   	fcall	_LCDByte
 11106                           
 11107                           ;lcd.c: 258: (LCDByte(0b00001100 | style,0));
 11108  1F8B  01F7               	clrf	LCDByte@isdata
 11109  1F8C  0020               	movlb	0	; select bank0
 11110  1F8D  0826               	movf	LCDInit@style,w
 11111  1F8E  380C               	iorlw	12
 11112  1F8F  319B  2375  319F   	fcall	_LCDByte
 11113                           
 11114                           ;lcd.c: 261: (LCDByte(0b01000000,0));
 11115  1F92  01F7               	clrf	LCDByte@isdata
 11116  1F93  3040               	movlw	64
 11117  1F94  319B  2375  319F   	fcall	_LCDByte
 11118                           
 11119                           ;lcd.c: 263: uint8_t __i;
 11120                           ;lcd.c: 264: for (__i = 0; __i<sizeof (__cgram); __i++)
 11121  1F97  0020               	movlb	0	; select bank0
 11122  1F98  01A7               	clrf	LCDInit@__i
 11123  1F99                     L3:	
 11124  1F99  3040               	movlw	64
 11125  1F9A  0227               	subwf	LCDInit@__i,w
 11126  1F9B  1803               	btfsc	3,0
 11127  1F9C  0008               	return
 11128                           
 11129                           ;lcd.c: 265: (LCDByte(__cgram[__i],1));
 11130  1F9D  01F7               	clrf	LCDByte@isdata
 11131  1F9E  0AF7               	incf	LCDByte@isdata,f
 11132  1F9F  0827               	movf	LCDInit@__i,w
 11133  1FA0  3EA0               	addlw	(low (___cgram| (0+512)))& (0+255)
 11134  1FA1  0086               	movwf	6
 11135  1FA2  3002               	movlw	2	; select bank5/6
 11136  1FA3  0087               	movwf	7
 11137  1FA4  0801               	movf	1,w
 11138  1FA5  319B  2375  319F   	fcall	_LCDByte
 11139  1FA8  3001               	movlw	1
 11140  1FA9  0020               	movlb	0	; select bank0
 11141  1FAA  00A4               	movwf	??_LCDInit
 11142  1FAB  0824               	movf	??_LCDInit,w
 11143  1FAC  07A7               	addwf	LCDInit@__i,f
 11144  1FAD  2F99               	goto	L3
 11145  1FAE                     __end_of_LCDInit:	
 11146                           
 11147                           	psect	text18
 11148  1E7F                     __ptext18:	
 11149 ;; *************** function _handleUARTInput *****************
 11150 ;; Defined at:
 11151 ;;		line 91 in file "main.c"
 11152 ;; Parameters:    Size  Location     Type
 11153 ;;		None
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;  c               1   30[BANK1 ] unsigned char 
 11156 ;;  hadNL           1   29[BANK1 ] unsigned char 
 11157 ;; Return value:  Size  Location     Type
 11158 ;;		None               void
 11159 ;; Registers used:
 11160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11161 ;; Tracked objects:
 11162 ;;		On entry : 0/0
 11163 ;;		On exit  : 0/0
 11164 ;;		Unchanged: 0/0
 11165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11167 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11168 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11169 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11170 ;;Total ram usage:        3 bytes
 11171 ;; Hardware stack levels used:    1
 11172 ;; Hardware stack levels required when called:    8
 11173 ;; This function calls:
 11174 ;;		_getch
 11175 ;;		_memset
 11176 ;;		_processCommand
 11177 ;;		_putch
 11178 ;; This function is called by:
 11179 ;;		_main
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           
 11184                           ;psect for function _handleUARTInput
 11185  1E7F                     _handleUARTInput:	
 11186                           
 11187                           ;main.c: 93: static uint8_t i = 0;
 11188                           ;main.c: 95: bool hadNL = 0;
 11189                           
 11190                           ;incstack = 0
 11191                           ; Regs used in _handleUARTInput: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11192  1E7F  0021               	movlb	1	; select bank1
 11193  1E80  01BD               	clrf	handleUARTInput@hadNL^(0+128)
 11194                           
 11195                           ;main.c: 96: while (eusartRxCount > 0)
 11196  1E81  2E93               	goto	l7811
 11197  1E82                     l7807:	
 11198                           ;main.c: 105: }
 11199                           
 11200                           ;main.c: 104: break;
 11201                           
 11202                           
 11203                           ;main.c: 106: else
 11204                           ;main.c: 107: {
 11205                           ;main.c: 108: buf[i++] = c;
 11206  1E82  083E               	movf	handleUARTInput@c^(0+128),w
 11207  1E83  0020               	movlb	0	; select bank0
 11208  1E84  00EF               	movwf	??_handleUARTInput
 11209  1E85  0022               	movlb	2	; select bank2
 11210  1E86  085A               	movf	handleUARTInput@i^(0+256),w
 11211  1E87  3EB1               	addlw	(low (_buf| (0+256)))& (0+255)
 11212  1E88  0086               	movwf	6
 11213  1E89  3001               	movlw	1	; select bank3/4
 11214  1E8A  0087               	movwf	7
 11215  1E8B  0020               	movlb	0	; select bank0
 11216  1E8C  086F               	movf	??_handleUARTInput,w
 11217  1E8D  0081               	movwf	1
 11218  1E8E  3001               	movlw	1
 11219  1E8F  00EF               	movwf	??_handleUARTInput
 11220  1E90  086F               	movf	??_handleUARTInput,w
 11221  1E91  0022               	movlb	2	; select bank2
 11222  1E92  07DA               	addwf	handleUARTInput@i^(0+256),f
 11223  1E93                     l7811:	
 11224  1E93  0021               	movlb	1	; select bank1
 11225  1E94  0864               	movf	_eusartRxCount^(0+128),w	;volatile
 11226  1E95  1903               	btfsc	3,2
 11227  1E96  2EAF               	goto	l7813
 11228                           
 11229                           ;main.c: 97: {
 11230                           ;main.c: 98: char c = getch();
 11231  1E97  3190  2000  319E   	fcall	_getch
 11232  1E9A  0020               	movlb	0	; select bank0
 11233  1E9B  00EF               	movwf	??_handleUARTInput
 11234  1E9C  086F               	movf	??_handleUARTInput,w
 11235  1E9D  0021               	movlb	1	; select bank1
 11236  1E9E  00BE               	movwf	handleUARTInput@c^(0+128)
 11237                           
 11238                           ;main.c: 99: putch(c);
 11239  1E9F  083E               	movf	handleUARTInput@c^(0+128),w
 11240  1EA0  31A5  25FB  319E   	fcall	_putch
 11241                           
 11242                           ;main.c: 100: if (c == '\r')
 11243  1EA3  300D               	movlw	13
 11244  1EA4  0021               	movlb	1	; select bank1
 11245  1EA5  063E               	xorwf	handleUARTInput@c^(0+128),w
 11246  1EA6  1D03               	btfss	3,2
 11247  1EA7  2E82               	goto	l7807
 11248                           
 11249                           ;main.c: 101: {
 11250                           ;main.c: 102: putch('\n');
 11251  1EA8  300A               	movlw	10
 11252  1EA9  31A5  25FB  319E   	fcall	_putch
 11253                           
 11254                           ;main.c: 103: hadNL = 1;
 11255  1EAC  0021               	movlb	1	; select bank1
 11256  1EAD  01BD               	clrf	handleUARTInput@hadNL^(0+128)
 11257  1EAE  0ABD               	incf	handleUARTInput@hadNL^(0+128),f
 11258  1EAF                     l7813:	
 11259                           
 11260                           ;main.c: 109: }
 11261                           ;main.c: 110: }
 11262                           ;main.c: 111: if (hadNL)
 11263  1EAF  083D               	movf	handleUARTInput@hadNL^(0+128),w
 11264  1EB0  1903               	btfsc	3,2
 11265  1EB1  0008               	return
 11266                           
 11267                           ;main.c: 112: {
 11268                           ;main.c: 113: processCommand(buf);
 11269  1EB2  30B1               	movlw	(low (_buf| (0+256)))& (0+255)
 11270  1EB3  3185  25D5  319E   	fcall	_processCommand
 11271                           
 11272                           ;main.c: 114: i = 0;
 11273  1EB6  0022               	movlb	2	; select bank2
 11274  1EB7  01DA               	clrf	handleUARTInput@i^(0+256)
 11275                           
 11276                           ;main.c: 115: memset(buf, 0, sizeof (buf));
 11277  1EB8  30B1               	movlw	low _buf
 11278  1EB9  00F2               	movwf	memset@p1
 11279  1EBA  3001               	movlw	high _buf
 11280  1EBB  00F3               	movwf	memset@p1+1
 11281  1EBC  3000               	movlw	0
 11282  1EBD  00F4               	movwf	memset@c
 11283  1EBE  00F5               	movwf	memset@c+1
 11284  1EBF  3010               	movlw	16
 11285  1EC0  00F6               	movwf	memset@n
 11286  1EC1  3000               	movlw	0
 11287  1EC2  00F7               	movwf	memset@n+1
 11288  1EC3  31A7  279E         	fcall	_memset
 11289  1EC5  0008               	return
 11290  1EC6                     __end_of_handleUARTInput:	
 11291                           
 11292                           	psect	text19
 11293  05D5                     __ptext19:	
 11294 ;; *************** function _processCommand *****************
 11295 ;; Defined at:
 11296 ;;		line 17 in file "commands.c"
 11297 ;; Parameters:    Size  Location     Type
 11298 ;;  buf             1    wreg     PTR const unsigned char 
 11299 ;;		 -> buf(16), 
 11300 ;; Auto vars:     Size  Location     Type
 11301 ;;  buf             1   28[BANK1 ] PTR const unsigned char 
 11302 ;;		 -> buf(16), 
 11303 ;;  intEnd          1   27[BANK1 ] PTR unsigned char 
 11304 ;;		 -> buf(16), 
 11305 ;;  saveOk          1   18[BANK1 ] unsigned char 
 11306 ;;  curFractLimi    2   25[BANK1 ] int 
 11307 ;;  curIntLimit     2   23[BANK1 ] int 
 11308 ;;  fractLimit      2   21[BANK1 ] int 
 11309 ;;  intLimit        2   19[BANK1 ] int 
 11310 ;;  success         1   17[BANK1 ] unsigned char 
 11311 ;; Return value:  Size  Location     Type
 11312 ;;                  1    wreg      unsigned char 
 11313 ;; Registers used:
 11314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11315 ;; Tracked objects:
 11316 ;;		On entry : 0/0
 11317 ;;		On exit  : 0/0
 11318 ;;		Unchanged: 0/0
 11319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11321 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11322 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11323 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11324 ;;Total ram usage:       14 bytes
 11325 ;; Hardware stack levels used:    1
 11326 ;; Hardware stack levels required when called:    7
 11327 ;; This function calls:
 11328 ;;		_Config_GetBottomLimit
 11329 ;;		_Config_GetUpLimit
 11330 ;;		_Config_SetBottomLimit
 11331 ;;		_Config_SetUpLimit
 11332 ;;		_EEPROM_25AA040A_Dump
 11333 ;;		_clearAllAlarmEvents
 11334 ;;		_printAllAlarmEvents
 11335 ;;		_printf
 11336 ;;		_strlen
 11337 ;;		_strncmp
 11338 ;;		_strtol
 11339 ;; This function is called by:
 11340 ;;		_handleUARTInput
 11341 ;; This function uses a non-reentrant model
 11342 ;;
 11343                           
 11344                           
 11345                           ;psect for function _processCommand
 11346  05D5                     _processCommand:	
 11347                           
 11348                           ;incstack = 0
 11349                           ; Regs used in _processCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11350                           ;processCommand@buf stored from wreg
 11351  05D5  0021               	movlb	1	; select bank1
 11352  05D6  00BC               	movwf	processCommand@buf^(0+128)
 11353                           
 11354                           ;commands.c: 19: bool success = 0;
 11355  05D7  01B1               	clrf	processCommand@success^(0+128)
 11356                           
 11357                           ;commands.c: 20: if (strncmp(buf, "greet", 5) == 0)
 11358  05D8  30AC               	movlw	low (STR_9| (0+32768))
 11359  05D9  00F2               	movwf	strncmp@s2
 11360  05DA  3085               	movlw	high (STR_9| (0+32768))
 11361  05DB  00F3               	movwf	strncmp@s2+1
 11362  05DC  3005               	movlw	5
 11363  05DD  00F4               	movwf	strncmp@len
 11364  05DE  3000               	movlw	0
 11365  05DF  00F5               	movwf	strncmp@len+1
 11366  05E0  083C               	movf	processCommand@buf^(0+128),w
 11367  05E1  319D  2528  3185   	fcall	_strncmp
 11368  05E4  0872               	movf	?_strncmp,w
 11369  05E5  0473               	iorwf	?_strncmp+1,w
 11370  05E6  1D03               	btfss	3,2
 11371  05E7  2DF0               	goto	l7439
 11372                           
 11373                           ;commands.c: 21: {
 11374                           ;commands.c: 22: printf("Hello world!\r\n");
 11375  05E8  30D2               	movlw	low (STR_10| (0+32768))
 11376  05E9  0020               	movlb	0	; select bank0
 11377  05EA  00B0               	movwf	printf@f
 11378  05EB  3084               	movlw	high (STR_10| (0+32768))
 11379  05EC  00B1               	movwf	printf@f+1
 11380  05ED  3180  2096         	fcall	_printf
 11381                           
 11382                           ;commands.c: 23: }
 11383  05EF  0008               	return
 11384  05F0                     l7439:	
 11385                           
 11386                           ;commands.c: 24: else if (strncmp(buf, "temp", 4) == 0)
 11387  05F0  30BD               	movlw	low (STR_11| (0+32768))
 11388  05F1  00F2               	movwf	strncmp@s2
 11389  05F2  3085               	movlw	high (STR_11| (0+32768))
 11390  05F3  00F3               	movwf	strncmp@s2+1
 11391  05F4  3004               	movlw	4
 11392  05F5  00F4               	movwf	strncmp@len
 11393  05F6  3000               	movlw	0
 11394  05F7  00F5               	movwf	strncmp@len+1
 11395  05F8  0021               	movlb	1	; select bank1
 11396  05F9  083C               	movf	processCommand@buf^(0+128),w
 11397  05FA  319D  2528  3185   	fcall	_strncmp
 11398  05FD  0872               	movf	?_strncmp,w
 11399  05FE  0473               	iorwf	?_strncmp+1,w
 11400  05FF  1D03               	btfss	3,2
 11401  0600  2E1A               	goto	l7443
 11402                           
 11403                           ;commands.c: 25: {
 11404                           ;commands.c: 26: printf("Temperature: %d.%d C\r\n", CurTempInt, CurTempFract);
 11405  0601  3002               	movlw	low (STR_12| (0+32768))
 11406  0602  0020               	movlb	0	; select bank0
 11407  0603  00B0               	movwf	printf@f
 11408  0604  3084               	movlw	high (STR_12| (0+32768))
 11409  0605  00B1               	movwf	printf@f+1
 11410  0606  0021               	movlb	1	; select bank1
 11411  0607  085F               	movf	(_CurTempInt+1)^(0+128),w
 11412  0608  0020               	movlb	0	; select bank0
 11413  0609  00B3               	movwf	?_printf+3
 11414  060A  0021               	movlb	1	; select bank1
 11415  060B  085E               	movf	_CurTempInt^(0+128),w
 11416  060C  0020               	movlb	0	; select bank0
 11417  060D  00B2               	movwf	?_printf+2
 11418  060E  0021               	movlb	1	; select bank1
 11419  060F  0860               	movf	_CurTempFract^(0+128),w
 11420  0610  0020               	movlb	0	; select bank0
 11421  0611  00ED               	movwf	??_processCommand
 11422  0612  01EE               	clrf	??_processCommand+1
 11423  0613  086D               	movf	??_processCommand,w
 11424  0614  00B4               	movwf	?_printf+4
 11425  0615  086E               	movf	??_processCommand+1,w
 11426  0616  00B5               	movwf	?_printf+5
 11427  0617  3180  2096         	fcall	_printf
 11428                           
 11429                           ;commands.c: 27: }
 11430  0619  0008               	return
 11431  061A                     l7443:	
 11432                           
 11433                           ;commands.c: 28: else if ( (*buf == 'u' || *buf == 'b') &&
 11434                           ;commands.c: 29: strncmp(buf + 1, "limit", 5) == 0)
 11435  061A  0021               	movlb	1	; select bank1
 11436  061B  083C               	movf	processCommand@buf^(0+128),w
 11437  061C  0086               	movwf	6
 11438  061D  3001               	movlw	1	; select bank2/3
 11439  061E  0087               	movwf	7
 11440  061F  3075               	movlw	117
 11441  0620  0601               	xorwf	1,w
 11442  0621  1903               	btfsc	3,2
 11443  0622  2E2B               	goto	l7447
 11444  0623  083C               	movf	processCommand@buf^(0+128),w
 11445  0624  0086               	movwf	6
 11446  0625  3001               	movlw	1	; select bank2/3
 11447  0626  0087               	movwf	7
 11448  0627  3062               	movlw	98
 11449  0628  0601               	xorwf	1,w
 11450  0629  1D03               	btfss	3,2
 11451  062A  2F6A               	goto	l7501
 11452  062B                     l7447:	
 11453  062B  30B2               	movlw	low (STR_13| (0+32768))
 11454  062C  00F2               	movwf	strncmp@s2
 11455  062D  3085               	movlw	high (STR_13| (0+32768))
 11456  062E  00F3               	movwf	strncmp@s2+1
 11457  062F  3005               	movlw	5
 11458  0630  00F4               	movwf	strncmp@len
 11459  0631  3000               	movlw	0
 11460  0632  00F5               	movwf	strncmp@len+1
 11461  0633  083C               	movf	processCommand@buf^(0+128),w
 11462  0634  3E01               	addlw	1
 11463  0635  319D  2528  3185   	fcall	_strncmp
 11464  0638  0872               	movf	?_strncmp,w
 11465  0639  0473               	iorwf	?_strncmp+1,w
 11466  063A  1D03               	btfss	3,2
 11467  063B  2F6A               	goto	l7501
 11468                           
 11469                           ;commands.c: 30: {
 11470                           ;commands.c: 31: int16_t curIntLimit, curFractLimit;
 11471                           ;commands.c: 33: int16_t intLimit = 0;
 11472  063C  0021               	movlb	1	; select bank1
 11473  063D  01B3               	clrf	processCommand@intLimit^(0+128)
 11474  063E  01B4               	clrf	(processCommand@intLimit+1)^(0+128)
 11475                           
 11476                           ;commands.c: 34: int16_t fractLimit = 0;
 11477  063F  01B5               	clrf	processCommand@fractLimit^(0+128)
 11478  0640  01B6               	clrf	(processCommand@fractLimit+1)^(0+128)
 11479                           
 11480                           ;commands.c: 37: if (strlen(buf) > 8 && buf[6] == ' ' && (((buf[7]) >= '0' && (buf[7]) <
      +                          = '9') || buf[7] == '-'))
 11481  0641  083C               	movf	processCommand@buf^(0+128),w
 11482  0642  3199  219B  3185   	fcall	_strlen
 11483  0645  3000               	movlw	0
 11484  0646  0273               	subwf	?_strlen+1,w
 11485  0647  3009               	movlw	9
 11486  0648  1903               	skipnz
 11487  0649  0272               	subwf	?_strlen,w
 11488  064A  1C03               	skipc
 11489  064B  2F1E               	goto	l7487
 11490  064C  0021               	movlb	1	; select bank1
 11491  064D  083C               	movf	processCommand@buf^(0+128),w
 11492  064E  3E06               	addlw	6
 11493  064F  0086               	movwf	6
 11494  0650  3001               	movlw	1	; select bank2/3
 11495  0651  0087               	movwf	7
 11496  0652  3020               	movlw	32
 11497  0653  0601               	xorwf	1,w
 11498  0654  1D03               	btfss	3,2
 11499  0655  2F1E               	goto	l7487
 11500  0656  083C               	movf	processCommand@buf^(0+128),w
 11501  0657  3E07               	addlw	7
 11502  0658  0086               	movwf	6
 11503  0659  3001               	movlw	1	; select bank2/3
 11504  065A  0087               	movwf	7
 11505  065B  3030               	movlw	48
 11506  065C  0201               	subwf	1,w
 11507  065D  1C03               	skipc
 11508  065E  2E68               	goto	l7459
 11509  065F  083C               	movf	processCommand@buf^(0+128),w
 11510  0660  3E07               	addlw	7
 11511  0661  0086               	movwf	6
 11512  0662  3001               	movlw	1	; select bank2/3
 11513  0663  0087               	movwf	7
 11514  0664  303A               	movlw	58
 11515  0665  0201               	subwf	1,w
 11516  0666  1C03               	skipc
 11517  0667  2E71               	goto	l7461
 11518  0668                     l7459:	
 11519  0668  083C               	movf	processCommand@buf^(0+128),w
 11520  0669  3E07               	addlw	7
 11521  066A  0086               	movwf	6
 11522  066B  3001               	movlw	1	; select bank2/3
 11523  066C  0087               	movwf	7
 11524  066D  302D               	movlw	45
 11525  066E  0601               	xorwf	1,w
 11526  066F  1D03               	btfss	3,2
 11527  0670  2F1E               	goto	l7487
 11528  0671                     l7461:	
 11529                           
 11530                           ;commands.c: 38: {
 11531                           ;commands.c: 39: bool saveOk = 0;
 11532  0671  01B2               	clrf	processCommand@saveOk^(0+128)
 11533                           
 11534                           ;commands.c: 40: char* intEnd;
 11535                           ;commands.c: 41: intLimit = (int) strtol(buf + 7, &intEnd, 10);
 11536  0672  30BB               	movlw	(low (processCommand@intEnd| 0))& (0+255)
 11537  0673  0020               	movlb	0	; select bank0
 11538  0674  00ED               	movwf	??_processCommand
 11539  0675  086D               	movf	??_processCommand,w
 11540  0676  00A4               	movwf	strtol@endptr
 11541  0677  300A               	movlw	10
 11542  0678  00A5               	movwf	strtol@base
 11543  0679  3000               	movlw	0
 11544  067A  00A6               	movwf	strtol@base+1
 11545  067B  0021               	movlb	1	; select bank1
 11546  067C  083C               	movf	processCommand@buf^(0+128),w
 11547  067D  3E07               	addlw	7
 11548  067E  3189  2106  3185   	fcall	_strtol
 11549  0681  0020               	movlb	0	; select bank0
 11550  0682  0825               	movf	?_strtol+1,w
 11551  0683  0021               	movlb	1	; select bank1
 11552  0684  00B4               	movwf	(processCommand@intLimit+1)^(0+128)
 11553  0685  0020               	movlb	0	; select bank0
 11554  0686  0824               	movf	?_strtol,w
 11555  0687  0021               	movlb	1	; select bank1
 11556  0688  00B3               	movwf	processCommand@intLimit^(0+128)
 11557                           
 11558                           ;commands.c: 42: fractLimit = 0;
 11559  0689  01B5               	clrf	processCommand@fractLimit^(0+128)
 11560  068A  01B6               	clrf	(processCommand@fractLimit+1)^(0+128)
 11561                           
 11562                           ;commands.c: 43: if (*intEnd == '.' && *(intEnd + 1) != '\0')
 11563  068B  083B               	movf	processCommand@intEnd^(0+128),w
 11564  068C  0086               	movwf	6
 11565  068D  3001               	movlw	1	; select bank2/3
 11566  068E  0087               	movwf	7
 11567  068F  302E               	movlw	46
 11568  0690  0601               	xorwf	1,w
 11569  0691  1D03               	btfss	3,2
 11570  0692  2EAE               	goto	l7473
 11571  0693  0A3B               	incf	processCommand@intEnd^(0+128),w
 11572  0694  0086               	movwf	6
 11573  0695  3001               	movlw	1	; select bank2/3
 11574  0696  0087               	movwf	7
 11575  0697  0801               	movf	1,w
 11576  0698  1903               	btfsc	3,2
 11577  0699  2EAE               	goto	l7473
 11578                           
 11579                           ;commands.c: 44: {
 11580                           ;commands.c: 45: fractLimit = (int) strtol(intEnd + 1, (0), 10);
 11581  069A  0020               	movlb	0	; select bank0
 11582  069B  01A4               	clrf	strtol@endptr
 11583  069C  300A               	movlw	10
 11584  069D  00A5               	movwf	strtol@base
 11585  069E  3000               	movlw	0
 11586  069F  00A6               	movwf	strtol@base+1
 11587  06A0  0021               	movlb	1	; select bank1
 11588  06A1  083B               	movf	processCommand@intEnd^(0+128),w
 11589  06A2  3E01               	addlw	1
 11590  06A3  3189  2106  3185   	fcall	_strtol
 11591  06A6  0020               	movlb	0	; select bank0
 11592  06A7  0825               	movf	?_strtol+1,w
 11593  06A8  0021               	movlb	1	; select bank1
 11594  06A9  00B6               	movwf	(processCommand@fractLimit+1)^(0+128)
 11595  06AA  0020               	movlb	0	; select bank0
 11596  06AB  0824               	movf	?_strtol,w
 11597  06AC  0021               	movlb	1	; select bank1
 11598  06AD  00B5               	movwf	processCommand@fractLimit^(0+128)
 11599  06AE                     l7473:	
 11600                           
 11601                           ;commands.c: 46: }
 11602                           ;commands.c: 47: if(*buf == 'u')
 11603  06AE  083C               	movf	processCommand@buf^(0+128),w
 11604  06AF  0086               	movwf	6
 11605  06B0  3001               	movlw	1	; select bank2/3
 11606  06B1  0087               	movwf	7
 11607  06B2  3075               	movlw	117
 11608  06B3  0601               	xorwf	1,w
 11609  06B4  1D03               	btfss	3,2
 11610  06B5  2ED2               	goto	l7477
 11611                           
 11612                           ;commands.c: 48: {
 11613                           ;commands.c: 49: saveOk = Config_SetUpLimit(intLimit, fractLimit);
 11614  06B6  0834               	movf	(processCommand@intLimit+1)^(0+128),w
 11615  06B7  0020               	movlb	0	; select bank0
 11616  06B8  00E8               	movwf	Config_SetUpLimit@intLimit+1
 11617  06B9  0021               	movlb	1	; select bank1
 11618  06BA  0833               	movf	processCommand@intLimit^(0+128),w
 11619  06BB  0020               	movlb	0	; select bank0
 11620  06BC  00E7               	movwf	Config_SetUpLimit@intLimit
 11621  06BD  0021               	movlb	1	; select bank1
 11622  06BE  0836               	movf	(processCommand@fractLimit+1)^(0+128),w
 11623  06BF  0020               	movlb	0	; select bank0
 11624  06C0  00EA               	movwf	Config_SetUpLimit@fractLimit+1
 11625  06C1  0021               	movlb	1	; select bank1
 11626  06C2  0835               	movf	processCommand@fractLimit^(0+128),w
 11627  06C3  0020               	movlb	0	; select bank0
 11628  06C4  00E9               	movwf	Config_SetUpLimit@fractLimit
 11629  06C5  3193  23AF  3185   	fcall	_Config_SetUpLimit
 11630  06C8  0020               	movlb	0	; select bank0
 11631  06C9  00ED               	movwf	??_processCommand
 11632  06CA  086D               	movf	??_processCommand,w
 11633  06CB  0021               	movlb	1	; select bank1
 11634  06CC  00B2               	movwf	processCommand@saveOk^(0+128)
 11635                           
 11636                           ;commands.c: 50: printf("Up limit ");
 11637  06CD  306B               	movlw	low (STR_14| (0+32768))
 11638  06CE  0020               	movlb	0	; select bank0
 11639  06CF  00B0               	movwf	printf@f
 11640  06D0  3085               	movlw	high (STR_14| (0+32768))
 11641  06D1  2EF6               	goto	L4
 11642  06D2                     l7477:	
 11643                           ;commands.c: 51: }
 11644                           
 11645                           
 11646                           ;commands.c: 52: else if(*buf == 'b')
 11647  06D2  0021               	movlb	1	; select bank1
 11648  06D3  083C               	movf	processCommand@buf^(0+128),w
 11649  06D4  0086               	movwf	6
 11650  06D5  3001               	movlw	1	; select bank2/3
 11651  06D6  0087               	movwf	7
 11652  06D7  3062               	movlw	98
 11653  06D8  0601               	xorwf	1,w
 11654  06D9  1D03               	btfss	3,2
 11655  06DA  2EFA               	goto	l7481
 11656                           
 11657                           ;commands.c: 53: {
 11658                           ;commands.c: 54: saveOk = Config_SetBottomLimit(intLimit, fractLimit);
 11659  06DB  0834               	movf	(processCommand@intLimit+1)^(0+128),w
 11660  06DC  0020               	movlb	0	; select bank0
 11661  06DD  00E8               	movwf	Config_SetBottomLimit@intLimit+1
 11662  06DE  0021               	movlb	1	; select bank1
 11663  06DF  0833               	movf	processCommand@intLimit^(0+128),w
 11664  06E0  0020               	movlb	0	; select bank0
 11665  06E1  00E7               	movwf	Config_SetBottomLimit@intLimit
 11666  06E2  0021               	movlb	1	; select bank1
 11667  06E3  0836               	movf	(processCommand@fractLimit+1)^(0+128),w
 11668  06E4  0020               	movlb	0	; select bank0
 11669  06E5  00EA               	movwf	Config_SetBottomLimit@fractLimit+1
 11670  06E6  0021               	movlb	1	; select bank1
 11671  06E7  0835               	movf	processCommand@fractLimit^(0+128),w
 11672  06E8  0020               	movlb	0	; select bank0
 11673  06E9  00E9               	movwf	Config_SetBottomLimit@fractLimit
 11674  06EA  3194  24B7  3185   	fcall	_Config_SetBottomLimit
 11675  06ED  0020               	movlb	0	; select bank0
 11676  06EE  00ED               	movwf	??_processCommand
 11677  06EF  086D               	movf	??_processCommand,w
 11678  06F0  0021               	movlb	1	; select bank1
 11679  06F1  00B2               	movwf	processCommand@saveOk^(0+128)
 11680                           
 11681                           ;commands.c: 55: printf("Bottom limit ");
 11682  06F2  301A               	movlw	low (STR_15| (0+32768))
 11683  06F3  0020               	movlb	0	; select bank0
 11684  06F4  00B0               	movwf	printf@f
 11685  06F5  3085               	movlw	high (STR_15| (0+32768))
 11686  06F6                     L4:	
 11687  06F6  00B1               	movwf	printf@f+1
 11688  06F7  3180  2096  3185   	fcall	_printf
 11689  06FA                     l7481:	
 11690                           
 11691                           ;commands.c: 56: }
 11692                           ;commands.c: 57: if(saveOk)
 11693  06FA  0021               	movlb	1	; select bank1
 11694  06FB  0832               	movf	processCommand@saveOk^(0+128),w
 11695  06FC  1903               	btfsc	3,2
 11696  06FD  2F16               	goto	l7485
 11697                           
 11698                           ;commands.c: 58: {
 11699                           ;commands.c: 59: printf("%d.%d C set\r\n", intLimit, fractLimit);
 11700  06FE  30FE               	movlw	low (STR_16| (0+32768))
 11701  06FF  0020               	movlb	0	; select bank0
 11702  0700  00B0               	movwf	printf@f
 11703  0701  3084               	movlw	high (STR_16| (0+32768))
 11704  0702  00B1               	movwf	printf@f+1
 11705  0703  0021               	movlb	1	; select bank1
 11706  0704  0834               	movf	(processCommand@intLimit+1)^(0+128),w
 11707  0705  0020               	movlb	0	; select bank0
 11708  0706  00B3               	movwf	?_printf+3
 11709  0707  0021               	movlb	1	; select bank1
 11710  0708  0833               	movf	processCommand@intLimit^(0+128),w
 11711  0709  0020               	movlb	0	; select bank0
 11712  070A  00B2               	movwf	?_printf+2
 11713  070B  0021               	movlb	1	; select bank1
 11714  070C  0836               	movf	(processCommand@fractLimit+1)^(0+128),w
 11715  070D  0020               	movlb	0	; select bank0
 11716  070E  00B5               	movwf	?_printf+5
 11717  070F  0021               	movlb	1	; select bank1
 11718  0710  0835               	movf	processCommand@fractLimit^(0+128),w
 11719  0711  0020               	movlb	0	; select bank0
 11720  0712  00B4               	movwf	?_printf+4
 11721  0713  3180  2096         	fcall	_printf
 11722                           
 11723                           ;commands.c: 60: }
 11724  0715  0008               	return
 11725  0716                     l7485:	
 11726                           
 11727                           ;commands.c: 61: else
 11728                           ;commands.c: 62: {
 11729                           ;commands.c: 63: printf("invalid\r\n");
 11730  0716  3061               	movlw	low (STR_17| (0+32768))
 11731  0717  0020               	movlb	0	; select bank0
 11732  0718  00B0               	movwf	printf@f
 11733  0719  3085               	movlw	high (STR_17| (0+32768))
 11734  071A  00B1               	movwf	printf@f+1
 11735  071B  3180  2096         	fcall	_printf
 11736                           
 11737                           ;commands.c: 64: }
 11738                           ;commands.c: 65: }
 11739  071D  0008               	return
 11740  071E                     l7487:	
 11741                           
 11742                           ;commands.c: 66: else
 11743                           ;commands.c: 67: {
 11744                           ;commands.c: 68: if(*buf == 'u')
 11745  071E  0021               	movlb	1	; select bank1
 11746  071F  083C               	movf	processCommand@buf^(0+128),w
 11747  0720  0086               	movwf	6
 11748  0721  3001               	movlw	1	; select bank2/3
 11749  0722  0087               	movwf	7
 11750  0723  3075               	movlw	117
 11751  0724  0601               	xorwf	1,w
 11752  0725  1D03               	btfss	3,2
 11753  0726  2F35               	goto	l7493
 11754                           
 11755                           ;commands.c: 69: {
 11756                           ;commands.c: 70: Config_GetUpLimit(&curIntLimit, &curFractLimit);
 11757  0727  30B9               	movlw	low processCommand@curFractLimit
 11758  0728  0020               	movlb	0	; select bank0
 11759  0729  00A7               	movwf	Config_GetUpLimit@p_fractLimit
 11760  072A  3000               	movlw	high processCommand@curFractLimit
 11761  072B  00A8               	movwf	Config_GetUpLimit@p_fractLimit+1
 11762  072C  30B7               	movlw	(low (processCommand@curIntLimit| 0))& (0+255)
 11763  072D  319A  223C  3185   	fcall	_Config_GetUpLimit
 11764                           
 11765                           ;commands.c: 71: printf("Up limit: ");
 11766  0730  3041               	movlw	low (STR_18| (0+32768))
 11767  0731  0020               	movlb	0	; select bank0
 11768  0732  00B0               	movwf	printf@f
 11769  0733  3085               	movlw	high (STR_18| (0+32768))
 11770  0734  2F4E               	goto	L5
 11771  0735                     l7493:	
 11772                           ;commands.c: 72: }
 11773                           
 11774                           
 11775                           ;commands.c: 73: else if(*buf == 'b')
 11776  0735  0021               	movlb	1	; select bank1
 11777  0736  083C               	movf	processCommand@buf^(0+128),w
 11778  0737  0086               	movwf	6
 11779  0738  3001               	movlw	1	; select bank2/3
 11780  0739  0087               	movwf	7
 11781  073A  3062               	movlw	98
 11782  073B  0601               	xorwf	1,w
 11783  073C  1D03               	btfss	3,2
 11784  073D  2F52               	goto	l7499
 11785                           
 11786                           ;commands.c: 74: {
 11787                           ;commands.c: 75: Config_GetBottomLimit(&curIntLimit, &curFractLimit);
 11788  073E  30B7               	movlw	low processCommand@curIntLimit
 11789  073F  0020               	movlb	0	; select bank0
 11790  0740  00A7               	movwf	Config_GetBottomLimit@p_intLimit
 11791  0741  3000               	movlw	high processCommand@curIntLimit
 11792  0742  00A8               	movwf	Config_GetBottomLimit@p_intLimit+1
 11793  0743  30B9               	movlw	low processCommand@curFractLimit
 11794  0744  00A9               	movwf	Config_GetBottomLimit@p_fractLimit
 11795  0745  3000               	movlw	high processCommand@curFractLimit
 11796  0746  00AA               	movwf	Config_GetBottomLimit@p_fractLimit+1
 11797  0747  319A  22A0  3185   	fcall	_Config_GetBottomLimit
 11798                           
 11799                           ;commands.c: 76: printf("Bottom limit: ");
 11800  074A  30E1               	movlw	low (STR_19| (0+32768))
 11801  074B  0020               	movlb	0	; select bank0
 11802  074C  00B0               	movwf	printf@f
 11803  074D  3084               	movlw	high (STR_19| (0+32768))
 11804  074E                     L5:	
 11805  074E  00B1               	movwf	printf@f+1
 11806  074F  3180  2096  3185   	fcall	_printf
 11807  0752                     l7499:	
 11808                           
 11809                           ;commands.c: 77: }
 11810                           ;commands.c: 78: printf("%d.%d C\r\n", curIntLimit, curFractLimit);
 11811  0752  3097               	movlw	low ((STR_47+7)| (0+32768))
 11812  0753  0020               	movlb	0	; select bank0
 11813  0754  00B0               	movwf	printf@f
 11814  0755  3084               	movlw	high ((STR_47+7)| (0+32768))
 11815  0756  00B1               	movwf	printf@f+1
 11816  0757  0021               	movlb	1	; select bank1
 11817  0758  0838               	movf	(processCommand@curIntLimit+1)^(0+128),w
 11818  0759  0020               	movlb	0	; select bank0
 11819  075A  00B3               	movwf	?_printf+3
 11820  075B  0021               	movlb	1	; select bank1
 11821  075C  0837               	movf	processCommand@curIntLimit^(0+128),w
 11822  075D  0020               	movlb	0	; select bank0
 11823  075E  00B2               	movwf	?_printf+2
 11824  075F  0021               	movlb	1	; select bank1
 11825  0760  083A               	movf	(processCommand@curFractLimit+1)^(0+128),w
 11826  0761  0020               	movlb	0	; select bank0
 11827  0762  00B5               	movwf	?_printf+5
 11828  0763  0021               	movlb	1	; select bank1
 11829  0764  0839               	movf	processCommand@curFractLimit^(0+128),w
 11830  0765  0020               	movlb	0	; select bank0
 11831  0766  00B4               	movwf	?_printf+4
 11832  0767  3180  2096         	fcall	_printf
 11833                           
 11834                           ;commands.c: 79: }
 11835                           ;commands.c: 80: }
 11836  0769  0008               	return
 11837  076A                     l7501:	
 11838                           
 11839                           ;commands.c: 81: else if(strncmp(buf, "events", 6) == 0)
 11840  076A  3078               	movlw	low ((STR_22+3)| (0+32768))
 11841  076B  00F2               	movwf	strncmp@s2
 11842  076C  3085               	movlw	high ((STR_22+3)| (0+32768))
 11843  076D  00F3               	movwf	strncmp@s2+1
 11844  076E  3006               	movlw	6
 11845  076F  00F4               	movwf	strncmp@len
 11846  0770  3000               	movlw	0
 11847  0771  00F5               	movwf	strncmp@len+1
 11848  0772  0021               	movlb	1	; select bank1
 11849  0773  083C               	movf	processCommand@buf^(0+128),w
 11850  0774  319D  2528  3185   	fcall	_strncmp
 11851  0777  0872               	movf	?_strncmp,w
 11852  0778  0473               	iorwf	?_strncmp+1,w
 11853  0779  1D03               	btfss	3,2
 11854  077A  2F7E               	goto	l7505
 11855                           
 11856                           ;commands.c: 82: {
 11857                           ;commands.c: 83: printAllAlarmEvents();
 11858  077B  3195  2542         	fcall	_printAllAlarmEvents
 11859                           
 11860                           ;commands.c: 84: }
 11861  077D  0008               	return
 11862  077E                     l7505:	
 11863                           
 11864                           ;commands.c: 85: else if(strncmp(buf, "clrevents", 9) == 0)
 11865  077E  3075               	movlw	low (STR_22| (0+32768))
 11866  077F  00F2               	movwf	strncmp@s2
 11867  0780  3085               	movlw	high (STR_22| (0+32768))
 11868  0781  00F3               	movwf	strncmp@s2+1
 11869  0782  3009               	movlw	9
 11870  0783  00F4               	movwf	strncmp@len
 11871  0784  3000               	movlw	0
 11872  0785  00F5               	movwf	strncmp@len+1
 11873  0786  0021               	movlb	1	; select bank1
 11874  0787  083C               	movf	processCommand@buf^(0+128),w
 11875  0788  319D  2528  3185   	fcall	_strncmp
 11876  078B  0872               	movf	?_strncmp,w
 11877  078C  0473               	iorwf	?_strncmp+1,w
 11878  078D  1D03               	btfss	3,2
 11879  078E  2F9A               	goto	l7509
 11880                           
 11881                           ;commands.c: 86: {
 11882                           ;commands.c: 87: printf("Clearing all events\r\n");
 11883  078F  3019               	movlw	low (STR_23| (0+32768))
 11884  0790  0020               	movlb	0	; select bank0
 11885  0791  00B0               	movwf	printf@f
 11886  0792  3084               	movlw	high (STR_23| (0+32768))
 11887  0793  00B1               	movwf	printf@f+1
 11888  0794  3180  2096  3185   	fcall	_printf
 11889                           
 11890                           ;commands.c: 88: clearAllAlarmEvents();
 11891  0797  319D  256B         	fcall	_clearAllAlarmEvents
 11892                           
 11893                           ;commands.c: 89: }
 11894  0799  0008               	return
 11895  079A                     l7509:	
 11896                           
 11897                           ;commands.c: 90: else if(strncmp(buf, "dump", 4) == 0)
 11898  079A  30C2               	movlw	low (STR_24| (0+32768))
 11899  079B  00F2               	movwf	strncmp@s2
 11900  079C  3085               	movlw	high (STR_24| (0+32768))
 11901  079D  00F3               	movwf	strncmp@s2+1
 11902  079E  3004               	movlw	4
 11903  079F  00F4               	movwf	strncmp@len
 11904  07A0  3000               	movlw	0
 11905  07A1  00F5               	movwf	strncmp@len+1
 11906  07A2  0021               	movlb	1	; select bank1
 11907  07A3  083C               	movf	processCommand@buf^(0+128),w
 11908  07A4  319D  2528  3185   	fcall	_strncmp
 11909  07A7  0872               	movf	?_strncmp,w
 11910  07A8  0473               	iorwf	?_strncmp+1,w
 11911  07A9  1D03               	btfss	3,2
 11912  07AA  2FAE               	goto	l7513
 11913                           
 11914                           ;commands.c: 91: {
 11915                           ;commands.c: 92: EEPROM_25AA040A_Dump();
 11916  07AB  3192  2206         	fcall	_EEPROM_25AA040A_Dump
 11917                           
 11918                           ;commands.c: 93: }
 11919  07AD  0008               	return
 11920  07AE                     l7513:	
 11921                           
 11922                           ;commands.c: 94: else
 11923                           ;commands.c: 95: {
 11924                           ;commands.c: 96: printf("Unknown cmd: ");
 11925  07AE  300C               	movlw	low (STR_25| (0+32768))
 11926  07AF  0020               	movlb	0	; select bank0
 11927  07B0  00B0               	movwf	printf@f
 11928  07B1  3085               	movlw	high (STR_25| (0+32768))
 11929  07B2  00B1               	movwf	printf@f+1
 11930  07B3  3180  2096  3185   	fcall	_printf
 11931                           
 11932                           ;commands.c: 97: printf("%s\r\n", buf);
 11933  07B6  30B8               	movlw	low (STR_26| (0+32768))
 11934  07B7  0020               	movlb	0	; select bank0
 11935  07B8  00B0               	movwf	printf@f
 11936  07B9  3085               	movlw	high (STR_26| (0+32768))
 11937  07BA  00B1               	movwf	printf@f+1
 11938  07BB  0021               	movlb	1	; select bank1
 11939  07BC  083C               	movf	processCommand@buf^(0+128),w
 11940  07BD  0020               	movlb	0	; select bank0
 11941  07BE  00B2               	movwf	low ((?_printf| 0+2))
 11942  07BF  3001               	movlw	1
 11943  07C0  00B3               	movwf	(low ((?_printf| 0+2))+1)
 11944  07C1  3180  2096         	fcall	_printf
 11945                           
 11946                           ;commands.c: 98: success = 0;
 11947  07C3  0021               	movlb	1	; select bank1
 11948  07C4  01B1               	clrf	processCommand@success^(0+128)
 11949  07C5  0008               	return
 11950  07C6                     __end_of_processCommand:	
 11951                           ;commands.c: 99: }
 11952                           ;commands.c: 100: return success;
 11953                           ;	Return value of _processCommand is never used
 11954                           
 11955                           
 11956                           	psect	text20
 11957  0906                     __ptext20:	
 11958 ;; *************** function _strtol *****************
 11959 ;; Defined at:
 11960 ;;		line 5 in file "/opt/microchip/xc8/v1.35/sources/common/strtol.c"
 11961 ;; Parameters:    Size  Location     Type
 11962 ;;  s               1    wreg     PTR const unsigned char 
 11963 ;;		 -> buf(16), 
 11964 ;;  endptr          1    4[BANK0 ] PTR PTR unsigned char 
 11965 ;;		 -> processCommand@intEnd(1), NULL(0), 
 11966 ;;  base            2    5[BANK0 ] int 
 11967 ;; Auto vars:     Size  Location     Type
 11968 ;;  s               1   17[BANK0 ] PTR const unsigned char 
 11969 ;;		 -> buf(16), 
 11970 ;;  a               4   13[BANK0 ] long 
 11971 ;;  c               1   18[BANK0 ] unsigned char 
 11972 ;;  sign            1   12[BANK0 ] unsigned char 
 11973 ;; Return value:  Size  Location     Type
 11974 ;;                  4    4[BANK0 ] long 
 11975 ;; Registers used:
 11976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11977 ;; Tracked objects:
 11978 ;;		On entry : 0/0
 11979 ;;		On exit  : 0/0
 11980 ;;		Unchanged: 0/0
 11981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11982 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11983 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11984 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11985 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11986 ;;Total ram usage:       15 bytes
 11987 ;; Hardware stack levels used:    1
 11988 ;; Hardware stack levels required when called:    4
 11989 ;; This function calls:
 11990 ;;		___lmul
 11991 ;;		_isalpha
 11992 ;;		_isdigit
 11993 ;;		_isspace
 11994 ;;		_toupper
 11995 ;; This function is called by:
 11996 ;;		_processCommand
 11997 ;; This function uses a non-reentrant model
 11998 ;;
 11999                           
 12000                           
 12001                           ;psect for function _strtol
 12002  0906                     _strtol:	
 12003                           
 12004                           ;incstack = 0
 12005                           ; Regs used in _strtol: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12006                           ;strtol@s stored from wreg
 12007  0906  0020               	movlb	0	; select bank0
 12008  0907  00B1               	movwf	strtol@s
 12009  0908                     l1717:	
 12010  0908  0020               	movlb	0	; select bank0
 12011  0909  0831               	movf	strtol@s,w
 12012  090A  0086               	movwf	6
 12013  090B  3001               	movlw	1	; select bank2/3
 12014  090C  0087               	movwf	7
 12015  090D  0801               	movf	1,w
 12016  090E  00A8               	movwf	??_strtol
 12017  090F  0828               	movf	??_strtol,w
 12018  0910  00B2               	movwf	strtol@c
 12019  0911  3001               	movlw	1
 12020  0912  00A8               	movwf	??_strtol
 12021  0913  0828               	movf	??_strtol,w
 12022  0914  07B1               	addwf	strtol@s,f
 12023  0915  0832               	movf	strtol@c,w
 12024  0916  31A7  2715  3189   	fcall	_isspace
 12025  0919  1C03               	btfss	3,0
 12026  091A  291D               	goto	l7199
 12027  091B  0020               	movlb	0	; select bank0
 12028  091C  2908               	goto	l1717
 12029  091D                     l7199:	
 12030  091D  3000               	movlw	0
 12031  091E  0020               	movlb	0	; select bank0
 12032  091F  00B0               	movwf	strtol@a+3
 12033  0920  3000               	movlw	0
 12034  0921  00AF               	movwf	strtol@a+2
 12035  0922  3000               	movlw	0
 12036  0923  00AE               	movwf	strtol@a+1
 12037  0924  3000               	movlw	0
 12038  0925  00AD               	movwf	strtol@a
 12039  0926  01AC               	clrf	strtol@sign
 12040  0927  302D               	movlw	45
 12041  0928  0632               	xorwf	strtol@c,w
 12042  0929  1D03               	btfss	3,2
 12043  092A  292E               	goto	l7211
 12044  092B  01AC               	clrf	strtol@sign
 12045  092C  0AAC               	incf	strtol@sign,f
 12046  092D  2932               	goto	l7213
 12047  092E                     l7211:	
 12048  092E  302B               	movlw	43
 12049  092F  0632               	xorwf	strtol@c,w
 12050  0930  1D03               	btfss	3,2
 12051  0931  293E               	goto	l7217
 12052  0932                     l7213:	
 12053  0932  0831               	movf	strtol@s,w
 12054  0933  0086               	movwf	6
 12055  0934  3001               	movlw	1	; select bank2/3
 12056  0935  0087               	movwf	7
 12057  0936  0801               	movf	1,w
 12058  0937  00A8               	movwf	??_strtol
 12059  0938  0828               	movf	??_strtol,w
 12060  0939  00B2               	movwf	strtol@c
 12061  093A  3001               	movlw	1
 12062  093B  00A8               	movwf	??_strtol
 12063  093C  0828               	movf	??_strtol,w
 12064  093D  07B1               	addwf	strtol@s,f
 12065  093E                     l7217:	
 12066  093E  3030               	movlw	48
 12067  093F  0632               	xorwf	strtol@c,w
 12068  0940  1D03               	btfss	3,2
 12069  0941  2978               	goto	l7241
 12070  0942  0831               	movf	strtol@s,w
 12071  0943  0086               	movwf	6
 12072  0944  3001               	movlw	1	; select bank2/3
 12073  0945  0087               	movwf	7
 12074  0946  0801               	movf	1,w
 12075  0947  00A8               	movwf	??_strtol
 12076  0948  0828               	movf	??_strtol,w
 12077  0949  00B2               	movwf	strtol@c
 12078  094A  3001               	movlw	1
 12079  094B  00A8               	movwf	??_strtol
 12080  094C  0828               	movf	??_strtol,w
 12081  094D  07B1               	addwf	strtol@s,f
 12082  094E  0825               	movf	strtol@base,w
 12083  094F  0426               	iorwf	strtol@base+1,w
 12084  0950  1903               	btfsc	3,2
 12085  0951  2957               	goto	l7227
 12086  0952  3010               	movlw	16
 12087  0953  0625               	xorwf	strtol@base,w
 12088  0954  0426               	iorwf	strtol@base+1,w
 12089  0955  1D03               	btfss	3,2
 12090  0956  2970               	goto	l7237
 12091  0957                     l7227:	
 12092  0957  3078               	movlw	120
 12093  0958  0632               	xorwf	strtol@c,w
 12094  0959  1903               	btfsc	3,2
 12095  095A  295F               	goto	l7231
 12096  095B  3058               	movlw	88
 12097  095C  0632               	xorwf	strtol@c,w
 12098  095D  1D03               	btfss	3,2
 12099  095E  2970               	goto	l7237
 12100  095F                     l7231:	
 12101  095F  3010               	movlw	16
 12102  0960  00A5               	movwf	strtol@base
 12103  0961  3000               	movlw	0
 12104  0962  00A6               	movwf	strtol@base+1
 12105  0963  0831               	movf	strtol@s,w
 12106  0964  0086               	movwf	6
 12107  0965  3001               	movlw	1	; select bank2/3
 12108  0966  0087               	movwf	7
 12109  0967  0801               	movf	1,w
 12110  0968  00A8               	movwf	??_strtol
 12111  0969  0828               	movf	??_strtol,w
 12112  096A  00B2               	movwf	strtol@c
 12113  096B  3001               	movlw	1
 12114  096C  00A8               	movwf	??_strtol
 12115  096D  0828               	movf	??_strtol,w
 12116  096E  07B1               	addwf	strtol@s,f
 12117  096F  2978               	goto	l7241
 12118  0970                     l7237:	
 12119  0970  0825               	movf	strtol@base,w
 12120  0971  0426               	iorwf	strtol@base+1,w
 12121  0972  1D03               	btfss	3,2
 12122  0973  2978               	goto	l7241
 12123  0974  3008               	movlw	8
 12124  0975  00A5               	movwf	strtol@base
 12125  0976  3000               	movlw	0
 12126  0977  00A6               	movwf	strtol@base+1
 12127  0978                     l7241:	
 12128  0978  0825               	movf	strtol@base,w
 12129  0979  0426               	iorwf	strtol@base+1,w
 12130  097A  1D03               	btfss	3,2
 12131  097B  2980               	goto	l7245
 12132  097C  300A               	movlw	10
 12133  097D  00A5               	movwf	strtol@base
 12134  097E  3000               	movlw	0
 12135  097F  00A6               	movwf	strtol@base+1
 12136  0980                     l7245:	
 12137  0980  0832               	movf	strtol@c,w
 12138  0981  31A7  2703  3189   	fcall	_isalpha
 12139  0984  1C03               	btfss	3,0
 12140  0985  2991               	goto	l7249
 12141  0986  0020               	movlb	0	; select bank0
 12142  0987  0832               	movf	strtol@c,w
 12143  0988  31A6  26C3  3189   	fcall	_toupper
 12144  098B  3EC9               	addlw	201
 12145  098C  0020               	movlb	0	; select bank0
 12146  098D  00A8               	movwf	??_strtol
 12147  098E  0828               	movf	??_strtol,w
 12148  098F  00B2               	movwf	strtol@c
 12149  0990  299B               	goto	l7253
 12150  0991                     l7249:	
 12151  0991  0020               	movlb	0	; select bank0
 12152  0992  0832               	movf	strtol@c,w
 12153  0993  31A6  26A7  3189   	fcall	_isdigit
 12154  0996  1C03               	btfss	3,0
 12155  0997  29DC               	goto	l7263
 12156  0998  3030               	movlw	48
 12157  0999  0020               	movlb	0	; select bank0
 12158  099A  02B2               	subwf	strtol@c,f
 12159  099B                     l7253:	
 12160  099B  0826               	movf	strtol@base+1,w
 12161  099C  3A80               	xorlw	128
 12162  099D  3C80               	sublw	128
 12163  099E  1D03               	skipz
 12164  099F  29A2               	goto	u8725
 12165  09A0  0825               	movf	strtol@base,w
 12166  09A1  0232               	subwf	strtol@c,w
 12167  09A2                     u8725:	
 12168  09A2  1803               	btfsc	3,0
 12169  09A3  29DC               	goto	l7263
 12170  09A4  0020               	movlb	0	; select bank0
 12171  09A5  0832               	movf	strtol@c,w
 12172  09A6  00A8               	movwf	??_strtol
 12173  09A7  01A9               	clrf	??_strtol+1
 12174  09A8  01AA               	clrf	??_strtol+2
 12175  09A9  01AB               	clrf	??_strtol+3
 12176  09AA  0825               	movf	strtol@base,w
 12177  09AB  00F2               	movwf	___lmul@multiplier
 12178  09AC  0826               	movf	strtol@base+1,w
 12179  09AD  00F3               	movwf	___lmul@multiplier+1
 12180  09AE  0D89               	rlf	9,f
 12181  09AF  3B89               	subwfb	9,f
 12182  09B0  0989               	comf	9,f
 12183  09B1  00F4               	movwf	___lmul@multiplier+2
 12184  09B2  00F5               	movwf	___lmul@multiplier+3
 12185  09B3  0830               	movf	strtol@a+3,w
 12186  09B4  00F9               	movwf	___lmul@multiplicand+3
 12187  09B5  082F               	movf	strtol@a+2,w
 12188  09B6  00F8               	movwf	___lmul@multiplicand+2
 12189  09B7  082E               	movf	strtol@a+1,w
 12190  09B8  00F7               	movwf	___lmul@multiplicand+1
 12191  09B9  082D               	movf	strtol@a,w
 12192  09BA  00F6               	movwf	___lmul@multiplicand
 12193  09BB  319A  226E  3189   	fcall	___lmul
 12194  09BE  0872               	movf	?___lmul,w
 12195  09BF  0020               	movlb	0	; select bank0
 12196  09C0  07A8               	addwf	??_strtol,f
 12197  09C1  0873               	movf	?___lmul+1,w
 12198  09C2  3DA9               	addwfc	??_strtol+1,f
 12199  09C3  0874               	movf	?___lmul+2,w
 12200  09C4  3DAA               	addwfc	??_strtol+2,f
 12201  09C5  0875               	movf	?___lmul+3,w
 12202  09C6  3DAB               	addwfc	??_strtol+3,f
 12203  09C7  082B               	movf	??_strtol+3,w
 12204  09C8  00B0               	movwf	strtol@a+3
 12205  09C9  082A               	movf	??_strtol+2,w
 12206  09CA  00AF               	movwf	strtol@a+2
 12207  09CB  0829               	movf	??_strtol+1,w
 12208  09CC  00AE               	movwf	strtol@a+1
 12209  09CD  0828               	movf	??_strtol,w
 12210  09CE  00AD               	movwf	strtol@a
 12211  09CF  0831               	movf	strtol@s,w
 12212  09D0  0086               	movwf	6
 12213  09D1  3001               	movlw	1	; select bank2/3
 12214  09D2  0087               	movwf	7
 12215  09D3  0801               	movf	1,w
 12216  09D4  00A8               	movwf	??_strtol
 12217  09D5  0828               	movf	??_strtol,w
 12218  09D6  00B2               	movwf	strtol@c
 12219  09D7  3001               	movlw	1
 12220  09D8  00A8               	movwf	??_strtol
 12221  09D9  0828               	movf	??_strtol,w
 12222  09DA  07B1               	addwf	strtol@s,f
 12223  09DB  2980               	goto	l7245
 12224  09DC                     l7263:	
 12225  09DC  0020               	movlb	0	; select bank0
 12226  09DD  0824               	movf	strtol@endptr,w
 12227  09DE  1903               	btfsc	3,2
 12228  09DF  29E8               	goto	l7267
 12229  09E0  0831               	movf	strtol@s,w
 12230  09E1  3EFF               	addlw	-1
 12231  09E2  00A8               	movwf	??_strtol
 12232  09E3  0824               	movf	strtol@endptr,w
 12233  09E4  0086               	movwf	6
 12234  09E5  0187               	clrf	7
 12235  09E6  0828               	movf	??_strtol,w
 12236  09E7  0081               	movwf	1
 12237  09E8                     l7267:	
 12238  09E8  082C               	movf	strtol@sign,w
 12239  09E9  1903               	btfsc	3,2
 12240  09EA  29FB               	goto	l7273
 12241  09EB  092D               	comf	strtol@a,w
 12242  09EC  00A4               	movwf	?_strtol
 12243  09ED  092E               	comf	strtol@a+1,w
 12244  09EE  00A5               	movwf	?_strtol+1
 12245  09EF  092F               	comf	strtol@a+2,w
 12246  09F0  00A6               	movwf	?_strtol+2
 12247  09F1  0930               	comf	strtol@a+3,w
 12248  09F2  00A7               	movwf	?_strtol+3
 12249  09F3  0AA4               	incf	?_strtol,f
 12250  09F4  1903               	skipnz
 12251  09F5  0AA5               	incf	?_strtol+1,f
 12252  09F6  1903               	skipnz
 12253  09F7  0AA6               	incf	?_strtol+2,f
 12254  09F8  1903               	skipnz
 12255  09F9  0AA7               	incf	?_strtol+3,f
 12256  09FA  0008               	return
 12257  09FB                     l7273:	
 12258  09FB  0830               	movf	strtol@a+3,w
 12259  09FC  00A7               	movwf	?_strtol+3
 12260  09FD  082F               	movf	strtol@a+2,w
 12261  09FE  00A6               	movwf	?_strtol+2
 12262  09FF  082E               	movf	strtol@a+1,w
 12263  0A00  00A5               	movwf	?_strtol+1
 12264  0A01  082D               	movf	strtol@a,w
 12265  0A02  00A4               	movwf	?_strtol
 12266  0A03  0008               	return
 12267  0A04                     __end_of_strtol:	
 12268                           
 12269                           	psect	text21
 12270  26C3                     __ptext21:	
 12271 ;; *************** function _toupper *****************
 12272 ;; Defined at:
 12273 ;;		line 5 in file "/opt/microchip/xc8/v1.35/sources/common/toupper.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;  c               1    wreg     unsigned char 
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;  c               1    3[COMMON] unsigned char 
 12278 ;; Return value:  Size  Location     Type
 12279 ;;                  1    wreg      unsigned char 
 12280 ;; Registers used:
 12281 ;;		wreg, status,2, status,0
 12282 ;; Tracked objects:
 12283 ;;		On entry : 0/0
 12284 ;;		On exit  : 0/0
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12288 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12289 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12291 ;;Total ram usage:        2 bytes
 12292 ;; Hardware stack levels used:    1
 12293 ;; Hardware stack levels required when called:    2
 12294 ;; This function calls:
 12295 ;;		Nothing
 12296 ;; This function is called by:
 12297 ;;		_strtol
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           
 12302                           ;psect for function _toupper
 12303  26C3                     _toupper:	
 12304                           
 12305                           ;incstack = 0
 12306                           ; Regs used in _toupper: [wreg+status,2+status,0]
 12307                           ;toupper@c stored from wreg
 12308  26C3  00F3               	movwf	toupper@c
 12309  26C4  307B               	movlw	123
 12310  26C5  0273               	subwf	toupper@c,w
 12311  26C6  1803               	skipnc
 12312  26C7  2ED0               	goto	l5143
 12313  26C8  3061               	movlw	97
 12314  26C9  0273               	subwf	toupper@c,w
 12315  26CA  1C03               	skipc
 12316  26CB  2ED0               	goto	l5143
 12317  26CC  30DF               	movlw	223
 12318  26CD  00F2               	movwf	??_toupper
 12319  26CE  0872               	movf	??_toupper,w
 12320  26CF  05F3               	andwf	toupper@c,f
 12321  26D0                     l5143:	
 12322  26D0  0873               	movf	toupper@c,w
 12323  26D1  0008               	return
 12324  26D2                     __end_of_toupper:	
 12325                           
 12326                           	psect	text22
 12327  2715                     __ptext22:	
 12328 ;; *************** function _isspace *****************
 12329 ;; Defined at:
 12330 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/isspace.c"
 12331 ;; Parameters:    Size  Location     Type
 12332 ;;  c               1    wreg     unsigned char 
 12333 ;; Auto vars:     Size  Location     Type
 12334 ;;  c               1    3[COMMON] unsigned char 
 12335 ;; Return value:  Size  Location     Type
 12336 ;;		None               void
 12337 ;; Registers used:
 12338 ;;		wreg, status,2, status,0
 12339 ;; Tracked objects:
 12340 ;;		On entry : 0/0
 12341 ;;		On exit  : 0/0
 12342 ;;		Unchanged: 0/0
 12343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12348 ;;Total ram usage:        2 bytes
 12349 ;; Hardware stack levels used:    1
 12350 ;; Hardware stack levels required when called:    2
 12351 ;; This function calls:
 12352 ;;		Nothing
 12353 ;; This function is called by:
 12354 ;;		_strtol
 12355 ;; This function uses a non-reentrant model
 12356 ;;
 12357                           
 12358                           
 12359                           ;psect for function _isspace
 12360  2715                     _isspace:	
 12361                           
 12362                           ;incstack = 0
 12363                           ; Regs used in _isspace: [wreg+status,2+status,0]
 12364                           ;isspace@c stored from wreg
 12365  2715  00F3               	movwf	isspace@c
 12366  2716  01F2               	clrf	_isspace$1878
 12367  2717  0AF2               	incf	_isspace$1878,f
 12368  2718  3020               	movlw	32
 12369  2719  0673               	xorwf	isspace@c,w
 12370  271A  1903               	btfsc	3,2
 12371  271B  2F25               	goto	l5119
 12372  271C  300E               	movlw	14
 12373  271D  0273               	subwf	isspace@c,w
 12374  271E  1803               	skipnc
 12375  271F  2F24               	goto	l5117
 12376  2720  3009               	movlw	9
 12377  2721  0273               	subwf	isspace@c,w
 12378  2722  1803               	skipnc
 12379  2723  2F25               	goto	l5119
 12380  2724                     l5117:	
 12381  2724  01F2               	clrf	_isspace$1878
 12382  2725                     l5119:	
 12383  2725  0C72               	rrf	_isspace$1878,w
 12384  2726  0008               	return
 12385  2727                     __end_of_isspace:	
 12386                           
 12387                           	psect	text23
 12388  2703                     __ptext23:	
 12389 ;; *************** function _isalpha *****************
 12390 ;; Defined at:
 12391 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/isalpha.c"
 12392 ;; Parameters:    Size  Location     Type
 12393 ;;  c               1    wreg     unsigned char 
 12394 ;; Auto vars:     Size  Location     Type
 12395 ;;  c               1    5[COMMON] unsigned char 
 12396 ;; Return value:  Size  Location     Type
 12397 ;;		None               void
 12398 ;; Registers used:
 12399 ;;		wreg, status,2, status,0, pclath, cstack
 12400 ;; Tracked objects:
 12401 ;;		On entry : 0/0
 12402 ;;		On exit  : 0/0
 12403 ;;		Unchanged: 0/0
 12404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12406 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12409 ;;Total ram usage:        2 bytes
 12410 ;; Hardware stack levels used:    1
 12411 ;; Hardware stack levels required when called:    3
 12412 ;; This function calls:
 12413 ;;		_isupper
 12414 ;; This function is called by:
 12415 ;;		_strtol
 12416 ;; This function uses a non-reentrant model
 12417 ;;
 12418                           
 12419                           
 12420                           ;psect for function _isalpha
 12421  2703                     _isalpha:	
 12422                           
 12423                           ;incstack = 0
 12424                           ; Regs used in _isalpha: [wreg+status,2+status,0+pclath+cstack]
 12425                           ;isalpha@c stored from wreg
 12426  2703  00F5               	movwf	isalpha@c
 12427  2704  01F4               	clrf	_isalpha$1875
 12428  2705  0AF4               	incf	_isalpha$1875,f
 12429  2706  307B               	movlw	123
 12430  2707  0275               	subwf	isalpha@c,w
 12431  2708  1803               	skipnc
 12432  2709  2F0E               	goto	l5129
 12433  270A  3061               	movlw	97
 12434  270B  0275               	subwf	isalpha@c,w
 12435  270C  1803               	skipnc
 12436  270D  2F13               	goto	l5133
 12437  270E                     l5129:	
 12438  270E  0875               	movf	isalpha@c,w
 12439  270F  31A6  26B5         	fcall	_isupper
 12440  2711  1C03               	btfss	3,0
 12441  2712  01F4               	clrf	_isalpha$1875
 12442  2713                     l5133:	
 12443  2713  0C74               	rrf	_isalpha$1875,w
 12444  2714  0008               	return
 12445  2715                     __end_of_isalpha:	
 12446                           
 12447                           	psect	text24
 12448  26B5                     __ptext24:	
 12449 ;; *************** function _isupper *****************
 12450 ;; Defined at:
 12451 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/isupper.c"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;  c               1    wreg     unsigned char 
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;  c               1    3[COMMON] unsigned char 
 12456 ;; Return value:  Size  Location     Type
 12457 ;;		None               void
 12458 ;; Registers used:
 12459 ;;		wreg, status,2, status,0
 12460 ;; Tracked objects:
 12461 ;;		On entry : 0/0
 12462 ;;		On exit  : 0/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12469 ;;Total ram usage:        2 bytes
 12470 ;; Hardware stack levels used:    1
 12471 ;; Hardware stack levels required when called:    2
 12472 ;; This function calls:
 12473 ;;		Nothing
 12474 ;; This function is called by:
 12475 ;;		_isalpha
 12476 ;; This function uses a non-reentrant model
 12477 ;;
 12478                           
 12479                           
 12480                           ;psect for function _isupper
 12481  26B5                     _isupper:	
 12482                           
 12483                           ;incstack = 0
 12484                           ; Regs used in _isupper: [wreg+status,2+status,0]
 12485                           ;isupper@c stored from wreg
 12486  26B5  00F3               	movwf	isupper@c
 12487  26B6  01F2               	clrf	_isupper$1881
 12488  26B7  305B               	movlw	91
 12489  26B8  0273               	subwf	isupper@c,w
 12490  26B9  1803               	skipnc
 12491  26BA  2EC1               	goto	l4865
 12492  26BB  3041               	movlw	65
 12493  26BC  0273               	subwf	isupper@c,w
 12494  26BD  1C03               	skipc
 12495  26BE  2EC1               	goto	l4865
 12496  26BF  01F2               	clrf	_isupper$1881
 12497  26C0  0AF2               	incf	_isupper$1881,f
 12498  26C1                     l4865:	
 12499  26C1  0C72               	rrf	_isupper$1881,w
 12500  26C2  0008               	return
 12501  26C3                     __end_of_isupper:	
 12502                           
 12503                           	psect	text25
 12504  1D28                     __ptext25:	
 12505 ;; *************** function _strncmp *****************
 12506 ;; Defined at:
 12507 ;;		line 4 in file "/opt/microchip/xc8/v1.35/sources/common/strncmp.c"
 12508 ;; Parameters:    Size  Location     Type
 12509 ;;  s1              1    wreg     PTR const unsigned char 
 12510 ;;		 -> buf(16), 
 12511 ;;  s2              2    2[COMMON] PTR const unsigned char 
 12512 ;;		 -> STR_24(5), STR_22(10), STR_21(7), STR_13(6), 
 12513 ;;		 -> STR_11(5), STR_9(6), 
 12514 ;;  len             2    4[COMMON] unsigned int 
 12515 ;; Auto vars:     Size  Location     Type
 12516 ;;  s1              1    8[COMMON] PTR const unsigned char 
 12517 ;;		 -> buf(16), 
 12518 ;; Return value:  Size  Location     Type
 12519 ;;                  2    2[COMMON] int 
 12520 ;; Registers used:
 12521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 12522 ;; Tracked objects:
 12523 ;;		On entry : 0/0
 12524 ;;		On exit  : 0/0
 12525 ;;		Unchanged: 0/0
 12526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12527 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12529 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12530 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12531 ;;Total ram usage:        7 bytes
 12532 ;; Hardware stack levels used:    1
 12533 ;; Hardware stack levels required when called:    2
 12534 ;; This function calls:
 12535 ;;		Nothing
 12536 ;; This function is called by:
 12537 ;;		_processCommand
 12538 ;; This function uses a non-reentrant model
 12539 ;;
 12540                           
 12541                           
 12542                           ;psect for function _strncmp
 12543  1D28                     _strncmp:	
 12544                           
 12545                           ;incstack = 0
 12546                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 12547                           ;strncmp@s1 stored from wreg
 12548  1D28  00F8               	movwf	strncmp@s1
 12549  1D29                     l5281:	
 12550  1D29  3001               	movlw	1
 12551  1D2A  02F4               	subwf	strncmp@len,f
 12552  1D2B  3000               	movlw	0
 12553  1D2C  3BF5               	subwfb	strncmp@len+1,f
 12554  1D2D  0A74               	incf	strncmp@len,w
 12555  1D2E  1903               	btfsc	3,2
 12556  1D2F  0A75               	incf	strncmp@len+1,w
 12557  1D30  1903               	btfsc	3,2
 12558  1D31  2D68               	goto	l5283
 12559  1D32  0878               	movf	strncmp@s1,w
 12560  1D33  0086               	movwf	6
 12561  1D34  3001               	movlw	1	; select bank2/3
 12562  1D35  0087               	movwf	7
 12563  1D36  0801               	movf	1,w
 12564  1D37  1903               	btfsc	3,2
 12565  1D38  2D47               	goto	l5273
 12566  1D39  0872               	movf	strncmp@s2,w
 12567  1D3A  0084               	movwf	4
 12568  1D3B  0873               	movf	strncmp@s2+1,w
 12569  1D3C  0085               	movwf	5
 12570  1D3D  0800               	movf	0,w	;code access
 12571  1D3E  00F6               	movwf	??_strncmp
 12572  1D3F  0878               	movf	strncmp@s1,w
 12573  1D40  0086               	movwf	6
 12574  1D41  3001               	movlw	1	; select bank2/3
 12575  1D42  0087               	movwf	7
 12576  1D43  0801               	movf	1,w
 12577  1D44  0676               	xorwf	??_strncmp,w
 12578  1D45  1903               	skipnz
 12579  1D46  2D5F               	goto	l5277
 12580  1D47                     l5273:	
 12581  1D47  0872               	movf	strncmp@s2,w
 12582  1D48  0084               	movwf	4
 12583  1D49  0873               	movf	strncmp@s2+1,w
 12584  1D4A  0085               	movwf	5
 12585  1D4B  0800               	movf	0,w	;code access
 12586  1D4C  00F6               	movwf	??_strncmp
 12587  1D4D  01F7               	clrf	??_strncmp+1
 12588  1D4E  09F6               	comf	??_strncmp,f
 12589  1D4F  09F7               	comf	??_strncmp+1,f
 12590  1D50  0AF6               	incf	??_strncmp,f
 12591  1D51  1903               	skipnz
 12592  1D52  0AF7               	incf	??_strncmp+1,f
 12593  1D53  0878               	movf	strncmp@s1,w
 12594  1D54  0086               	movwf	6
 12595  1D55  3001               	movlw	1	; select bank2/3
 12596  1D56  0087               	movwf	7
 12597  1D57  0801               	movf	1,w
 12598  1D58  0776               	addwf	??_strncmp,w
 12599  1D59  00F2               	movwf	?_strncmp
 12600  1D5A  0877               	movf	??_strncmp+1,w
 12601  1D5B  1803               	skipnc
 12602  1D5C  0A77               	incf	??_strncmp+1,w
 12603  1D5D  00F3               	movwf	?_strncmp+1
 12604  1D5E  0008               	return
 12605  1D5F                     l5277:	
 12606  1D5F  3001               	movlw	1
 12607  1D60  00F6               	movwf	??_strncmp
 12608  1D61  0876               	movf	??_strncmp,w
 12609  1D62  07F8               	addwf	strncmp@s1,f
 12610  1D63  3001               	movlw	1
 12611  1D64  07F2               	addwf	strncmp@s2,f
 12612  1D65  3000               	movlw	0
 12613  1D66  3DF3               	addwfc	strncmp@s2+1,f
 12614  1D67  2D29               	goto	l5281
 12615  1D68                     l5283:	
 12616  1D68  01F2               	clrf	?_strncmp
 12617  1D69  01F3               	clrf	?_strncmp+1
 12618  1D6A  0008               	return
 12619  1D6B                     __end_of_strncmp:	
 12620                           
 12621                           	psect	text26
 12622  199B                     __ptext26:	
 12623 ;; *************** function _strlen *****************
 12624 ;; Defined at:
 12625 ;;		line 4 in file "/opt/microchip/xc8/v1.35/sources/common/strlen.c"
 12626 ;; Parameters:    Size  Location     Type
 12627 ;;  s               1    wreg     PTR const unsigned char 
 12628 ;;		 -> buf(16), 
 12629 ;; Auto vars:     Size  Location     Type
 12630 ;;  s               1    8[COMMON] PTR const unsigned char 
 12631 ;;		 -> buf(16), 
 12632 ;;  cp              1    9[COMMON] PTR const unsigned char 
 12633 ;;		 -> buf(16), 
 12634 ;; Return value:  Size  Location     Type
 12635 ;;                  2    2[COMMON] unsigned int 
 12636 ;; Registers used:
 12637 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12638 ;; Tracked objects:
 12639 ;;		On entry : 0/0
 12640 ;;		On exit  : 0/0
 12641 ;;		Unchanged: 0/0
 12642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12645 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12646 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12647 ;;Total ram usage:        8 bytes
 12648 ;; Hardware stack levels used:    1
 12649 ;; Hardware stack levels required when called:    2
 12650 ;; This function calls:
 12651 ;;		Nothing
 12652 ;; This function is called by:
 12653 ;;		_processCommand
 12654 ;; This function uses a non-reentrant model
 12655 ;;
 12656                           
 12657                           
 12658                           ;psect for function _strlen
 12659  199B                     _strlen:	
 12660                           
 12661                           ;incstack = 0
 12662                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 12663                           ;strlen@s stored from wreg
 12664  199B  00F8               	movwf	strlen@s
 12665  199C  0878               	movf	strlen@s,w
 12666  199D  00F4               	movwf	??_strlen
 12667  199E  0874               	movf	??_strlen,w
 12668  199F  00F9               	movwf	strlen@cp
 12669  19A0                     l5291:	
 12670  19A0  0879               	movf	strlen@cp,w
 12671  19A1  0086               	movwf	6
 12672  19A2  3001               	movlw	1	; select bank2/3
 12673  19A3  0087               	movwf	7
 12674  19A4  0801               	movf	1,w
 12675  19A5  1903               	btfsc	3,2
 12676  19A6  29AC               	goto	l5293
 12677  19A7  3001               	movlw	1
 12678  19A8  00F4               	movwf	??_strlen
 12679  19A9  0874               	movf	??_strlen,w
 12680  19AA  07F9               	addwf	strlen@cp,f
 12681  19AB  29A0               	goto	l5291
 12682  19AC                     l5293:	
 12683  19AC  0878               	movf	strlen@s,w
 12684  19AD  00F4               	movwf	??_strlen
 12685  19AE  3001               	movlw	1
 12686  19AF  00F5               	movwf	??_strlen+1
 12687  19B0  09F4               	comf	??_strlen,f
 12688  19B1  09F5               	comf	??_strlen+1,f
 12689  19B2  0AF4               	incf	??_strlen,f
 12690  19B3  1903               	skipnz
 12691  19B4  0AF5               	incf	??_strlen+1,f
 12692  19B5  0879               	movf	strlen@cp,w
 12693  19B6  00F6               	movwf	??_strlen+2
 12694  19B7  3001               	movlw	1
 12695  19B8  00F7               	movwf	??_strlen+3
 12696  19B9  0874               	movf	??_strlen,w
 12697  19BA  0776               	addwf	??_strlen+2,w
 12698  19BB  00F2               	movwf	?_strlen
 12699  19BC  0875               	movf	??_strlen+1,w
 12700  19BD  3D77               	addwfc	??_strlen+3,w
 12701  19BE  00F3               	movwf	?_strlen+1
 12702  19BF  0008               	return
 12703  19C0                     __end_of_strlen:	
 12704                           
 12705                           	psect	text27
 12706  1542                     __ptext27:	
 12707 ;; *************** function _printAllAlarmEvents *****************
 12708 ;; Defined at:
 12709 ;;		line 206 in file "alarm.c"
 12710 ;; Parameters:    Size  Location     Type
 12711 ;;		None
 12712 ;; Auto vars:     Size  Location     Type
 12713 ;;  evt            16   60[BANK0 ] volatile struct .
 12714 ;;  i               1   59[BANK0 ] unsigned char 
 12715 ;; Return value:  Size  Location     Type
 12716 ;;		None               void
 12717 ;; Registers used:
 12718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12719 ;; Tracked objects:
 12720 ;;		On entry : 0/0
 12721 ;;		On exit  : 0/0
 12722 ;;		Unchanged: 0/0
 12723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12725 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12726 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12727 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12728 ;;Total ram usage:       22 bytes
 12729 ;; Hardware stack levels used:    1
 12730 ;; Hardware stack levels required when called:    5
 12731 ;; This function calls:
 12732 ;;		_EEPROM_25AA040A_ReadToBuffer
 12733 ;;		_printf
 12734 ;; This function is called by:
 12735 ;;		_processCommand
 12736 ;; This function uses a non-reentrant model
 12737 ;;
 12738                           
 12739                           
 12740                           ;psect for function _printAllAlarmEvents
 12741  1542                     _printAllAlarmEvents:	
 12742                           
 12743                           ;alarm.c: 208: AlarmEvent evt;
 12744                           ;alarm.c: 209: uint8_t i;
 12745                           ;alarm.c: 210: printf("Alarm count: %u\r\n", (uint16_t)(SavedEventCounter & 0xFF));
 12746                           
 12747                           ;incstack = 0
 12748                           ; Regs used in _printAllAlarmEvents: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12749  1542  306D               	movlw	low (STR_52| (0+32768))
 12750  1543  0020               	movlb	0	; select bank0
 12751  1544  00B0               	movwf	printf@f
 12752  1545  3084               	movlw	high (STR_52| (0+32768))
 12753  1546  00B1               	movwf	printf@f+1
 12754  1547  0021               	movlb	1	; select bank1
 12755  1548  0861               	movf	_SavedEventCounter^(0+128),w
 12756  1549  0020               	movlb	0	; select bank0
 12757  154A  00D6               	movwf	??_printAllAlarmEvents
 12758  154B  01D7               	clrf	??_printAllAlarmEvents+1
 12759  154C  0856               	movf	??_printAllAlarmEvents,w
 12760  154D  00B2               	movwf	?_printf+2
 12761  154E  0857               	movf	??_printAllAlarmEvents+1,w
 12762  154F  00B3               	movwf	?_printf+3
 12763  1550  3180  2096  3195   	fcall	_printf
 12764                           
 12765                           ;alarm.c: 211: for(i = 0;i < SavedEventCounter; ++i)
 12766  1553  0020               	movlb	0	; select bank0
 12767  1554  01DB               	clrf	printAllAlarmEvents@i
 12768  1555                     l7299:	
 12769  1555  0021               	movlb	1	; select bank1
 12770  1556  0861               	movf	_SavedEventCounter^(0+128),w
 12771  1557  0020               	movlb	0	; select bank0
 12772  1558  025B               	subwf	printAllAlarmEvents@i,w
 12773  1559  1803               	btfsc	3,0
 12774  155A  0008               	return
 12775                           
 12776                           ;alarm.c: 212: {
 12777                           ;alarm.c: 213: EEPROM_25AA040A_ReadToBuffer(0x0F + 1 + i * sizeof(AlarmEvent),
 12778                           ;alarm.c: 214: (uint8_t*)&evt, sizeof(AlarmEvent));
 12779  155B  085B               	movf	printAllAlarmEvents@i,w
 12780  155C  00D6               	movwf	??_printAllAlarmEvents
 12781  155D  01D7               	clrf	??_printAllAlarmEvents+1
 12782  155E  0ED6               	swapf	??_printAllAlarmEvents,f
 12783  155F  0ED7               	swapf	??_printAllAlarmEvents+1,f
 12784  1560  30F0               	movlw	240
 12785  1561  05D7               	andwf	??_printAllAlarmEvents+1,f
 12786  1562  0856               	movf	??_printAllAlarmEvents,w
 12787  1563  390F               	andlw	15
 12788  1564  04D7               	iorwf	??_printAllAlarmEvents+1,f
 12789  1565  30F0               	movlw	240
 12790  1566  05D6               	andwf	??_printAllAlarmEvents,f
 12791  1567  0856               	movf	??_printAllAlarmEvents,w
 12792  1568  3E10               	addlw	16
 12793  1569  00F3               	movwf	EEPROM_25AA040A_ReadToBuffer@address
 12794  156A  3000               	movlw	0
 12795  156B  3D57               	addwfc	??_printAllAlarmEvents+1,w
 12796  156C  00F4               	movwf	EEPROM_25AA040A_ReadToBuffer@address+1
 12797  156D  305C               	movlw	(low (printAllAlarmEvents@evt| 0))& (0+255)
 12798  156E  00D8               	movwf	??_printAllAlarmEvents+2
 12799  156F  0858               	movf	??_printAllAlarmEvents+2,w
 12800  1570  00F5               	movwf	EEPROM_25AA040A_ReadToBuffer@dst
 12801  1571  3010               	movlw	16
 12802  1572  00F6               	movwf	EEPROM_25AA040A_ReadToBuffer@dataLength
 12803  1573  3000               	movlw	0
 12804  1574  00F7               	movwf	EEPROM_25AA040A_ReadToBuffer@dataLength+1
 12805  1575  319D  25AF  3195   	fcall	_EEPROM_25AA040A_ReadToBuffer
 12806                           
 12807                           ;alarm.c: 215: printf("ALARM %d @ %lu.%u:\r\n", (int)i, evt.Time.Sec, evt.Time.Ms);
 12808  1578  3045               	movlw	low (STR_53| (0+32768))
 12809  1579  0020               	movlb	0	; select bank0
 12810  157A  00B0               	movwf	printf@f
 12811  157B  3084               	movlw	high (STR_53| (0+32768))
 12812  157C  00B1               	movwf	printf@f+1
 12813  157D  085B               	movf	printAllAlarmEvents@i,w
 12814  157E  00D6               	movwf	??_printAllAlarmEvents
 12815  157F  01D7               	clrf	??_printAllAlarmEvents+1
 12816  1580  0856               	movf	??_printAllAlarmEvents,w
 12817  1581  00B2               	movwf	?_printf+2
 12818  1582  0857               	movf	??_printAllAlarmEvents+1,w
 12819  1583  00B3               	movwf	?_printf+3
 12820  1584  085F               	movf	printAllAlarmEvents@evt+3,w	;volatile
 12821  1585  00B7               	movwf	?_printf+7
 12822  1586  085E               	movf	printAllAlarmEvents@evt+2,w	;volatile
 12823  1587  00B6               	movwf	?_printf+6
 12824  1588  085D               	movf	printAllAlarmEvents@evt+1,w	;volatile
 12825  1589  00B5               	movwf	?_printf+5
 12826  158A  085C               	movf	printAllAlarmEvents@evt,w	;volatile
 12827  158B  00B4               	movwf	?_printf+4
 12828  158C  0861               	movf	printAllAlarmEvents@evt+5,w	;volatile
 12829  158D  00B9               	movwf	?_printf+9
 12830  158E  0860               	movf	printAllAlarmEvents@evt+4,w	;volatile
 12831  158F  00B8               	movwf	?_printf+8
 12832  1590  3180  2096  3195   	fcall	_printf
 12833                           
 12834                           ;alarm.c: 216: printf("Temperature: %d.%d C, limit: %d.%d C\r\n", evt.TempInt, evt.TempF
      +                          ract, evt.LimitInt, evt.LimitFract);
 12835  1593  3081               	movlw	low (STR_54| (0+32768))
 12836  1594  0020               	movlb	0	; select bank0
 12837  1595  00B0               	movwf	printf@f
 12838  1596  3083               	movlw	high (STR_54| (0+32768))
 12839  1597  00B1               	movwf	printf@f+1
 12840  1598  0863               	movf	printAllAlarmEvents@evt+7,w	;volatile
 12841  1599  00B3               	movwf	?_printf+3
 12842  159A  0862               	movf	printAllAlarmEvents@evt+6,w	;volatile
 12843  159B  00B2               	movwf	?_printf+2
 12844  159C  0865               	movf	printAllAlarmEvents@evt+9,w	;volatile
 12845  159D  00B5               	movwf	?_printf+5
 12846  159E  0864               	movf	printAllAlarmEvents@evt+8,w	;volatile
 12847  159F  00B4               	movwf	?_printf+4
 12848  15A0  0867               	movf	printAllAlarmEvents@evt+11,w	;volatile
 12849  15A1  00B7               	movwf	?_printf+7
 12850  15A2  0866               	movf	printAllAlarmEvents@evt+10,w	;volatile
 12851  15A3  00B6               	movwf	?_printf+6
 12852  15A4  0869               	movf	printAllAlarmEvents@evt+13,w	;volatile
 12853  15A5  00B9               	movwf	?_printf+9
 12854  15A6  0868               	movf	printAllAlarmEvents@evt+12,w	;volatile
 12855  15A7  00B8               	movwf	?_printf+8
 12856  15A8  3180  2096  3195   	fcall	_printf
 12857                           
 12858                           ;alarm.c: 217: printf("%s\r\n", (evt.Acknowledged ? "Acknowledged" : "NOT acknowledged")
      +                          );
 12859  15AB  0020               	movlb	0	; select bank0
 12860  15AC  086A               	movf	printAllAlarmEvents@evt+14,w	;volatile
 12861  15AD  1D03               	btfss	3,2
 12862  15AE  2DB3               	goto	l7291
 12863  15AF  30A1               	movlw	low (STR_57| (0+32768))
 12864  15B0  00D9               	movwf	_printAllAlarmEvents$1599
 12865  15B1  3084               	movlw	high (STR_57| (0+32768))
 12866  15B2  2DB6               	goto	L6
 12867  15B3                     l7291:	
 12868  15B3  3028               	movlw	low (STR_56| (0+32768))
 12869  15B4  00D9               	movwf	_printAllAlarmEvents$1599
 12870  15B5  3085               	movlw	high (STR_56| (0+32768))
 12871  15B6                     L6:	
 12872  15B6  00DA               	movwf	_printAllAlarmEvents$1599+1
 12873  15B7  30B8               	movlw	low (STR_26| (0+32768))
 12874  15B8  00B0               	movwf	printf@f
 12875  15B9  3085               	movlw	high (STR_26| (0+32768))
 12876  15BA  00B1               	movwf	printf@f+1
 12877  15BB  085A               	movf	_printAllAlarmEvents$1599+1,w
 12878  15BC  00B3               	movwf	(low ((?_printf| 0+2))+1)
 12879  15BD  0859               	movf	_printAllAlarmEvents$1599,w
 12880  15BE  00B2               	movwf	low ((?_printf| 0+2))
 12881  15BF  3180  2096  3195   	fcall	_printf
 12882                           
 12883                           ;alarm.c: 218: printf("\r\n");
 12884  15C2  30DE               	movlw	low ((STR_10+12)| (0+32768))
 12885  15C3  0020               	movlb	0	; select bank0
 12886  15C4  00B0               	movwf	printf@f
 12887  15C5  3084               	movlw	high ((STR_10+12)| (0+32768))
 12888  15C6  00B1               	movwf	printf@f+1
 12889  15C7  3180  2096  3195   	fcall	_printf
 12890  15CA  3001               	movlw	1
 12891  15CB  0020               	movlb	0	; select bank0
 12892  15CC  00D6               	movwf	??_printAllAlarmEvents
 12893  15CD  0856               	movf	??_printAllAlarmEvents,w
 12894  15CE  07DB               	addwf	printAllAlarmEvents@i,f
 12895  15CF  2D55               	goto	l7299
 12896  15D0                     __end_of_printAllAlarmEvents:	
 12897                           
 12898                           	psect	text28
 12899  1D6B                     __ptext28:	
 12900 ;; *************** function _clearAllAlarmEvents *****************
 12901 ;; Defined at:
 12902 ;;		line 225 in file "alarm.c"
 12903 ;; Parameters:    Size  Location     Type
 12904 ;;		None
 12905 ;; Auto vars:     Size  Location     Type
 12906 ;;  nullEvt        16    1[BANK1 ] volatile struct .
 12907 ;;  i               1    0[BANK1 ] unsigned char 
 12908 ;; Return value:  Size  Location     Type
 12909 ;;		None               void
 12910 ;; Registers used:
 12911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12912 ;; Tracked objects:
 12913 ;;		On entry : 0/0
 12914 ;;		On exit  : 0/0
 12915 ;;		Unchanged: 0/0
 12916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12918 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12919 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12920 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12921 ;;Total ram usage:       21 bytes
 12922 ;; Hardware stack levels used:    1
 12923 ;; Hardware stack levels required when called:    6
 12924 ;; This function calls:
 12925 ;;		_EEPROM_25AA040A_WriteBuffer
 12926 ;;		_EEPROM_25AA040A_WriteByte
 12927 ;;		_memset
 12928 ;; This function is called by:
 12929 ;;		_processCommand
 12930 ;; This function uses a non-reentrant model
 12931 ;;
 12932                           
 12933                           
 12934                           ;psect for function _clearAllAlarmEvents
 12935  1D6B                     _clearAllAlarmEvents:	
 12936                           
 12937                           ;alarm.c: 227: AlarmEvent nullEvt;
 12938                           ;alarm.c: 228: memset((void*)&nullEvt, 0, sizeof(AlarmEvent));
 12939                           
 12940                           ;incstack = 0
 12941                           ; Regs used in _clearAllAlarmEvents: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12942  1D6B  30A1               	movlw	low clearAllAlarmEvents@nullEvt
 12943  1D6C  00F2               	movwf	memset@p1
 12944  1D6D  3000               	movlw	high clearAllAlarmEvents@nullEvt
 12945  1D6E  00F3               	movwf	memset@p1+1
 12946  1D6F  3000               	movlw	0
 12947  1D70  00F4               	movwf	memset@c
 12948  1D71  00F5               	movwf	memset@c+1
 12949  1D72  3010               	movlw	16
 12950  1D73  00F6               	movwf	memset@n
 12951  1D74  3000               	movlw	0
 12952  1D75  00F7               	movwf	memset@n+1
 12953  1D76  31A7  279E  319D   	fcall	_memset
 12954                           
 12955                           ;alarm.c: 229: uint8_t i;
 12956                           ;alarm.c: 230: for(i = 0;i < SavedEventCounter; ++i)
 12957  1D79  0021               	movlb	1	; select bank1
 12958  1D7A  01A0               	clrf	clearAllAlarmEvents@i^(0+128)
 12959  1D7B                     l7309:	
 12960  1D7B  0861               	movf	_SavedEventCounter^(0+128),w
 12961  1D7C  0220               	subwf	clearAllAlarmEvents@i^(0+128),w
 12962  1D7D  1803               	btfsc	3,0
 12963  1D7E  2DA4               	goto	l7311
 12964                           
 12965                           ;alarm.c: 231: {
 12966                           ;alarm.c: 232: EEPROM_25AA040A_WriteBuffer(0x0F + 1 + i * sizeof(AlarmEvent),
 12967                           ;alarm.c: 233: (uint8_t*)&nullEvt, sizeof(AlarmEvent));
 12968  1D7F  0820               	movf	clearAllAlarmEvents@i^(0+128),w
 12969  1D80  0020               	movlb	0	; select bank0
 12970  1D81  00E7               	movwf	??_clearAllAlarmEvents
 12971  1D82  01E8               	clrf	??_clearAllAlarmEvents+1
 12972  1D83  0EE7               	swapf	??_clearAllAlarmEvents,f
 12973  1D84  0EE8               	swapf	??_clearAllAlarmEvents+1,f
 12974  1D85  30F0               	movlw	240
 12975  1D86  05E8               	andwf	??_clearAllAlarmEvents+1,f
 12976  1D87  0867               	movf	??_clearAllAlarmEvents,w
 12977  1D88  390F               	andlw	15
 12978  1D89  04E8               	iorwf	??_clearAllAlarmEvents+1,f
 12979  1D8A  30F0               	movlw	240
 12980  1D8B  05E7               	andwf	??_clearAllAlarmEvents,f
 12981  1D8C  0867               	movf	??_clearAllAlarmEvents,w
 12982  1D8D  3E10               	addlw	16
 12983  1D8E  00D6               	movwf	EEPROM_25AA040A_WriteBuffer@address
 12984  1D8F  3000               	movlw	0
 12985  1D90  3D68               	addwfc	??_clearAllAlarmEvents+1,w
 12986  1D91  00D7               	movwf	EEPROM_25AA040A_WriteBuffer@address+1
 12987  1D92  30A1               	movlw	(low (clearAllAlarmEvents@nullEvt| 0))& (0+255)
 12988  1D93  00E9               	movwf	??_clearAllAlarmEvents+2
 12989  1D94  0869               	movf	??_clearAllAlarmEvents+2,w
 12990  1D95  00D8               	movwf	EEPROM_25AA040A_WriteBuffer@data
 12991  1D96  3010               	movlw	16
 12992  1D97  00EA               	movwf	??_clearAllAlarmEvents+3
 12993  1D98  086A               	movf	??_clearAllAlarmEvents+3,w
 12994  1D99  00D9               	movwf	EEPROM_25AA040A_WriteBuffer@dataLength
 12995  1D9A  3197  2724  319D   	fcall	_EEPROM_25AA040A_WriteBuffer
 12996  1D9D  3001               	movlw	1
 12997  1D9E  0020               	movlb	0	; select bank0
 12998  1D9F  00E7               	movwf	??_clearAllAlarmEvents
 12999  1DA0  0867               	movf	??_clearAllAlarmEvents,w
 13000  1DA1  0021               	movlb	1	; select bank1
 13001  1DA2  07A0               	addwf	clearAllAlarmEvents@i^(0+128),f
 13002  1DA3  2D7B               	goto	l7309
 13003  1DA4                     l7311:	
 13004                           
 13005                           ;alarm.c: 234: }
 13006                           ;alarm.c: 235: EEPROM_25AA040A_WriteByte(0x0F, 0);
 13007  1DA4  300F               	movlw	15
 13008  1DA5  0020               	movlb	0	; select bank0
 13009  1DA6  00D6               	movwf	EEPROM_25AA040A_WriteByte@address
 13010  1DA7  3000               	movlw	0
 13011  1DA8  00D7               	movwf	EEPROM_25AA040A_WriteByte@address+1
 13012  1DA9  01D8               	clrf	EEPROM_25AA040A_WriteByte@data
 13013  1DAA  319B  23B0         	fcall	_EEPROM_25AA040A_WriteByte
 13014                           
 13015                           ;alarm.c: 236: SavedEventCounter = 0;
 13016  1DAC  0021               	movlb	1	; select bank1
 13017  1DAD  01E1               	clrf	_SavedEventCounter^(0+128)
 13018  1DAE  0008               	return
 13019  1DAF                     __end_of_clearAllAlarmEvents:	
 13020                           
 13021                           	psect	text29
 13022  279E                     __ptext29:	
 13023 ;; *************** function _memset *****************
 13024 ;; Defined at:
 13025 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/memset.c"
 13026 ;; Parameters:    Size  Location     Type
 13027 ;;  p1              2    2[COMMON] PTR void 
 13028 ;;		 -> clearAllAlarmEvents@nullEvt(16), buf(16), 
 13029 ;;  c               2    4[COMMON] int 
 13030 ;;  n               2    6[COMMON] unsigned int 
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;  p               2    8[COMMON] PTR unsigned char 
 13033 ;;		 -> clearAllAlarmEvents@nullEvt(16), buf(16), 
 13034 ;; Return value:  Size  Location     Type
 13035 ;;                  2    2[COMMON] PTR void 
 13036 ;; Registers used:
 13037 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13038 ;; Tracked objects:
 13039 ;;		On entry : 0/0
 13040 ;;		On exit  : 0/0
 13041 ;;		Unchanged: 0/0
 13042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13043 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13044 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13046 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13047 ;;Total ram usage:        8 bytes
 13048 ;; Hardware stack levels used:    1
 13049 ;; Hardware stack levels required when called:    2
 13050 ;; This function calls:
 13051 ;;		Nothing
 13052 ;; This function is called by:
 13053 ;;		_handleUARTInput
 13054 ;;		_clearAllAlarmEvents
 13055 ;; This function uses a non-reentrant model
 13056 ;;
 13057                           
 13058                           
 13059                           ;psect for function _memset
 13060  279E                     _memset:	
 13061                           
 13062                           ;incstack = 0
 13063                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 13064  279E  0873               	movf	memset@p1+1,w
 13065  279F  00F9               	movwf	memset@p+1
 13066  27A0  0872               	movf	memset@p1,w
 13067  27A1  00F8               	movwf	memset@p
 13068  27A2                     l4945:	
 13069  27A2  3001               	movlw	1
 13070  27A3  02F6               	subwf	memset@n,f
 13071  27A4  3000               	movlw	0
 13072  27A5  3BF7               	subwfb	memset@n+1,f
 13073  27A6  0A76               	incf	memset@n,w
 13074  27A7  1903               	btfsc	3,2
 13075  27A8  0A77               	incf	memset@n+1,w
 13076  27A9  1903               	btfsc	3,2
 13077  27AA  0008               	return
 13078  27AB  0878               	movf	memset@p,w
 13079  27AC  0086               	movwf	6
 13080  27AD  0879               	movf	memset@p+1,w
 13081  27AE  0087               	movwf	7
 13082  27AF  0874               	movf	memset@c,w
 13083  27B0  0081               	movwf	1
 13084  27B1  3001               	movlw	1
 13085  27B2  07F8               	addwf	memset@p,f
 13086  27B3  3000               	movlw	0
 13087  27B4  3DF9               	addwfc	memset@p+1,f
 13088  27B5  2FA2               	goto	l4945
 13089  27B6                     __end_of_memset:	
 13090                           ;	Return value of _memset is never used
 13091                           
 13092                           
 13093                           	psect	text30
 13094  1206                     __ptext30:	
 13095 ;; *************** function _EEPROM_25AA040A_Dump *****************
 13096 ;; Defined at:
 13097 ;;		line 192 in file "25AA040A.c"
 13098 ;; Parameters:    Size  Location     Type
 13099 ;;		None
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;  b               1   56[BANK0 ] unsigned char 
 13102 ;;  i               2   57[BANK0 ] unsigned int 
 13103 ;; Return value:  Size  Location     Type
 13104 ;;		None               void
 13105 ;; Registers used:
 13106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13107 ;; Tracked objects:
 13108 ;;		On entry : 0/0
 13109 ;;		On exit  : 0/0
 13110 ;;		Unchanged: 0/0
 13111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13113 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13114 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13115 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13116 ;;Total ram usage:        5 bytes
 13117 ;; Hardware stack levels used:    1
 13118 ;; Hardware stack levels required when called:    5
 13119 ;; This function calls:
 13120 ;;		_SPI_Exchange8bit
 13121 ;;		_printf
 13122 ;; This function is called by:
 13123 ;;		_processCommand
 13124 ;; This function uses a non-reentrant model
 13125 ;;
 13126                           
 13127                           
 13128                           ;psect for function _EEPROM_25AA040A_Dump
 13129  1206                     _EEPROM_25AA040A_Dump:	
 13130                           
 13131                           ;incstack = 0
 13132                           ; Regs used in _EEPROM_25AA040A_Dump: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13133                           ;25AA040A.c: 194: do { LATC1 = 0; } while(0);
 13134  1206  0022               	movlb	2	; select bank2
 13135  1207  108E               	bcf	14,1	;volatile
 13136                           
 13137                           ;25AA040A.c: 195: SPI_Exchange8bit(EEPROM_READ);
 13138  1208  3003               	movlw	3
 13139  1209  31A6  2628  3192   	fcall	_SPI_Exchange8bit
 13140                           
 13141                           ;25AA040A.c: 196: SPI_Exchange8bit(0);
 13142  120C  3000               	movlw	0
 13143  120D  31A6  2628  3192   	fcall	_SPI_Exchange8bit
 13144                           
 13145                           ;25AA040A.c: 197: uint16_t i;
 13146                           ;25AA040A.c: 198: printf("0x000: ");
 13147  1210  3089               	movlw	low (STR_4| (0+32768))
 13148  1211  0020               	movlb	0	; select bank0
 13149  1212  00B0               	movwf	printf@f
 13150  1213  3085               	movlw	high (STR_4| (0+32768))
 13151  1214  00B1               	movwf	printf@f+1
 13152  1215  3180  2096  3192   	fcall	_printf
 13153                           
 13154                           ;25AA040A.c: 199: for(i = 0;i<=0x1FF;++i)
 13155  1218  0020               	movlb	0	; select bank0
 13156  1219  01D9               	clrf	EEPROM_25AA040A_Dump@i
 13157  121A  01DA               	clrf	EEPROM_25AA040A_Dump@i+1
 13158  121B  3002               	movlw	2
 13159  121C  025A               	subwf	EEPROM_25AA040A_Dump@i+1,w
 13160  121D  3000               	movlw	0
 13161  121E  1903               	skipnz
 13162  121F  0259               	subwf	EEPROM_25AA040A_Dump@i,w
 13163  1220  1803               	btfsc	3,0
 13164  1221  2A62               	goto	l207
 13165  1222                     l7169:	
 13166                           
 13167                           ;25AA040A.c: 200: {
 13168                           ;25AA040A.c: 201: uint8_t b = SPI_Exchange8bit(0);
 13169  1222  3000               	movlw	0
 13170  1223  31A6  2628  3192   	fcall	_SPI_Exchange8bit
 13171  1226  0020               	movlb	0	; select bank0
 13172  1227  00D6               	movwf	??_EEPROM_25AA040A_Dump
 13173  1228  0856               	movf	??_EEPROM_25AA040A_Dump,w
 13174  1229  00D8               	movwf	EEPROM_25AA040A_Dump@b
 13175                           
 13176                           ;25AA040A.c: 202: printf("0x%02x ", (uint16_t)(b & 0xff));
 13177  122A  3091               	movlw	low (STR_5| (0+32768))
 13178  122B  00B0               	movwf	printf@f
 13179  122C  3085               	movlw	high (STR_5| (0+32768))
 13180  122D  00B1               	movwf	printf@f+1
 13181  122E  0858               	movf	EEPROM_25AA040A_Dump@b,w
 13182  122F  00D6               	movwf	??_EEPROM_25AA040A_Dump
 13183  1230  01D7               	clrf	??_EEPROM_25AA040A_Dump+1
 13184  1231  0856               	movf	??_EEPROM_25AA040A_Dump,w
 13185  1232  00B2               	movwf	?_printf+2
 13186  1233  0857               	movf	??_EEPROM_25AA040A_Dump+1,w
 13187  1234  00B3               	movwf	?_printf+3
 13188  1235  3180  2096  3192   	fcall	_printf
 13189                           
 13190                           ;25AA040A.c: 203: if(i % 16 == 15 && i != 0x1FF) printf("\r\n0x%03x: ", (i + 1));
 13191  1238  300F               	movlw	15
 13192  1239  0020               	movlb	0	; select bank0
 13193  123A  0559               	andwf	EEPROM_25AA040A_Dump@i,w
 13194  123B  00D6               	movwf	??_EEPROM_25AA040A_Dump
 13195  123C  3000               	movlw	0
 13196  123D  055A               	andwf	EEPROM_25AA040A_Dump@i+1,w
 13197  123E  00D7               	movwf	??_EEPROM_25AA040A_Dump+1
 13198  123F  300F               	movlw	15
 13199  1240  0656               	xorwf	??_EEPROM_25AA040A_Dump,w
 13200  1241  0457               	iorwf	??_EEPROM_25AA040A_Dump+1,w
 13201  1242  1D03               	btfss	3,2
 13202  1243  2A56               	goto	l7179
 13203  1244  0A59               	incf	EEPROM_25AA040A_Dump@i,w
 13204  1245  1903               	btfsc	3,2
 13205  1246  035A               	decf	EEPROM_25AA040A_Dump@i+1,w
 13206  1247  1903               	btfsc	3,2
 13207  1248  2A56               	goto	l7179
 13208  1249  304C               	movlw	low (STR_6| (0+32768))
 13209  124A  00B0               	movwf	printf@f
 13210  124B  3085               	movlw	high (STR_6| (0+32768))
 13211  124C  00B1               	movwf	printf@f+1
 13212  124D  0859               	movf	EEPROM_25AA040A_Dump@i,w
 13213  124E  3E01               	addlw	1
 13214  124F  00B2               	movwf	?_printf+2
 13215  1250  3000               	movlw	0
 13216  1251  3D5A               	addwfc	EEPROM_25AA040A_Dump@i+1,w
 13217  1252  00B3               	movwf	?_printf+3
 13218  1253  3180  2096  3192   	fcall	_printf
 13219  1256                     l7179:	
 13220  1256  3001               	movlw	1
 13221  1257  0020               	movlb	0	; select bank0
 13222  1258  07D9               	addwf	EEPROM_25AA040A_Dump@i,f
 13223  1259  3000               	movlw	0
 13224  125A  3DDA               	addwfc	EEPROM_25AA040A_Dump@i+1,f
 13225  125B  3002               	movlw	2
 13226  125C  025A               	subwf	EEPROM_25AA040A_Dump@i+1,w
 13227  125D  3000               	movlw	0
 13228  125E  1903               	skipnz
 13229  125F  0259               	subwf	EEPROM_25AA040A_Dump@i,w
 13230  1260  1C03               	skipc
 13231  1261  2A22               	goto	l7169
 13232  1262                     l207:	
 13233                           ;25AA040A.c: 204: }
 13234                           ;25AA040A.c: 205: do { LATC1 = 1; } while(0);
 13235                           
 13236  1262  0022               	movlb	2	; select bank2
 13237  1263  148E               	bsf	14,1	;volatile
 13238  1264  0008               	return
 13239  1265                     __end_of_EEPROM_25AA040A_Dump:	
 13240                           
 13241                           	psect	text31
 13242  1000                     __ptext31:	
 13243 ;; *************** function _getch *****************
 13244 ;; Defined at:
 13245 ;;		line 157 in file "mcc_generated_files/eusart.c"
 13246 ;; Parameters:    Size  Location     Type
 13247 ;;		None
 13248 ;; Auto vars:     Size  Location     Type
 13249 ;;		None
 13250 ;; Return value:  Size  Location     Type
 13251 ;;                  1    wreg      unsigned char 
 13252 ;; Registers used:
 13253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13254 ;; Tracked objects:
 13255 ;;		On entry : 0/0
 13256 ;;		On exit  : 0/0
 13257 ;;		Unchanged: 0/0
 13258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13263 ;;Total ram usage:        0 bytes
 13264 ;; Hardware stack levels used:    1
 13265 ;; Hardware stack levels required when called:    3
 13266 ;; This function calls:
 13267 ;;		_EUSART_Read
 13268 ;; This function is called by:
 13269 ;;		_handleUARTInput
 13270 ;;		_main
 13271 ;; This function uses a non-reentrant model
 13272 ;;
 13273                           
 13274                           
 13275                           ;psect for function _getch
 13276  1000                     _getch:	
 13277                           
 13278                           ;eusart.c: 159: return EUSART_Read();
 13279                           
 13280                           ;incstack = 0
 13281                           ; Regs used in _getch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13282  1000  3198  20CA         	fcall	_EUSART_Read
 13283  1002  0008               	return
 13284  1003                     __end_of_getch:	
 13285                           
 13286                           	psect	text32
 13287  18CA                     __ptext32:	
 13288 ;; *************** function _EUSART_Read *****************
 13289 ;; Defined at:
 13290 ;;		line 113 in file "mcc_generated_files/eusart.c"
 13291 ;; Parameters:    Size  Location     Type
 13292 ;;		None
 13293 ;; Auto vars:     Size  Location     Type
 13294 ;;  readValue       1    3[COMMON] unsigned char 
 13295 ;; Return value:  Size  Location     Type
 13296 ;;                  1    wreg      unsigned char 
 13297 ;; Registers used:
 13298 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13299 ;; Tracked objects:
 13300 ;;		On entry : 0/0
 13301 ;;		On exit  : 0/0
 13302 ;;		Unchanged: 0/0
 13303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13306 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13308 ;;Total ram usage:        2 bytes
 13309 ;; Hardware stack levels used:    1
 13310 ;; Hardware stack levels required when called:    2
 13311 ;; This function calls:
 13312 ;;		Nothing
 13313 ;; This function is called by:
 13314 ;;		_getch
 13315 ;; This function uses a non-reentrant model
 13316 ;;
 13317                           
 13318                           
 13319                           ;psect for function _EUSART_Read
 13320  18CA                     _EUSART_Read:	
 13321                           
 13322                           ;eusart.c: 115: uint8_t readValue = 0;
 13323                           
 13324                           ;incstack = 0
 13325                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 13326  18CA  01F3               	clrf	EUSART_Read@readValue
 13327  18CB                     l5235:	
 13328                           ;eusart.c: 118: {
 13329                           
 13330                           ;eusart.c: 117: while (0 == eusartRxCount)
 13331                           
 13332  18CB  0021               	movlb	1	; select bank1
 13333  18CC  0864               	movf	_eusartRxCount^(0+128),w	;volatile
 13334  18CD  1903               	btfsc	3,2
 13335  18CE  28CB               	goto	l5235
 13336                           
 13337                           ;eusart.c: 119: }
 13338                           ;eusart.c: 121: PIE1bits.RCIE = 0;
 13339  18CF  1291               	bcf	17,5	;volatile
 13340                           
 13341                           ;eusart.c: 123: readValue = eusartRxBuffer[eusartRxTail++];
 13342  18D0  0022               	movlb	2	; select bank2
 13343  18D1  084F               	movf	_eusartRxTail^(0+256),w
 13344  18D2  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 13345  18D3  0086               	movwf	6
 13346  18D4  3002               	movlw	2	; select bank4/5
 13347  18D5  0087               	movwf	7
 13348  18D6  0801               	movf	1,w
 13349  18D7  00F2               	movwf	??_EUSART_Read
 13350  18D8  0872               	movf	??_EUSART_Read,w
 13351  18D9  00F3               	movwf	EUSART_Read@readValue
 13352  18DA  3001               	movlw	1
 13353  18DB  00F2               	movwf	??_EUSART_Read
 13354  18DC  0872               	movf	??_EUSART_Read,w
 13355  18DD  07CF               	addwf	_eusartRxTail^(0+256),f
 13356                           
 13357                           ;eusart.c: 124: if (sizeof (eusartRxBuffer) <= eusartRxTail)
 13358  18DE  3010               	movlw	16
 13359  18DF  024F               	subwf	_eusartRxTail^(0+256),w
 13360  18E0  1803               	btfsc	3,0
 13361                           
 13362                           ;eusart.c: 125: {
 13363                           ;eusart.c: 126: eusartRxTail = 0;
 13364  18E1  01CF               	clrf	_eusartRxTail^(0+256)
 13365                           
 13366                           ;eusart.c: 127: }
 13367                           ;eusart.c: 128: eusartRxCount--;
 13368  18E2  3001               	movlw	1
 13369  18E3  0021               	movlb	1	; select bank1
 13370  18E4  02E4               	subwf	_eusartRxCount^(0+128),f	;volatile
 13371                           
 13372                           ;eusart.c: 129: PIE1bits.RCIE = 1;
 13373  18E5  1691               	bsf	17,5	;volatile
 13374                           
 13375                           ;eusart.c: 131: return readValue;
 13376  18E6  0873               	movf	EUSART_Read@readValue,w
 13377  18E7  0008               	return
 13378  18E8                     __end_of_EUSART_Read:	
 13379                           
 13380                           	psect	text33
 13381  0CB6                     __ptext33:	
 13382 ;; *************** function _handleButtons *****************
 13383 ;; Defined at:
 13384 ;;		line 55 in file "buttons.c"
 13385 ;; Parameters:    Size  Location     Type
 13386 ;;		None
 13387 ;; Auto vars:     Size  Location     Type
 13388 ;;  now             6   22[BANK1 ] volatile struct _SysTime
 13389 ;;  setState        1   21[BANK1 ] unsigned char 
 13390 ;;  upState         1   20[BANK1 ] unsigned char 
 13391 ;;  downState       1   19[BANK1 ] unsigned char 
 13392 ;; Return value:  Size  Location     Type
 13393 ;;		None               void
 13394 ;; Registers used:
 13395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13396 ;; Tracked objects:
 13397 ;;		On entry : 0/0
 13398 ;;		On exit  : 0/0
 13399 ;;		Unchanged: 0/0
 13400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13402 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13403 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13404 ;;      Totals:         0       1      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13405 ;;Total ram usage:       13 bytes
 13406 ;; Hardware stack levels used:    1
 13407 ;; Hardware stack levels required when called:    9
 13408 ;; This function calls:
 13409 ;;		Absolute function
 13410 ;;		_ACKAlarm
 13411 ;;		_LCD_ToggleBacklight
 13412 ;;		_SysTime_DiffMs
 13413 ;;		_SysTime_GetNow
 13414 ;;		__MenuScreen_MoveDown
 13415 ;;		__MenuScreen_MoveUp
 13416 ;;		__MenuScreen_SetRelease
 13417 ;;		__SettingsScreen_DownRelease
 13418 ;;		__SettingsScreen_SetLongPress
 13419 ;;		__SettingsScreen_SetRelease
 13420 ;;		__SettingsScreen_UpRelease
 13421 ;; This function is called by:
 13422 ;;		_main
 13423 ;; This function uses a non-reentrant model
 13424 ;;
 13425                           
 13426                           
 13427                           ;psect for function _handleButtons
 13428  0CB6                     _handleButtons:	
 13429                           
 13430                           ;buttons.c: 57: static uint8_t prevUpState = 1;
 13431                           ;buttons.c: 58: static uint8_t prevDownState = 1;
 13432                           ;buttons.c: 59: static uint8_t prevSetState = 1;
 13433                           ;buttons.c: 61: static bool upInLongPress = 0;
 13434                           ;buttons.c: 62: static bool downInLongPress = 0;
 13435                           ;buttons.c: 63: static bool setInLongPress = 0;
 13436                           ;buttons.c: 65: static bool upLongPressFired = 0;
 13437                           ;buttons.c: 66: static bool downLongPressFired = 0;
 13438                           ;buttons.c: 67: static bool setLongPressFired = 0;
 13439                           ;buttons.c: 69: uint8_t downState, upState, setState;
 13440                           ;buttons.c: 71: downState = RB5;
 13441                           
 13442                           ;incstack = 0
 13443                           ; Regs used in _handleButtons: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13444  0CB6  3000               	movlw	0
 13445  0CB7  0020               	movlb	0	; select bank0
 13446  0CB8  1A8D               	btfsc	13,5	;volatile
 13447  0CB9  3001               	movlw	1
 13448  0CBA  0021               	movlb	1	; select bank1
 13449  0CBB  00B3               	movwf	handleButtons@downState^(0+128)
 13450                           
 13451                           ;buttons.c: 72: upState = RB0;
 13452  0CBC  3000               	movlw	0
 13453  0CBD  0020               	movlb	0	; select bank0
 13454  0CBE  180D               	btfsc	13,0	;volatile
 13455  0CBF  3001               	movlw	1
 13456  0CC0  0021               	movlb	1	; select bank1
 13457  0CC1  00B4               	movwf	handleButtons@upState^(0+128)
 13458                           
 13459                           ;buttons.c: 73: setState = RC2;
 13460  0CC2  3000               	movlw	0
 13461  0CC3  0020               	movlb	0	; select bank0
 13462  0CC4  190E               	btfsc	14,2	;volatile
 13463  0CC5  3001               	movlw	1
 13464  0CC6  0021               	movlb	1	; select bank1
 13465  0CC7  00B5               	movwf	handleButtons@setState^(0+128)
 13466                           
 13467                           ;buttons.c: 75: SysTime now = SysTime_GetNow();
 13468  0CC8  3198  20E8  318C   	fcall	_SysTime_GetNow
 13469  0CCB  0020               	movlb	0	; select bank0
 13470  0CCC  3020               	movlw	low ?_SysTime_GetNow
 13471  0CCD  0086               	movwf	6
 13472  0CCE  3000               	movlw	high ?_SysTime_GetNow
 13473  0CCF  0087               	movwf	7
 13474  0CD0  30B6               	movlw	low handleButtons@now
 13475  0CD1  0084               	movwf	4
 13476  0CD2  3000               	movlw	high handleButtons@now
 13477  0CD3  0085               	movwf	5
 13478  0CD4  3006               	movlw	6
 13479  0CD5  00EF               	movwf	??_handleButtons
 13480  0CD6                     u9370:	
 13481  0CD6  0016               	moviw fsr1++
 13482  0CD7  001A               	movwi fsr0++
 13483  0CD8  0BEF               	decfsz	??_handleButtons,f
 13484  0CD9  2CD6               	goto	u9370
 13485                           
 13486                           ;buttons.c: 79: if (upState == 0 && prevUpState == 1)
 13487  0CDA  0021               	movlb	1	; select bank1
 13488  0CDB  0834               	movf	handleButtons@upState^(0+128),w
 13489  0CDC  1D03               	btfss	3,2
 13490  0CDD  2CE5               	goto	l7661
 13491  0CDE  036F               	decf	handleButtons@prevUpState^(0+128),w
 13492  0CDF  1D03               	btfss	3,2
 13493  0CE0  2CE5               	goto	l7661
 13494                           
 13495                           ;buttons.c: 82: _ButtonUpPressed = 1;
 13496  0CE1  0022               	movlb	2	; select bank2
 13497  0CE2  01CC               	clrf	__ButtonUpPressed^(0+256)
 13498  0CE3  0ACC               	incf	__ButtonUpPressed^(0+256),f
 13499                           
 13500                           ;buttons.c: 83: }
 13501  0CE4  2CFE               	goto	l7671
 13502  0CE5                     l7661:	
 13503                           
 13504                           ;buttons.c: 84: else if(upState == 1 && prevUpState == 0)
 13505  0CE5  0021               	movlb	1	; select bank1
 13506  0CE6  0334               	decf	handleButtons@upState^(0+128),w
 13507  0CE7  1D03               	btfss	3,2
 13508  0CE8  2CFE               	goto	l7671
 13509  0CE9  086F               	movf	handleButtons@prevUpState^(0+128),w
 13510  0CEA  1D03               	btfss	3,2
 13511  0CEB  2CFE               	goto	l7671
 13512                           
 13513                           ;buttons.c: 85: {
 13514                           ;buttons.c: 86: if(ButtonUp_ReleaseCB != (0)) { ButtonUp_ReleaseCB(upInLongPress); };
 13515  0CEC  0022               	movlb	2	; select bank2
 13516  0CED  0834               	movf	_ButtonUp_ReleaseCB^(0+256),w
 13517  0CEE  0435               	iorwf	(_ButtonUp_ReleaseCB+1)^(0+256),w
 13518  0CEF  1903               	btfsc	3,2
 13519  0CF0  2CFC               	goto	l7669
 13520  0CF1  0858               	movf	handleButtons@upInLongPress^(0+256),w
 13521  0CF2  0020               	movlb	0	; select bank0
 13522  0CF3  00EF               	movwf	??_handleButtons
 13523  0CF4  086F               	movf	??_handleButtons,w
 13524  0CF5  00B7               	movwf	__MenuScreen_MoveUp@wasLongPress
 13525  0CF6  0022               	movlb	2	; select bank2
 13526  0CF7  0835               	movf	(_ButtonUp_ReleaseCB+1)^(0+256),w
 13527  0CF8  008A               	movwf	10
 13528  0CF9  0834               	movf	_ButtonUp_ReleaseCB^(0+256),w
 13529  0CFA  000A               	callw
 13530  0CFB  318C               	pagesel	$
 13531  0CFC                     l7669:	
 13532                           
 13533                           ;buttons.c: 87: _ButtonUpPressed = 0;
 13534  0CFC  0022               	movlb	2	; select bank2
 13535  0CFD  01CC               	clrf	__ButtonUpPressed^(0+256)
 13536  0CFE                     l7671:	
 13537                           
 13538                           ;buttons.c: 88: }
 13539                           ;buttons.c: 90: if(prevUpState != upState)
 13540  0CFE  0021               	movlb	1	; select bank1
 13541  0CFF  086F               	movf	handleButtons@prevUpState^(0+128),w
 13542  0D00  0634               	xorwf	handleButtons@upState^(0+128),w
 13543  0D01  1903               	skipnz
 13544  0D02  2D17               	goto	l7677
 13545                           
 13546                           ;buttons.c: 91: {
 13547                           ;buttons.c: 92: _ButtonUp_LastChangeTime = SysTime_GetNow();
 13548  0D03  3198  20E8  318C   	fcall	_SysTime_GetNow
 13549  0D06  0020               	movlb	0	; select bank0
 13550  0D07  3020               	movlw	low ?_SysTime_GetNow
 13551  0D08  0086               	movwf	6
 13552  0D09  3000               	movlw	high ?_SysTime_GetNow
 13553  0D0A  0087               	movwf	7
 13554  0D0B  30D6               	movlw	low __ButtonUp_LastChangeTime
 13555  0D0C  0084               	movwf	4
 13556  0D0D  3001               	movlw	high __ButtonUp_LastChangeTime
 13557  0D0E  0085               	movwf	5
 13558  0D0F  3006               	movlw	6
 13559  0D10  00EF               	movwf	??_handleButtons
 13560  0D11                     u9440:	
 13561  0D11  0016               	moviw fsr1++
 13562  0D12  001A               	movwi fsr0++
 13563  0D13  0BEF               	decfsz	??_handleButtons,f
 13564  0D14  2D11               	goto	u9440
 13565                           
 13566                           ;buttons.c: 93: upLongPressFired = 0;
 13567  0D15  0022               	movlb	2	; select bank2
 13568  0D16  01D9               	clrf	handleButtons@upLongPressFired^(0+256)
 13569  0D17                     l7677:	
 13570                           
 13571                           ;buttons.c: 94: }
 13572                           ;buttons.c: 96: upInLongPress = (_ButtonUpPressed &&
 13573                           ;buttons.c: 97: SysTime_DiffMs(&_ButtonUp_LastChangeTime, &now) >= 1000);
 13574  0D17  0021               	movlb	1	; select bank1
 13575  0D18  01B0               	clrf	_handleButtons$379^(0+128)
 13576  0D19  0022               	movlb	2	; select bank2
 13577  0D1A  084C               	movf	__ButtonUpPressed^(0+256),w
 13578  0D1B  1903               	btfsc	3,2
 13579  0D1C  2D39               	goto	l7685
 13580  0D1D  30D6               	movlw	low __ButtonUp_LastChangeTime
 13581  0D1E  0020               	movlb	0	; select bank0
 13582  0D1F  00A4               	movwf	SysTime_DiffMs@firstTime
 13583  0D20  3001               	movlw	high __ButtonUp_LastChangeTime
 13584  0D21  00A5               	movwf	SysTime_DiffMs@firstTime+1
 13585  0D22  30B6               	movlw	(low (handleButtons@now| 0))& (0+255)
 13586  0D23  00EF               	movwf	??_handleButtons
 13587  0D24  086F               	movf	??_handleButtons,w
 13588  0D25  00A6               	movwf	SysTime_DiffMs@secondTime
 13589  0D26  3194  242D  318C   	fcall	_SysTime_DiffMs
 13590  0D29  0020               	movlb	0	; select bank0
 13591  0D2A  0827               	movf	?_SysTime_DiffMs+3,w
 13592  0D2B  1D03               	btfss	3,2
 13593  0D2C  2D36               	goto	l7683
 13594  0D2D  0826               	movf	?_SysTime_DiffMs+2,w
 13595  0D2E  1D03               	btfss	3,2
 13596  0D2F  2D36               	goto	l7683
 13597  0D30  30E8               	movlw	232
 13598  0D31  0224               	subwf	?_SysTime_DiffMs,w
 13599  0D32  3003               	movlw	3
 13600  0D33  3B25               	subwfb	?_SysTime_DiffMs+1,w
 13601  0D34  1C03               	btfss	3,0
 13602  0D35  2D39               	goto	l7685
 13603  0D36                     l7683:	
 13604  0D36  0021               	movlb	1	; select bank1
 13605  0D37  01B0               	clrf	_handleButtons$379^(0+128)
 13606  0D38  0AB0               	incf	_handleButtons$379^(0+128),f
 13607  0D39                     l7685:	
 13608  0D39  0021               	movlb	1	; select bank1
 13609  0D3A  0830               	movf	_handleButtons$379^(0+128),w
 13610  0D3B  0020               	movlb	0	; select bank0
 13611  0D3C  00EF               	movwf	??_handleButtons
 13612  0D3D  086F               	movf	??_handleButtons,w
 13613  0D3E  0022               	movlb	2	; select bank2
 13614  0D3F  00D8               	movwf	handleButtons@upInLongPress^(0+256)
 13615                           
 13616                           ;buttons.c: 98: if(upInLongPress && !upLongPressFired)
 13617  0D40  0858               	movf	handleButtons@upInLongPress^(0+256),w
 13618  0D41  1903               	btfsc	3,2
 13619  0D42  2D51               	goto	l7697
 13620  0D43  0859               	movf	handleButtons@upLongPressFired^(0+256),w
 13621  0D44  1D03               	btfss	3,2
 13622  0D45  2D51               	goto	l7697
 13623                           
 13624                           ;buttons.c: 99: {
 13625                           ;buttons.c: 100: upLongPressFired = 1;
 13626  0D46  01D9               	clrf	handleButtons@upLongPressFired^(0+256)
 13627  0D47  0AD9               	incf	handleButtons@upLongPressFired^(0+256),f
 13628                           
 13629                           ;buttons.c: 101: if(ButtonUp_LongPressCB != (0)) { ButtonUp_LongPressCB(); };
 13630  0D48  0830               	movf	_ButtonUp_LongPressCB^(0+256),w
 13631  0D49  0431               	iorwf	(_ButtonUp_LongPressCB+1)^(0+256),w
 13632  0D4A  1903               	btfsc	3,2
 13633  0D4B  2D51               	goto	l7697
 13634  0D4C  0831               	movf	(_ButtonUp_LongPressCB+1)^(0+256),w
 13635  0D4D  008A               	movwf	10
 13636  0D4E  0830               	movf	_ButtonUp_LongPressCB^(0+256),w
 13637  0D4F  000A               	callw
 13638  0D50  318C               	pagesel	$
 13639  0D51                     l7697:	
 13640                           
 13641                           ;buttons.c: 102: }
 13642                           ;buttons.c: 103: prevUpState = upState;
 13643  0D51  0021               	movlb	1	; select bank1
 13644  0D52  0834               	movf	handleButtons@upState^(0+128),w
 13645  0D53  0020               	movlb	0	; select bank0
 13646  0D54  00EF               	movwf	??_handleButtons
 13647  0D55  086F               	movf	??_handleButtons,w
 13648  0D56  0021               	movlb	1	; select bank1
 13649  0D57  00EF               	movwf	handleButtons@prevUpState^(0+128)
 13650                           
 13651                           ;buttons.c: 107: if (downState == 0 && prevDownState == 1)
 13652  0D58  0833               	movf	handleButtons@downState^(0+128),w
 13653  0D59  1D03               	btfss	3,2
 13654  0D5A  2D62               	goto	l7705
 13655  0D5B  0022               	movlb	2	; select bank2
 13656  0D5C  036A               	decf	handleButtons@prevDownState^(0+256),w
 13657  0D5D  1D03               	btfss	3,2
 13658  0D5E  2D62               	goto	l7705
 13659                           
 13660                           ;buttons.c: 110: _ButtonDownPressed = 1;
 13661  0D5F  01CA               	clrf	__ButtonDownPressed^(0+256)
 13662  0D60  0ACA               	incf	__ButtonDownPressed^(0+256),f
 13663                           
 13664                           ;buttons.c: 111: }
 13665  0D61  2D7B               	goto	l7715
 13666  0D62                     l7705:	
 13667                           
 13668                           ;buttons.c: 112: else if(downState == 1 && prevDownState == 0)
 13669  0D62  0021               	movlb	1	; select bank1
 13670  0D63  0333               	decf	handleButtons@downState^(0+128),w
 13671  0D64  1D03               	btfss	3,2
 13672  0D65  2D7B               	goto	l7715
 13673  0D66  0022               	movlb	2	; select bank2
 13674  0D67  086A               	movf	handleButtons@prevDownState^(0+256),w
 13675  0D68  1D03               	btfss	3,2
 13676  0D69  2D7B               	goto	l7715
 13677                           
 13678                           ;buttons.c: 113: {
 13679                           ;buttons.c: 114: if(ButtonDown_ReleaseCB != (0)) { ButtonDown_ReleaseCB(downInLongPress)
      +                          ; };
 13680  0D6A  0828               	movf	_ButtonDown_ReleaseCB^(0+256),w
 13681  0D6B  0429               	iorwf	(_ButtonDown_ReleaseCB+1)^(0+256),w
 13682  0D6C  1903               	btfsc	3,2
 13683  0D6D  2D79               	goto	l7713
 13684  0D6E  0854               	movf	handleButtons@downInLongPress^(0+256),w
 13685  0D6F  0020               	movlb	0	; select bank0
 13686  0D70  00EF               	movwf	??_handleButtons
 13687  0D71  086F               	movf	??_handleButtons,w
 13688  0D72  00B7               	movwf	__MenuScreen_MoveDown@wasLongPress
 13689  0D73  0022               	movlb	2	; select bank2
 13690  0D74  0829               	movf	(_ButtonDown_ReleaseCB+1)^(0+256),w
 13691  0D75  008A               	movwf	10
 13692  0D76  0828               	movf	_ButtonDown_ReleaseCB^(0+256),w
 13693  0D77  000A               	callw
 13694  0D78  318C               	pagesel	$
 13695  0D79                     l7713:	
 13696                           
 13697                           ;buttons.c: 115: _ButtonDownPressed = 0;
 13698  0D79  0022               	movlb	2	; select bank2
 13699  0D7A  01CA               	clrf	__ButtonDownPressed^(0+256)
 13700  0D7B                     l7715:	
 13701                           
 13702                           ;buttons.c: 116: }
 13703                           ;buttons.c: 117: if(prevDownState != downState)
 13704  0D7B  0022               	movlb	2	; select bank2
 13705  0D7C  086A               	movf	handleButtons@prevDownState^(0+256),w
 13706  0D7D  0021               	movlb	1	; select bank1
 13707  0D7E  0633               	xorwf	handleButtons@downState^(0+128),w
 13708  0D7F  1903               	skipnz
 13709  0D80  2D95               	goto	l7721
 13710                           
 13711                           ;buttons.c: 118: {
 13712                           ;buttons.c: 119: _ButtonDown_LastChangeTime = SysTime_GetNow();
 13713  0D81  3198  20E8  318C   	fcall	_SysTime_GetNow
 13714  0D84  0020               	movlb	0	; select bank0
 13715  0D85  3020               	movlw	low ?_SysTime_GetNow
 13716  0D86  0086               	movwf	6
 13717  0D87  3000               	movlw	high ?_SysTime_GetNow
 13718  0D88  0087               	movwf	7
 13719  0D89  30CA               	movlw	low __ButtonDown_LastChangeTime
 13720  0D8A  0084               	movwf	4
 13721  0D8B  3001               	movlw	high __ButtonDown_LastChangeTime
 13722  0D8C  0085               	movwf	5
 13723  0D8D  3006               	movlw	6
 13724  0D8E  00EF               	movwf	??_handleButtons
 13725  0D8F                     u9560:	
 13726  0D8F  0016               	moviw fsr1++
 13727  0D90  001A               	movwi fsr0++
 13728  0D91  0BEF               	decfsz	??_handleButtons,f
 13729  0D92  2D8F               	goto	u9560
 13730                           
 13731                           ;buttons.c: 120: downLongPressFired = 0;
 13732  0D93  0022               	movlb	2	; select bank2
 13733  0D94  01D5               	clrf	handleButtons@downLongPressFired^(0+256)
 13734  0D95                     l7721:	
 13735                           
 13736                           ;buttons.c: 121: }
 13737                           ;buttons.c: 122: downInLongPress = (_ButtonDownPressed &&
 13738                           ;buttons.c: 123: SysTime_DiffMs(&_ButtonDown_LastChangeTime, &now) >= 1000);
 13739  0D95  0021               	movlb	1	; select bank1
 13740  0D96  01B1               	clrf	_handleButtons$382^(0+128)
 13741  0D97  0022               	movlb	2	; select bank2
 13742  0D98  084A               	movf	__ButtonDownPressed^(0+256),w
 13743  0D99  1903               	btfsc	3,2
 13744  0D9A  2DB7               	goto	l7729
 13745  0D9B  30CA               	movlw	low __ButtonDown_LastChangeTime
 13746  0D9C  0020               	movlb	0	; select bank0
 13747  0D9D  00A4               	movwf	SysTime_DiffMs@firstTime
 13748  0D9E  3001               	movlw	high __ButtonDown_LastChangeTime
 13749  0D9F  00A5               	movwf	SysTime_DiffMs@firstTime+1
 13750  0DA0  30B6               	movlw	(low (handleButtons@now| 0))& (0+255)
 13751  0DA1  00EF               	movwf	??_handleButtons
 13752  0DA2  086F               	movf	??_handleButtons,w
 13753  0DA3  00A6               	movwf	SysTime_DiffMs@secondTime
 13754  0DA4  3194  242D  318C   	fcall	_SysTime_DiffMs
 13755  0DA7  0020               	movlb	0	; select bank0
 13756  0DA8  0827               	movf	?_SysTime_DiffMs+3,w
 13757  0DA9  1D03               	btfss	3,2
 13758  0DAA  2DB4               	goto	l7727
 13759  0DAB  0826               	movf	?_SysTime_DiffMs+2,w
 13760  0DAC  1D03               	btfss	3,2
 13761  0DAD  2DB4               	goto	l7727
 13762  0DAE  30E8               	movlw	232
 13763  0DAF  0224               	subwf	?_SysTime_DiffMs,w
 13764  0DB0  3003               	movlw	3
 13765  0DB1  3B25               	subwfb	?_SysTime_DiffMs+1,w
 13766  0DB2  1C03               	btfss	3,0
 13767  0DB3  2DB7               	goto	l7729
 13768  0DB4                     l7727:	
 13769  0DB4  0021               	movlb	1	; select bank1
 13770  0DB5  01B1               	clrf	_handleButtons$382^(0+128)
 13771  0DB6  0AB1               	incf	_handleButtons$382^(0+128),f
 13772  0DB7                     l7729:	
 13773  0DB7  0021               	movlb	1	; select bank1
 13774  0DB8  0831               	movf	_handleButtons$382^(0+128),w
 13775  0DB9  0020               	movlb	0	; select bank0
 13776  0DBA  00EF               	movwf	??_handleButtons
 13777  0DBB  086F               	movf	??_handleButtons,w
 13778  0DBC  0022               	movlb	2	; select bank2
 13779  0DBD  00D4               	movwf	handleButtons@downInLongPress^(0+256)
 13780                           
 13781                           ;buttons.c: 124: if(downInLongPress && !downLongPressFired)
 13782  0DBE  0854               	movf	handleButtons@downInLongPress^(0+256),w
 13783  0DBF  1903               	btfsc	3,2
 13784  0DC0  2DC6               	goto	l7739
 13785  0DC1  0855               	movf	handleButtons@downLongPressFired^(0+256),w
 13786  0DC2  1D03               	btfss	3,2
 13787  0DC3  2DC6               	goto	l7739
 13788                           
 13789                           ;buttons.c: 125: {
 13790                           ;buttons.c: 126: downLongPressFired = 1;
 13791  0DC4  01D5               	clrf	handleButtons@downLongPressFired^(0+256)
 13792  0DC5  0AD5               	incf	handleButtons@downLongPressFired^(0+256),f
 13793  0DC6                     l7739:	
 13794                           
 13795                           ;buttons.c: 128: }
 13796                           ;buttons.c: 129: prevDownState = downState;
 13797  0DC6  0021               	movlb	1	; select bank1
 13798  0DC7  0833               	movf	handleButtons@downState^(0+128),w
 13799  0DC8  0020               	movlb	0	; select bank0
 13800  0DC9  00EF               	movwf	??_handleButtons
 13801  0DCA  086F               	movf	??_handleButtons,w
 13802  0DCB  0022               	movlb	2	; select bank2
 13803  0DCC  00EA               	movwf	handleButtons@prevDownState^(0+256)
 13804                           
 13805                           ;buttons.c: 133: if (setState == 0 && prevSetState == 1)
 13806  0DCD  0021               	movlb	1	; select bank1
 13807  0DCE  0835               	movf	handleButtons@setState^(0+128),w
 13808  0DCF  1D03               	btfss	3,2
 13809  0DD0  2DD8               	goto	l7747
 13810  0DD1  0022               	movlb	2	; select bank2
 13811  0DD2  036B               	decf	handleButtons@prevSetState^(0+256),w
 13812  0DD3  1D03               	btfss	3,2
 13813  0DD4  2DD8               	goto	l7747
 13814                           
 13815                           ;buttons.c: 136: _ButtonSetPressed = 1;
 13816  0DD5  01CB               	clrf	__ButtonSetPressed^(0+256)
 13817  0DD6  0ACB               	incf	__ButtonSetPressed^(0+256),f
 13818                           
 13819                           ;buttons.c: 137: }
 13820  0DD7  2DF1               	goto	l7757
 13821  0DD8                     l7747:	
 13822                           
 13823                           ;buttons.c: 138: else if(setState == 1 && prevSetState == 0)
 13824  0DD8  0021               	movlb	1	; select bank1
 13825  0DD9  0335               	decf	handleButtons@setState^(0+128),w
 13826  0DDA  1D03               	btfss	3,2
 13827  0DDB  2DF1               	goto	l7757
 13828  0DDC  0022               	movlb	2	; select bank2
 13829  0DDD  086B               	movf	handleButtons@prevSetState^(0+256),w
 13830  0DDE  1D03               	btfss	3,2
 13831  0DDF  2DF1               	goto	l7757
 13832                           
 13833                           ;buttons.c: 139: {
 13834                           ;buttons.c: 140: if(ButtonSet_ReleaseCB != (0)) { ButtonSet_ReleaseCB(setInLongPress); }
      +                          ;
 13835  0DE0  082E               	movf	_ButtonSet_ReleaseCB^(0+256),w
 13836  0DE1  042F               	iorwf	(_ButtonSet_ReleaseCB+1)^(0+256),w
 13837  0DE2  1903               	btfsc	3,2
 13838  0DE3  2DEF               	goto	l7755
 13839  0DE4  0856               	movf	handleButtons@setInLongPress^(0+256),w
 13840  0DE5  0020               	movlb	0	; select bank0
 13841  0DE6  00EF               	movwf	??_handleButtons
 13842  0DE7  086F               	movf	??_handleButtons,w
 13843  0DE8  00BA               	movwf	__MenuScreen_SetRelease@isFromLongPress
 13844  0DE9  0022               	movlb	2	; select bank2
 13845  0DEA  082F               	movf	(_ButtonSet_ReleaseCB+1)^(0+256),w
 13846  0DEB  008A               	movwf	10
 13847  0DEC  082E               	movf	_ButtonSet_ReleaseCB^(0+256),w
 13848  0DED  000A               	callw
 13849  0DEE  318C               	pagesel	$
 13850  0DEF                     l7755:	
 13851                           
 13852                           ;buttons.c: 141: _ButtonSetPressed = 0;
 13853  0DEF  0022               	movlb	2	; select bank2
 13854  0DF0  01CB               	clrf	__ButtonSetPressed^(0+256)
 13855  0DF1                     l7757:	
 13856                           
 13857                           ;buttons.c: 142: }
 13858                           ;buttons.c: 143: if(prevSetState != setState)
 13859  0DF1  0022               	movlb	2	; select bank2
 13860  0DF2  086B               	movf	handleButtons@prevSetState^(0+256),w
 13861  0DF3  0021               	movlb	1	; select bank1
 13862  0DF4  0635               	xorwf	handleButtons@setState^(0+128),w
 13863  0DF5  1903               	skipnz
 13864  0DF6  2E0B               	goto	l7763
 13865                           
 13866                           ;buttons.c: 144: {
 13867                           ;buttons.c: 145: _ButtonSet_LastChangeTime = SysTime_GetNow();
 13868  0DF7  3198  20E8  318C   	fcall	_SysTime_GetNow
 13869  0DFA  0020               	movlb	0	; select bank0
 13870  0DFB  3020               	movlw	low ?_SysTime_GetNow
 13871  0DFC  0086               	movwf	6
 13872  0DFD  3000               	movlw	high ?_SysTime_GetNow
 13873  0DFE  0087               	movwf	7
 13874  0DFF  30D0               	movlw	low __ButtonSet_LastChangeTime
 13875  0E00  0084               	movwf	4
 13876  0E01  3001               	movlw	high __ButtonSet_LastChangeTime
 13877  0E02  0085               	movwf	5
 13878  0E03  3006               	movlw	6
 13879  0E04  00EF               	movwf	??_handleButtons
 13880  0E05                     u9670:	
 13881  0E05  0016               	moviw fsr1++
 13882  0E06  001A               	movwi fsr0++
 13883  0E07  0BEF               	decfsz	??_handleButtons,f
 13884  0E08  2E05               	goto	u9670
 13885                           
 13886                           ;buttons.c: 146: setLongPressFired = 0;
 13887  0E09  0022               	movlb	2	; select bank2
 13888  0E0A  01D7               	clrf	handleButtons@setLongPressFired^(0+256)
 13889  0E0B                     l7763:	
 13890                           
 13891                           ;buttons.c: 147: }
 13892                           ;buttons.c: 148: setInLongPress = (_ButtonSetPressed &&
 13893                           ;buttons.c: 149: SysTime_DiffMs(&_ButtonSet_LastChangeTime, &now) >= 1000);
 13894  0E0B  0021               	movlb	1	; select bank1
 13895  0E0C  01B2               	clrf	_handleButtons$385^(0+128)
 13896  0E0D  0022               	movlb	2	; select bank2
 13897  0E0E  084B               	movf	__ButtonSetPressed^(0+256),w
 13898  0E0F  1903               	btfsc	3,2
 13899  0E10  2E2D               	goto	l7771
 13900  0E11  30D0               	movlw	low __ButtonSet_LastChangeTime
 13901  0E12  0020               	movlb	0	; select bank0
 13902  0E13  00A4               	movwf	SysTime_DiffMs@firstTime
 13903  0E14  3001               	movlw	high __ButtonSet_LastChangeTime
 13904  0E15  00A5               	movwf	SysTime_DiffMs@firstTime+1
 13905  0E16  30B6               	movlw	(low (handleButtons@now| 0))& (0+255)
 13906  0E17  00EF               	movwf	??_handleButtons
 13907  0E18  086F               	movf	??_handleButtons,w
 13908  0E19  00A6               	movwf	SysTime_DiffMs@secondTime
 13909  0E1A  3194  242D  318C   	fcall	_SysTime_DiffMs
 13910  0E1D  0020               	movlb	0	; select bank0
 13911  0E1E  0827               	movf	?_SysTime_DiffMs+3,w
 13912  0E1F  1D03               	btfss	3,2
 13913  0E20  2E2A               	goto	l7769
 13914  0E21  0826               	movf	?_SysTime_DiffMs+2,w
 13915  0E22  1D03               	btfss	3,2
 13916  0E23  2E2A               	goto	l7769
 13917  0E24  30E8               	movlw	232
 13918  0E25  0224               	subwf	?_SysTime_DiffMs,w
 13919  0E26  3003               	movlw	3
 13920  0E27  3B25               	subwfb	?_SysTime_DiffMs+1,w
 13921  0E28  1C03               	btfss	3,0
 13922  0E29  2E2D               	goto	l7771
 13923  0E2A                     l7769:	
 13924  0E2A  0021               	movlb	1	; select bank1
 13925  0E2B  01B2               	clrf	_handleButtons$385^(0+128)
 13926  0E2C  0AB2               	incf	_handleButtons$385^(0+128),f
 13927  0E2D                     l7771:	
 13928  0E2D  0021               	movlb	1	; select bank1
 13929  0E2E  0832               	movf	_handleButtons$385^(0+128),w
 13930  0E2F  0020               	movlb	0	; select bank0
 13931  0E30  00EF               	movwf	??_handleButtons
 13932  0E31  086F               	movf	??_handleButtons,w
 13933  0E32  0022               	movlb	2	; select bank2
 13934  0E33  00D6               	movwf	handleButtons@setInLongPress^(0+256)
 13935                           
 13936                           ;buttons.c: 150: if(setInLongPress && !setLongPressFired)
 13937  0E34  0856               	movf	handleButtons@setInLongPress^(0+256),w
 13938  0E35  1903               	btfsc	3,2
 13939  0E36  2E45               	goto	l7783
 13940  0E37  0857               	movf	handleButtons@setLongPressFired^(0+256),w
 13941  0E38  1D03               	btfss	3,2
 13942  0E39  2E45               	goto	l7783
 13943                           
 13944                           ;buttons.c: 151: {
 13945                           ;buttons.c: 152: setLongPressFired = 1;
 13946  0E3A  01D7               	clrf	handleButtons@setLongPressFired^(0+256)
 13947  0E3B  0AD7               	incf	handleButtons@setLongPressFired^(0+256),f
 13948                           
 13949                           ;buttons.c: 153: if(ButtonSet_LongPressCB != (0)) { ButtonSet_LongPressCB(); };
 13950  0E3C  082A               	movf	_ButtonSet_LongPressCB^(0+256),w
 13951  0E3D  042B               	iorwf	(_ButtonSet_LongPressCB+1)^(0+256),w
 13952  0E3E  1903               	btfsc	3,2
 13953  0E3F  2E45               	goto	l7783
 13954  0E40  082B               	movf	(_ButtonSet_LongPressCB+1)^(0+256),w
 13955  0E41  008A               	movwf	10
 13956  0E42  082A               	movf	_ButtonSet_LongPressCB^(0+256),w
 13957  0E43  000A               	callw
 13958  0E44  318C               	pagesel	$
 13959  0E45                     l7783:	
 13960                           
 13961                           ;buttons.c: 154: }
 13962                           ;buttons.c: 155: prevSetState = setState;
 13963  0E45  0021               	movlb	1	; select bank1
 13964  0E46  0835               	movf	handleButtons@setState^(0+128),w
 13965  0E47  0020               	movlb	0	; select bank0
 13966  0E48  00EF               	movwf	??_handleButtons
 13967  0E49  086F               	movf	??_handleButtons,w
 13968  0E4A  0022               	movlb	2	; select bank2
 13969  0E4B  00EB               	movwf	handleButtons@prevSetState^(0+256)
 13970  0E4C  0008               	return
 13971  0E4D                     __end_of_handleButtons:	
 13972                           
 13973                           	psect	text34
 13974  1B3D                     __ptext34:	
 13975 ;; *************** function __MenuScreen_MoveUp *****************
 13976 ;; Defined at:
 13977 ;;		line 43 in file "menuscreen.c"
 13978 ;; Parameters:    Size  Location     Type
 13979 ;;  wasLongPress    1   23[BANK0 ] unsigned char 
 13980 ;; Auto vars:     Size  Location     Type
 13981 ;;  oldSelected     1   28[BANK0 ] unsigned char 
 13982 ;; Return value:  Size  Location     Type
 13983 ;;		None               void
 13984 ;; Registers used:
 13985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13986 ;; Tracked objects:
 13987 ;;		On entry : 0/0
 13988 ;;		On exit  : 0/0
 13989 ;;		Unchanged: 0/0
 13990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13991 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13992 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13993 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13994 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13995 ;;Total ram usage:        6 bytes
 13996 ;; Hardware stack levels used:    1
 13997 ;; Hardware stack levels required when called:    7
 13998 ;; This function calls:
 13999 ;;		_MenuScreen_Display
 14000 ;;		___wmul
 14001 ;; This function is called by:
 14002 ;;		_MenuScreen_Init
 14003 ;;		_handleButtons
 14004 ;; This function uses a non-reentrant model
 14005 ;;
 14006                           
 14007                           
 14008                           ;psect for function __MenuScreen_MoveUp
 14009  1B3D                     __MenuScreen_MoveUp:	
 14010                           
 14011                           ;menuscreen.c: 45: if(!wasLongPress)
 14012                           
 14013                           ;incstack = 0
 14014                           ; Regs used in __MenuScreen_MoveUp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14015  1B3D  0020               	movlb	0	; select bank0
 14016  1B3E  0837               	movf	__MenuScreen_MoveUp@wasLongPress,w
 14017  1B3F  1D03               	btfss	3,2
 14018  1B40  0008               	return
 14019                           
 14020                           ;menuscreen.c: 46: {
 14021                           ;menuscreen.c: 47: menuDir = DIR_UP;
 14022  1B41  0022               	movlb	2	; select bank2
 14023  1B42  01D3               	clrf	_menuDir^(0+256)
 14024                           
 14025                           ;menuscreen.c: 48: uint8_t oldSelected = _Menu_SelectedItem;
 14026  1B43  087B               	movf	__Menu_SelectedItem,w
 14027  1B44  0020               	movlb	0	; select bank0
 14028  1B45  00B8               	movwf	??__MenuScreen_MoveUp
 14029  1B46  0838               	movf	??__MenuScreen_MoveUp,w
 14030  1B47  00BC               	movwf	__MenuScreen_MoveUp@oldSelected
 14031                           
 14032                           ;menuscreen.c: 49: if(_Menu_SelectedItem == 0)
 14033  1B48  087B               	movf	__Menu_SelectedItem,w
 14034  1B49  1D03               	btfss	3,2
 14035  1B4A  2B4D               	goto	l7595
 14036                           
 14037                           ;menuscreen.c: 50: {
 14038                           ;menuscreen.c: 51: _Menu_SelectedItem = _Menu_MaxValidIndex;
 14039  1B4B  087A               	movf	__Menu_MaxValidIndex,w
 14040  1B4C  2B4F               	goto	L7
 14041  1B4D                     l7595:	
 14042                           ;menuscreen.c: 52: }
 14043                           
 14044                           
 14045                           ;menuscreen.c: 53: else
 14046                           ;menuscreen.c: 54: {
 14047                           ;menuscreen.c: 55: _Menu_SelectedItem = (_Menu_SelectedItem - 1);
 14048  1B4D  087B               	movf	__Menu_SelectedItem,w
 14049  1B4E  3EFF               	addlw	-1
 14050  1B4F                     L7:	
 14051  1B4F  00B8               	movwf	??__MenuScreen_MoveUp
 14052  1B50  0838               	movf	??__MenuScreen_MoveUp,w
 14053  1B51  00FB               	movwf	__Menu_SelectedItem
 14054                           
 14055                           ;menuscreen.c: 56: }
 14056                           ;menuscreen.c: 57: if( !MainMenu[_Menu_SelectedItem].IsValid)
 14057  1B52  087B               	movf	__Menu_SelectedItem,w
 14058  1B53  00B8               	movwf	??__MenuScreen_MoveUp
 14059  1B54  01B9               	clrf	??__MenuScreen_MoveUp+1
 14060  1B55  0838               	movf	??__MenuScreen_MoveUp,w
 14061  1B56  00A0               	movwf	___wmul@multiplier
 14062  1B57  0839               	movf	??__MenuScreen_MoveUp+1,w
 14063  1B58  00A1               	movwf	___wmul@multiplier+1
 14064  1B59  300C               	movlw	12
 14065  1B5A  00A2               	movwf	___wmul@multiplicand
 14066  1B5B  3000               	movlw	0
 14067  1B5C  00A3               	movwf	___wmul@multiplicand+1
 14068  1B5D  3198  203A  319B   	fcall	___wmul
 14069  1B60  3078               	movlw	120
 14070  1B61  0020               	movlb	0	; select bank0
 14071  1B62  00BA               	movwf	??__MenuScreen_MoveUp+2
 14072  1B63  3027               	movlw	39
 14073  1B64  00BB               	movwf	??__MenuScreen_MoveUp+3
 14074  1B65  0820               	movf	?___wmul,w
 14075  1B66  073A               	addwf	??__MenuScreen_MoveUp+2,w
 14076  1B67  0086               	movwf	6
 14077  1B68  0821               	movf	?___wmul+1,w
 14078  1B69  3D3B               	addwfc	??__MenuScreen_MoveUp+3,w
 14079  1B6A  0087               	movwf	7
 14080  1B6B  0801               	movf	1,w
 14081  1B6C  1D03               	btfss	3,2
 14082  1B6D  2B72               	goto	l7601
 14083                           
 14084                           ;menuscreen.c: 58: {
 14085                           ;menuscreen.c: 59: _Menu_SelectedItem = oldSelected;
 14086  1B6E  083C               	movf	__MenuScreen_MoveUp@oldSelected,w
 14087  1B6F  00B8               	movwf	??__MenuScreen_MoveUp
 14088  1B70  0838               	movf	??__MenuScreen_MoveUp,w
 14089  1B71  00FB               	movwf	__Menu_SelectedItem
 14090  1B72                     l7601:	
 14091                           
 14092                           ;menuscreen.c: 60: }
 14093                           ;menuscreen.c: 61: MenuScreen_Display();
 14094  1B72  318A  2204         	fcall	_MenuScreen_Display
 14095  1B74  0008               	return
 14096  1B75                     __end_of__MenuScreen_MoveUp:	
 14097                           
 14098                           	psect	text35
 14099  11A8                     __ptext35:	
 14100 ;; *************** function __SettingsScreen_UpRelease *****************
 14101 ;; Defined at:
 14102 ;;		line 28 in file "settingsscreen.c"
 14103 ;; Parameters:    Size  Location     Type
 14104 ;;  wasLongPress    1   23[BANK0 ] unsigned char 
 14105 ;; Auto vars:     Size  Location     Type
 14106 ;;		None
 14107 ;; Return value:  Size  Location     Type
 14108 ;;		None               void
 14109 ;; Registers used:
 14110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14111 ;; Tracked objects:
 14112 ;;		On entry : 0/0
 14113 ;;		On exit  : 0/0
 14114 ;;		Unchanged: 0/0
 14115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14116 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14118 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14119 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14120 ;;Total ram usage:        2 bytes
 14121 ;; Hardware stack levels used:    1
 14122 ;; Hardware stack levels required when called:    7
 14123 ;; This function calls:
 14124 ;;		_SettingsScreen_Display
 14125 ;; This function is called by:
 14126 ;;		_SettingsScreen_Init
 14127 ;;		_handleButtons
 14128 ;; This function uses a non-reentrant model
 14129 ;;
 14130                           
 14131                           
 14132                           ;psect for function __SettingsScreen_UpRelease
 14133  11A8                     __SettingsScreen_UpRelease:	
 14134                           
 14135                           ;settingsscreen.c: 30: if(!wasLongPress)
 14136                           
 14137                           ;incstack = 0
 14138                           ; Regs used in __SettingsScreen_UpRelease: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14139  11A8  0020               	movlb	0	; select bank0
 14140  11A9  0837               	movf	__SettingsScreen_UpRelease@wasLongPress,w
 14141  11AA  1D03               	btfss	3,2
 14142  11AB  0008               	return
 14143                           
 14144                           ;settingsscreen.c: 31: {
 14145                           ;settingsscreen.c: 35: if(curRow == 0 && curUpIntLimit < 85)
 14146  11AC  0021               	movlb	1	; select bank1
 14147  11AD  0863               	movf	_curRow^(0+128),w
 14148  11AE  1D03               	btfss	3,2
 14149  11AF  29CE               	goto	l7533
 14150  11B0  086E               	movf	(_curUpIntLimit+1)^(0+128),w
 14151  11B1  3A80               	xorlw	128
 14152  11B2  0020               	movlb	0	; select bank0
 14153  11B3  00B8               	movwf	??__SettingsScreen_UpRelease
 14154  11B4  3080               	movlw	128
 14155  11B5  0238               	subwf	??__SettingsScreen_UpRelease,w
 14156  11B6  1D03               	skipz
 14157  11B7  29BB               	goto	u9095
 14158  11B8  3055               	movlw	85
 14159  11B9  0021               	movlb	1	; select bank1
 14160  11BA  026D               	subwf	_curUpIntLimit^(0+128),w
 14161  11BB                     u9095:	
 14162  11BB  1803               	skipnc
 14163  11BC  29CE               	goto	l7533
 14164                           
 14165                           ;settingsscreen.c: 36: {
 14166                           ;settingsscreen.c: 37: curUpFractLimit += 5;
 14167  11BD  3005               	movlw	5
 14168  11BE  0021               	movlb	1	; select bank1
 14169  11BF  07EB               	addwf	_curUpFractLimit^(0+128),f
 14170  11C0  3000               	movlw	0
 14171  11C1  3DEC               	addwfc	(_curUpFractLimit+1)^(0+128),f
 14172                           
 14173                           ;settingsscreen.c: 38: if(curUpFractLimit == 10)
 14174  11C2  300A               	movlw	10
 14175  11C3  066B               	xorwf	_curUpFractLimit^(0+128),w
 14176  11C4  046C               	iorwf	(_curUpFractLimit+1)^(0+128),w
 14177  11C5  1D03               	btfss	3,2
 14178  11C6  2A03               	goto	l7547
 14179                           
 14180                           ;settingsscreen.c: 39: {
 14181                           ;settingsscreen.c: 40: curUpIntLimit += 1;
 14182  11C7  3001               	movlw	1
 14183  11C8  07ED               	addwf	_curUpIntLimit^(0+128),f
 14184  11C9  3000               	movlw	0
 14185  11CA  3DEE               	addwfc	(_curUpIntLimit+1)^(0+128),f
 14186                           
 14187                           ;settingsscreen.c: 41: curUpFractLimit = 0;
 14188  11CB  01EB               	clrf	_curUpFractLimit^(0+128)
 14189  11CC  01EC               	clrf	(_curUpFractLimit+1)^(0+128)
 14190                           
 14191                           ;settingsscreen.c: 42: }
 14192                           ;settingsscreen.c: 43: }
 14193  11CD  2A03               	goto	l7547
 14194  11CE                     l7533:	
 14195                           
 14196                           ;settingsscreen.c: 45: else if( curRow == 1 &&
 14197                           ;settingsscreen.c: 46: (curBottomIntLimit < curUpIntLimit || curBottomFractLimit < curUp
      +                          FractLimit))
 14198  11CE  0021               	movlb	1	; select bank1
 14199  11CF  0363               	decf	_curRow^(0+128),w
 14200  11D0  1D03               	btfss	3,2
 14201  11D1  2A03               	goto	l7547
 14202  11D2  086A               	movf	(_curBottomIntLimit+1)^(0+128),w
 14203  11D3  3A80               	xorlw	128
 14204  11D4  0020               	movlb	0	; select bank0
 14205  11D5  00B8               	movwf	??__SettingsScreen_UpRelease
 14206  11D6  0021               	movlb	1	; select bank1
 14207  11D7  086E               	movf	(_curUpIntLimit+1)^(0+128),w
 14208  11D8  3A80               	xorlw	128
 14209  11D9  0020               	movlb	0	; select bank0
 14210  11DA  0238               	subwf	??__SettingsScreen_UpRelease,w
 14211  11DB  1D03               	skipz
 14212  11DC  29E0               	goto	u9125
 14213  11DD  0021               	movlb	1	; select bank1
 14214  11DE  086D               	movf	_curUpIntLimit^(0+128),w
 14215  11DF  0269               	subwf	_curBottomIntLimit^(0+128),w
 14216  11E0                     u9125:	
 14217  11E0  1C03               	skipc
 14218  11E1  29F3               	goto	l7539
 14219  11E2  0021               	movlb	1	; select bank1
 14220  11E3  0868               	movf	(_curBottomFractLimit+1)^(0+128),w
 14221  11E4  3A80               	xorlw	128
 14222  11E5  0020               	movlb	0	; select bank0
 14223  11E6  00B8               	movwf	??__SettingsScreen_UpRelease
 14224  11E7  0021               	movlb	1	; select bank1
 14225  11E8  086C               	movf	(_curUpFractLimit+1)^(0+128),w
 14226  11E9  3A80               	xorlw	128
 14227  11EA  0020               	movlb	0	; select bank0
 14228  11EB  0238               	subwf	??__SettingsScreen_UpRelease,w
 14229  11EC  1D03               	skipz
 14230  11ED  29F1               	goto	u9135
 14231  11EE  0021               	movlb	1	; select bank1
 14232  11EF  086B               	movf	_curUpFractLimit^(0+128),w
 14233  11F0  0267               	subwf	_curBottomFractLimit^(0+128),w
 14234  11F1                     u9135:	
 14235  11F1  1803               	skipnc
 14236  11F2  2A03               	goto	l7547
 14237  11F3                     l7539:	
 14238                           
 14239                           ;settingsscreen.c: 47: {
 14240                           ;settingsscreen.c: 48: curBottomFractLimit += 5;
 14241  11F3  3005               	movlw	5
 14242  11F4  0021               	movlb	1	; select bank1
 14243  11F5  07E7               	addwf	_curBottomFractLimit^(0+128),f
 14244  11F6  3000               	movlw	0
 14245  11F7  3DE8               	addwfc	(_curBottomFractLimit+1)^(0+128),f
 14246                           
 14247                           ;settingsscreen.c: 49: if(curBottomFractLimit == 10)
 14248  11F8  300A               	movlw	10
 14249  11F9  0667               	xorwf	_curBottomFractLimit^(0+128),w
 14250  11FA  0468               	iorwf	(_curBottomFractLimit+1)^(0+128),w
 14251  11FB  1D03               	btfss	3,2
 14252  11FC  2A03               	goto	l7547
 14253                           
 14254                           ;settingsscreen.c: 50: {
 14255                           ;settingsscreen.c: 51: curBottomIntLimit += 1;
 14256  11FD  3001               	movlw	1
 14257  11FE  07E9               	addwf	_curBottomIntLimit^(0+128),f
 14258  11FF  3000               	movlw	0
 14259  1200  3DEA               	addwfc	(_curBottomIntLimit+1)^(0+128),f
 14260                           
 14261                           ;settingsscreen.c: 52: curBottomFractLimit = 0;
 14262  1201  01E7               	clrf	_curBottomFractLimit^(0+128)
 14263  1202  01E8               	clrf	(_curBottomFractLimit+1)^(0+128)
 14264  1203                     l7547:	
 14265                           
 14266                           ;settingsscreen.c: 53: }
 14267                           ;settingsscreen.c: 54: }
 14268                           ;settingsscreen.c: 55: SettingsScreen_Display();
 14269  1203  3188  2011         	fcall	_SettingsScreen_Display
 14270  1205  0008               	return
 14271  1206                     __end_of__SettingsScreen_UpRelease:	
 14272                           
 14273                           	psect	text36
 14274  1F0E                     __ptext36:	
 14275 ;; *************** function __MenuScreen_SetRelease *****************
 14276 ;; Defined at:
 14277 ;;		line 91 in file "menuscreen.c"
 14278 ;; Parameters:    Size  Location     Type
 14279 ;;  isFromLongPr    1   26[BANK0 ] unsigned char 
 14280 ;; Auto vars:     Size  Location     Type
 14281 ;;		None
 14282 ;; Return value:  Size  Location     Type
 14283 ;;		None               void
 14284 ;; Registers used:
 14285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14286 ;; Tracked objects:
 14287 ;;		On entry : 0/0
 14288 ;;		On exit  : 0/0
 14289 ;;		Unchanged: 0/0
 14290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14291 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14293 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14294 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14295 ;;Total ram usage:        9 bytes
 14296 ;; Hardware stack levels used:    1
 14297 ;; Hardware stack levels required when called:    8
 14298 ;; This function calls:
 14299 ;;		Absolute function
 14300 ;;		_ChangeToSettingsScreen
 14301 ;;		_LCD_ToggleBacklight
 14302 ;;		_MenuScreen_Display
 14303 ;;		___wmul
 14304 ;; This function is called by:
 14305 ;;		_MenuScreen_Init
 14306 ;;		_handleButtons
 14307 ;; This function uses a non-reentrant model
 14308 ;;
 14309                           
 14310                           
 14311                           ;psect for function __MenuScreen_SetRelease
 14312  1F0E                     __MenuScreen_SetRelease:	
 14313                           
 14314                           ;menuscreen.c: 93: if(!isFromLongPress)
 14315                           
 14316                           ;incstack = 0
 14317                           ; Regs used in __MenuScreen_SetRelease: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14318  1F0E  0020               	movlb	0	; select bank0
 14319  1F0F  083A               	movf	__MenuScreen_SetRelease@isFromLongPress,w
 14320  1F10  1D03               	btfss	3,2
 14321  1F11  2F5B               	goto	l7625
 14322                           
 14323                           ;menuscreen.c: 94: {
 14324                           ;menuscreen.c: 95: if(MainMenu[_Menu_SelectedItem].Callback != (0)) { MainMenu[_Menu_Sel
      +                          ectedItem].Callback((0)); };
 14325  1F12  087B               	movf	__Menu_SelectedItem,w
 14326  1F13  00BB               	movwf	??__MenuScreen_SetRelease
 14327  1F14  01BC               	clrf	??__MenuScreen_SetRelease+1
 14328  1F15  083B               	movf	??__MenuScreen_SetRelease,w
 14329  1F16  00A0               	movwf	___wmul@multiplier
 14330  1F17  083C               	movf	??__MenuScreen_SetRelease+1,w
 14331  1F18  00A1               	movwf	___wmul@multiplier+1
 14332  1F19  300C               	movlw	12
 14333  1F1A  00A2               	movwf	___wmul@multiplicand
 14334  1F1B  3000               	movlw	0
 14335  1F1C  00A3               	movwf	___wmul@multiplicand+1
 14336  1F1D  3198  203A  319F   	fcall	___wmul
 14337  1F20  0020               	movlb	0	; select bank0
 14338  1F21  0820               	movf	?___wmul,w
 14339  1F22  3E0A               	addlw	10
 14340  1F23  00BD               	movwf	??__MenuScreen_SetRelease+2
 14341  1F24  3000               	movlw	0
 14342  1F25  3D21               	addwfc	?___wmul+1,w
 14343  1F26  00BE               	movwf	??__MenuScreen_SetRelease+3
 14344  1F27  3078               	movlw	120
 14345  1F28  00BF               	movwf	??__MenuScreen_SetRelease+4
 14346  1F29  3027               	movlw	39
 14347  1F2A  00C0               	movwf	??__MenuScreen_SetRelease+5
 14348  1F2B  083D               	movf	??__MenuScreen_SetRelease+2,w
 14349  1F2C  073F               	addwf	??__MenuScreen_SetRelease+4,w
 14350  1F2D  0086               	movwf	6
 14351  1F2E  083E               	movf	??__MenuScreen_SetRelease+3,w
 14352  1F2F  3D40               	addwfc	??__MenuScreen_SetRelease+5,w
 14353  1F30  0087               	movwf	7
 14354  1F31  0016               	moviw fsr1++
 14355  1F32  0401               	iorwf	1,w
 14356  1F33  1903               	btfsc	3,2
 14357  1F34  0008               	return
 14358  1F35  01B7               	clrf	ChangeToSettingsScreen@param
 14359  1F36  087B               	movf	__Menu_SelectedItem,w
 14360  1F37  00BB               	movwf	??__MenuScreen_SetRelease
 14361  1F38  01BC               	clrf	??__MenuScreen_SetRelease+1
 14362  1F39  083B               	movf	??__MenuScreen_SetRelease,w
 14363  1F3A  00A0               	movwf	___wmul@multiplier
 14364  1F3B  083C               	movf	??__MenuScreen_SetRelease+1,w
 14365  1F3C  00A1               	movwf	___wmul@multiplier+1
 14366  1F3D  300C               	movlw	12
 14367  1F3E  00A2               	movwf	___wmul@multiplicand
 14368  1F3F  3000               	movlw	0
 14369  1F40  00A3               	movwf	___wmul@multiplicand+1
 14370  1F41  3198  203A  319F   	fcall	___wmul
 14371  1F44  0020               	movlb	0	; select bank0
 14372  1F45  0820               	movf	?___wmul,w
 14373  1F46  3E0A               	addlw	10
 14374  1F47  00BD               	movwf	??__MenuScreen_SetRelease+2
 14375  1F48  3000               	movlw	0
 14376  1F49  3D21               	addwfc	?___wmul+1,w
 14377  1F4A  00BE               	movwf	??__MenuScreen_SetRelease+3
 14378  1F4B  3078               	movlw	120
 14379  1F4C  00BF               	movwf	??__MenuScreen_SetRelease+4
 14380  1F4D  3027               	movlw	39
 14381  1F4E  00C0               	movwf	??__MenuScreen_SetRelease+5
 14382  1F4F  083D               	movf	??__MenuScreen_SetRelease+2,w
 14383  1F50  073F               	addwf	??__MenuScreen_SetRelease+4,w
 14384  1F51  0086               	movwf	6
 14385  1F52  083E               	movf	??__MenuScreen_SetRelease+3,w
 14386  1F53  3D40               	addwfc	??__MenuScreen_SetRelease+5,w
 14387  1F54  0087               	movwf	7
 14388  1F55  3F41               	moviw [1]fsr1
 14389  1F56  008A               	movwf	10
 14390  1F57  3F40               	moviw [0]fsr1
 14391  1F58  000A               	callw
 14392  1F59  319F               	pagesel	$
 14393                           
 14394                           ;menuscreen.c: 96: }
 14395  1F5A  0008               	return
 14396  1F5B                     l7625:	
 14397                           
 14398                           ;menuscreen.c: 97: else
 14399                           ;menuscreen.c: 98: {
 14400                           ;menuscreen.c: 100: MenuScreen_Display();
 14401  1F5B  318A  2204         	fcall	_MenuScreen_Display
 14402  1F5D  0008               	return
 14403  1F5E                     __end_of__MenuScreen_SetRelease:	
 14404                           
 14405                           	psect	text37
 14406  2739                     __ptext37:	
 14407 ;; *************** function __SettingsScreen_SetRelease *****************
 14408 ;; Defined at:
 14409 ;;		line 99 in file "settingsscreen.c"
 14410 ;; Parameters:    Size  Location     Type
 14411 ;;  isFromLongPr    1   26[BANK0 ] unsigned char 
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;		None
 14414 ;; Return value:  Size  Location     Type
 14415 ;;		None               void
 14416 ;; Registers used:
 14417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14418 ;; Tracked objects:
 14419 ;;		On entry : 0/0
 14420 ;;		On exit  : 0/0
 14421 ;;		Unchanged: 0/0
 14422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14423 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14425 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14426 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14427 ;;Total ram usage:        2 bytes
 14428 ;; Hardware stack levels used:    1
 14429 ;; Hardware stack levels required when called:    7
 14430 ;; This function calls:
 14431 ;;		_SettingsScreen_Display
 14432 ;; This function is called by:
 14433 ;;		_SettingsScreen_Init
 14434 ;;		_handleButtons
 14435 ;; This function uses a non-reentrant model
 14436 ;;
 14437                           
 14438                           
 14439                           ;psect for function __SettingsScreen_SetRelease
 14440  2739                     __SettingsScreen_SetRelease:	
 14441                           
 14442                           ;settingsscreen.c: 101: if(!isFromLongPress)
 14443                           
 14444                           ;incstack = 0
 14445                           ; Regs used in __SettingsScreen_SetRelease: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14446  2739  0020               	movlb	0	; select bank0
 14447  273A  083A               	movf	__SettingsScreen_SetRelease@isFromLongPress,w
 14448  273B  1D03               	btfss	3,2
 14449  273C  0008               	return
 14450                           
 14451                           ;settingsscreen.c: 102: {
 14452                           ;settingsscreen.c: 103: curRow = (curRow == 0 ? 1 : 0);
 14453  273D  0021               	movlb	1	; select bank1
 14454  273E  0863               	movf	_curRow^(0+128),w
 14455  273F  1D03               	btfss	3,2
 14456  2740  2F43               	goto	u9240
 14457  2741  3001               	movlw	1
 14458  2742  2F44               	goto	u9250
 14459  2743                     u9240:	
 14460  2743  3000               	movlw	0
 14461  2744                     u9250:	
 14462  2744  0020               	movlb	0	; select bank0
 14463  2745  00BB               	movwf	??__SettingsScreen_SetRelease
 14464  2746  083B               	movf	??__SettingsScreen_SetRelease,w
 14465  2747  0021               	movlb	1	; select bank1
 14466  2748  00E3               	movwf	_curRow^(0+128)
 14467                           
 14468                           ;settingsscreen.c: 104: SettingsScreen_Display();
 14469  2749  3188  2011         	fcall	_SettingsScreen_Display
 14470  274B  0008               	return
 14471  274C                     __end_of__SettingsScreen_SetRelease:	
 14472                           
 14473                           	psect	text38
 14474  19E5                     __ptext38:	
 14475 ;; *************** function _ACKAlarm *****************
 14476 ;; Defined at:
 14477 ;;		line 109 in file "alarm.c"
 14478 ;; Parameters:    Size  Location     Type
 14479 ;;		None
 14480 ;; Auto vars:     Size  Location     Type
 14481 ;;		None
 14482 ;; Return value:  Size  Location     Type
 14483 ;;		None               void
 14484 ;; Registers used:
 14485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14486 ;; Tracked objects:
 14487 ;;		On entry : 0/0
 14488 ;;		On exit  : 0/0
 14489 ;;		Unchanged: 0/0
 14490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14495 ;;Total ram usage:        0 bytes
 14496 ;; Hardware stack levels used:    1
 14497 ;; Hardware stack levels required when called:    8
 14498 ;; This function calls:
 14499 ;;		_LCDGotoXY
 14500 ;;		_LCDWriteString
 14501 ;;		__ACKLastSavedEvent
 14502 ;;		_printf
 14503 ;; This function is called by:
 14504 ;;		_main
 14505 ;;		_handleButtons
 14506 ;; This function uses a non-reentrant model
 14507 ;;
 14508                           
 14509                           
 14510                           ;psect for function _ACKAlarm
 14511  19E5                     _ACKAlarm:	
 14512                           
 14513                           ;alarm.c: 111: if (alarmOn && !alarmAckd)
 14514                           
 14515                           ;incstack = 0
 14516                           ; Regs used in _ACKAlarm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14517  19E5  0021               	movlb	1	; select bank1
 14518  19E6  0862               	movf	_alarmOn^(0+128),w	;volatile
 14519  19E7  1903               	btfsc	3,2
 14520  19E8  0008               	return
 14521  19E9  0022               	movlb	2	; select bank2
 14522  19EA  084D               	movf	_alarmAckd^(0+256),w
 14523  19EB  1D03               	btfss	3,2
 14524  19EC  0008               	return
 14525                           
 14526                           ;alarm.c: 112: {
 14527                           ;alarm.c: 113: printf("Alarm ACK'd\r\n");
 14528  19ED  30F0               	movlw	low (STR_45| (0+32768))
 14529  19EE  0020               	movlb	0	; select bank0
 14530  19EF  00B0               	movwf	printf@f
 14531  19F0  3084               	movlw	high (STR_45| (0+32768))
 14532  19F1  00B1               	movwf	printf@f+1
 14533  19F2  3180  2096  3199   	fcall	_printf
 14534                           
 14535                           ;alarm.c: 115: { LCDGotoXY(0,1); LCDWriteString("     ");};
 14536  19F5  0020               	movlb	0	; select bank0
 14537  19F6  01A4               	clrf	LCDGotoXY@y
 14538  19F7  0AA4               	incf	LCDGotoXY@y,f
 14539  19F8  3000               	movlw	0
 14540  19F9  3199  210B  3199   	fcall	_LCDGotoXY
 14541  19FC  30A0               	movlw	low (STR_46| (0+32768))
 14542  19FD  0020               	movlb	0	; select bank0
 14543  19FE  00A6               	movwf	LCDWriteString@msg
 14544  19FF  3085               	movlw	high (STR_46| (0+32768))
 14545  1A00  00A7               	movwf	LCDWriteString@msg+1
 14546  1A01  319C  2465  3199   	fcall	_LCDWriteString
 14547                           
 14548                           ;alarm.c: 116: alarmAckd = 1;
 14549  1A04  0022               	movlb	2	; select bank2
 14550  1A05  01CD               	clrf	_alarmAckd^(0+256)
 14551  1A06  0ACD               	incf	_alarmAckd^(0+256),f
 14552                           
 14553                           ;alarm.c: 117: _ACKLastSavedEvent();
 14554  1A07  319B  23EB  3199   	fcall	__ACKLastSavedEvent
 14555                           
 14556                           ;alarm.c: 118: if(RC5)
 14557  1A0A  0020               	movlb	0	; select bank0
 14558  1A0B  1E8E               	btfss	14,5	;volatile
 14559  1A0C  0008               	return
 14560                           
 14561                           ;alarm.c: 119: {
 14562                           ;alarm.c: 120: do { LATC5 = 0; } while(0);
 14563  1A0D  0022               	movlb	2	; select bank2
 14564  1A0E  128E               	bcf	14,5	;volatile
 14565  1A0F  0008               	return
 14566  1A10                     __end_of_ACKAlarm:	
 14567                           
 14568                           	psect	text39
 14569  2622                     __ptext39:	
 14570 ;; *************** function __SettingsScreen_SetLongPress *****************
 14571 ;; Defined at:
 14572 ;;		line 110 in file "settingsscreen.c"
 14573 ;; Parameters:    Size  Location     Type
 14574 ;;		None
 14575 ;; Auto vars:     Size  Location     Type
 14576 ;;		None
 14577 ;; Return value:  Size  Location     Type
 14578 ;;		None               void
 14579 ;; Registers used:
 14580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14581 ;; Tracked objects:
 14582 ;;		On entry : 0/0
 14583 ;;		On exit  : 0/0
 14584 ;;		Unchanged: 0/0
 14585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14590 ;;Total ram usage:        0 bytes
 14591 ;; Hardware stack levels used:    1
 14592 ;; Hardware stack levels required when called:    8
 14593 ;; This function calls:
 14594 ;;		_FlashLed100ms
 14595 ;;		_LeaveSettingsScreen
 14596 ;; This function is called by:
 14597 ;;		_SettingsScreen_Init
 14598 ;;		_handleButtons
 14599 ;; This function uses a non-reentrant model
 14600 ;;
 14601                           
 14602                           
 14603                           ;psect for function __SettingsScreen_SetLongPress
 14604  2622                     __SettingsScreen_SetLongPress:	
 14605                           
 14606                           ;settingsscreen.c: 112: FlashLed100ms();
 14607                           
 14608                           ;incstack = 0
 14609                           ; Regs used in __SettingsScreen_SetLongPress: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 14610  2622  31A6  26F2  31A6   	fcall	_FlashLed100ms
 14611                           
 14612                           ;settingsscreen.c: 113: LeaveSettingsScreen();
 14613  2625  3192  2265         	fcall	_LeaveSettingsScreen
 14614  2627  0008               	return
 14615  2628                     __end_of__SettingsScreen_SetLongPress:	
 14616                           
 14617                           	psect	text40
 14618  1265                     __ptext40:	
 14619 ;; *************** function _LeaveSettingsScreen *****************
 14620 ;; Defined at:
 14621 ;;		line 173 in file "settingsscreen.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;		None
 14624 ;; Auto vars:     Size  Location     Type
 14625 ;;		None
 14626 ;; Return value:  Size  Location     Type
 14627 ;;		None               void
 14628 ;; Registers used:
 14629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14630 ;; Tracked objects:
 14631 ;;		On entry : 0/0
 14632 ;;		On exit  : 0/0
 14633 ;;		Unchanged: 0/0
 14634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14639 ;;Total ram usage:        0 bytes
 14640 ;; Hardware stack levels used:    1
 14641 ;; Hardware stack levels required when called:    7
 14642 ;; This function calls:
 14643 ;;		_Config_SetBottomLimit
 14644 ;;		_Config_SetUpLimit
 14645 ;; This function is called by:
 14646 ;;		__SettingsScreen_SetLongPress
 14647 ;; This function uses a non-reentrant model
 14648 ;;
 14649                           
 14650                           
 14651                           ;psect for function _LeaveSettingsScreen
 14652  1265                     _LeaveSettingsScreen:	
 14653                           
 14654                           ;settingsscreen.c: 175: if( oldUpIntLimit != curUpIntLimit ||
 14655                           ;settingsscreen.c: 176: oldUpFractLimit != curUpFractLimit)
 14656                           
 14657                           ;incstack = 0
 14658                           ; Regs used in _LeaveSettingsScreen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14659  1265  0021               	movlb	1	; select bank1
 14660  1266  086E               	movf	(_curUpIntLimit+1)^(0+128),w
 14661  1267  0022               	movlb	2	; select bank2
 14662  1268  063F               	xorwf	(_oldUpIntLimit+1)^(0+256),w
 14663  1269  1D03               	skipz
 14664  126A  2A6F               	goto	u8785
 14665  126B  0021               	movlb	1	; select bank1
 14666  126C  086D               	movf	_curUpIntLimit^(0+128),w
 14667  126D  0022               	movlb	2	; select bank2
 14668  126E  063E               	xorwf	_oldUpIntLimit^(0+256),w
 14669  126F                     u8785:	
 14670  126F  1D03               	skipz
 14671  1270  2A7D               	goto	l7319
 14672  1271  0021               	movlb	1	; select bank1
 14673  1272  086C               	movf	(_curUpFractLimit+1)^(0+128),w
 14674  1273  0022               	movlb	2	; select bank2
 14675  1274  063D               	xorwf	(_oldUpFractLimit+1)^(0+256),w
 14676  1275  1D03               	skipz
 14677  1276  2A7B               	goto	u8795
 14678  1277  0021               	movlb	1	; select bank1
 14679  1278  086B               	movf	_curUpFractLimit^(0+128),w
 14680  1279  0022               	movlb	2	; select bank2
 14681  127A  063C               	xorwf	_oldUpFractLimit^(0+256),w
 14682  127B                     u8795:	
 14683  127B  1903               	skipnz
 14684  127C  2A90               	goto	l7321
 14685  127D                     l7319:	
 14686                           
 14687                           ;settingsscreen.c: 177: {
 14688                           ;settingsscreen.c: 178: Config_SetUpLimit(curUpIntLimit, curUpFractLimit);
 14689  127D  0021               	movlb	1	; select bank1
 14690  127E  086E               	movf	(_curUpIntLimit+1)^(0+128),w
 14691  127F  0020               	movlb	0	; select bank0
 14692  1280  00E8               	movwf	Config_SetUpLimit@intLimit+1
 14693  1281  0021               	movlb	1	; select bank1
 14694  1282  086D               	movf	_curUpIntLimit^(0+128),w
 14695  1283  0020               	movlb	0	; select bank0
 14696  1284  00E7               	movwf	Config_SetUpLimit@intLimit
 14697  1285  0021               	movlb	1	; select bank1
 14698  1286  086C               	movf	(_curUpFractLimit+1)^(0+128),w
 14699  1287  0020               	movlb	0	; select bank0
 14700  1288  00EA               	movwf	Config_SetUpLimit@fractLimit+1
 14701  1289  0021               	movlb	1	; select bank1
 14702  128A  086B               	movf	_curUpFractLimit^(0+128),w
 14703  128B  0020               	movlb	0	; select bank0
 14704  128C  00E9               	movwf	Config_SetUpLimit@fractLimit
 14705  128D  3193  23AF  3192   	fcall	_Config_SetUpLimit
 14706  1290                     l7321:	
 14707                           
 14708                           ;settingsscreen.c: 179: }
 14709                           ;settingsscreen.c: 181: if( oldBottomIntLimit != curBottomIntLimit ||
 14710                           ;settingsscreen.c: 182: oldBottomFractLimit != curBottomFractLimit)
 14711  1290  0021               	movlb	1	; select bank1
 14712  1291  086A               	movf	(_curBottomIntLimit+1)^(0+128),w
 14713  1292  0022               	movlb	2	; select bank2
 14714  1293  063B               	xorwf	(_oldBottomIntLimit+1)^(0+256),w
 14715  1294  1D03               	skipz
 14716  1295  2A9A               	goto	u8805
 14717  1296  0021               	movlb	1	; select bank1
 14718  1297  0869               	movf	_curBottomIntLimit^(0+128),w
 14719  1298  0022               	movlb	2	; select bank2
 14720  1299  063A               	xorwf	_oldBottomIntLimit^(0+256),w
 14721  129A                     u8805:	
 14722  129A  1D03               	skipz
 14723  129B  2AA8               	goto	l7325
 14724  129C  0021               	movlb	1	; select bank1
 14725  129D  0868               	movf	(_curBottomFractLimit+1)^(0+128),w
 14726  129E  0022               	movlb	2	; select bank2
 14727  129F  0639               	xorwf	(_oldBottomFractLimit+1)^(0+256),w
 14728  12A0  1D03               	skipz
 14729  12A1  2AA6               	goto	u8815
 14730  12A2  0021               	movlb	1	; select bank1
 14731  12A3  0867               	movf	_curBottomFractLimit^(0+128),w
 14732  12A4  0022               	movlb	2	; select bank2
 14733  12A5  0638               	xorwf	_oldBottomFractLimit^(0+256),w
 14734  12A6                     u8815:	
 14735  12A6  1903               	skipnz
 14736  12A7  2ABA               	goto	l7327
 14737  12A8                     l7325:	
 14738                           
 14739                           ;settingsscreen.c: 183: {
 14740                           ;settingsscreen.c: 184: Config_SetBottomLimit(curBottomIntLimit, curBottomFractLimit);
 14741  12A8  0021               	movlb	1	; select bank1
 14742  12A9  086A               	movf	(_curBottomIntLimit+1)^(0+128),w
 14743  12AA  0020               	movlb	0	; select bank0
 14744  12AB  00E8               	movwf	Config_SetBottomLimit@intLimit+1
 14745  12AC  0021               	movlb	1	; select bank1
 14746  12AD  0869               	movf	_curBottomIntLimit^(0+128),w
 14747  12AE  0020               	movlb	0	; select bank0
 14748  12AF  00E7               	movwf	Config_SetBottomLimit@intLimit
 14749  12B0  0021               	movlb	1	; select bank1
 14750  12B1  0868               	movf	(_curBottomFractLimit+1)^(0+128),w
 14751  12B2  0020               	movlb	0	; select bank0
 14752  12B3  00EA               	movwf	Config_SetBottomLimit@fractLimit+1
 14753  12B4  0021               	movlb	1	; select bank1
 14754  12B5  0867               	movf	_curBottomFractLimit^(0+128),w
 14755  12B6  0020               	movlb	0	; select bank0
 14756  12B7  00E9               	movwf	Config_SetBottomLimit@fractLimit
 14757  12B8  3194  24B7         	fcall	_Config_SetBottomLimit
 14758  12BA                     l7327:	
 14759                           
 14760                           ;settingsscreen.c: 185: }
 14761                           ;settingsscreen.c: 187: ButtonUp_ReleaseCB = prevUpReleaseCB;
 14762  12BA  0022               	movlb	2	; select bank2
 14763  12BB  0847               	movf	(_prevUpReleaseCB+1)^(0+256),w
 14764  12BC  00B5               	movwf	(_ButtonUp_ReleaseCB+1)^(0+256)
 14765  12BD  0846               	movf	_prevUpReleaseCB^(0+256),w
 14766  12BE  00B4               	movwf	_ButtonUp_ReleaseCB^(0+256)
 14767                           
 14768                           ;settingsscreen.c: 188: ButtonDown_ReleaseCB = prevDownReleaseCB;
 14769  12BF  0841               	movf	(_prevDownReleaseCB+1)^(0+256),w
 14770  12C0  00A9               	movwf	(_ButtonDown_ReleaseCB+1)^(0+256)
 14771  12C1  0840               	movf	_prevDownReleaseCB^(0+256),w
 14772  12C2  00A8               	movwf	_ButtonDown_ReleaseCB^(0+256)
 14773                           
 14774                           ;settingsscreen.c: 189: ButtonSet_ReleaseCB = prevSetReleaseCB;
 14775  12C3  0845               	movf	(_prevSetReleaseCB+1)^(0+256),w
 14776  12C4  00AF               	movwf	(_ButtonSet_ReleaseCB+1)^(0+256)
 14777  12C5  0844               	movf	_prevSetReleaseCB^(0+256),w
 14778  12C6  00AE               	movwf	_ButtonSet_ReleaseCB^(0+256)
 14779                           
 14780                           ;settingsscreen.c: 190: ButtonSet_LongPressCB = prevSetLongPressCB;
 14781  12C7  0843               	movf	(_prevSetLongPressCB+1)^(0+256),w
 14782  12C8  00AB               	movwf	(_ButtonSet_LongPressCB+1)^(0+256)
 14783  12C9  0842               	movf	_prevSetLongPressCB^(0+256),w
 14784  12CA  00AA               	movwf	_ButtonSet_LongPressCB^(0+256)
 14785  12CB  0008               	return
 14786  12CC                     __end_of_LeaveSettingsScreen:	
 14787                           
 14788                           	psect	text41
 14789  13AF                     __ptext41:	
 14790 ;; *************** function _Config_SetUpLimit *****************
 14791 ;; Defined at:
 14792 ;;		line 27 in file "config.c"
 14793 ;; Parameters:    Size  Location     Type
 14794 ;;  intLimit        2   71[BANK0 ] int 
 14795 ;;  fractLimit      2   73[BANK0 ] int 
 14796 ;; Auto vars:     Size  Location     Type
 14797 ;;  writeData       4    0[BANK1 ] unsigned char [4]
 14798 ;;  success         1    4[BANK1 ] unsigned char 
 14799 ;; Return value:  Size  Location     Type
 14800 ;;                  1    wreg      unsigned char 
 14801 ;; Registers used:
 14802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14803 ;; Tracked objects:
 14804 ;;		On entry : 0/0
 14805 ;;		On exit  : 0/0
 14806 ;;		Unchanged: 0/0
 14807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14808 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14809 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14810 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14811 ;;      Totals:         0       6       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14812 ;;Total ram usage:       11 bytes
 14813 ;; Hardware stack levels used:    1
 14814 ;; Hardware stack levels required when called:    6
 14815 ;; This function calls:
 14816 ;;		_EEPROM_25AA040A_WriteBuffer
 14817 ;; This function is called by:
 14818 ;;		_processCommand
 14819 ;;		_LeaveSettingsScreen
 14820 ;; This function uses a non-reentrant model
 14821 ;;
 14822                           
 14823                           
 14824                           ;psect for function _Config_SetUpLimit
 14825  13AF                     _Config_SetUpLimit:	
 14826                           
 14827                           ;config.c: 29: bool success = 0;
 14828                           
 14829                           ;incstack = 0
 14830                           ; Regs used in _Config_SetUpLimit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14831  13AF  0021               	movlb	1	; select bank1
 14832  13B0  01A4               	clrf	Config_SetUpLimit@success^(0+128)
 14833                           
 14834                           ;config.c: 30: if( (intLimit < 85 ||
 14835                           ;config.c: 31: (intLimit == 85 && fractLimit == 0)) &&
 14836                           ;config.c: 32: (intLimit > BottomIntLimitRT ||
 14837                           ;config.c: 33: (intLimit == BottomIntLimitRT && fractLimit > BottomFractLimitRT)))
 14838  13B1  0020               	movlb	0	; select bank0
 14839  13B2  0868               	movf	Config_SetUpLimit@intLimit+1,w
 14840  13B3  3A80               	xorlw	128
 14841  13B4  00EB               	movwf	??_Config_SetUpLimit
 14842  13B5  3080               	movlw	128
 14843  13B6  026B               	subwf	??_Config_SetUpLimit,w
 14844  13B7  1D03               	skipz
 14845  13B8  2BBB               	goto	u8325
 14846  13B9  3055               	movlw	85
 14847  13BA  0267               	subwf	Config_SetUpLimit@intLimit,w
 14848  13BB                     u8325:	
 14849  13BB  1C03               	skipc
 14850  13BC  2BC7               	goto	l7005
 14851  13BD  3055               	movlw	85
 14852  13BE  0020               	movlb	0	; select bank0
 14853  13BF  0667               	xorwf	Config_SetUpLimit@intLimit,w
 14854  13C0  0468               	iorwf	Config_SetUpLimit@intLimit+1,w
 14855  13C1  1D03               	btfss	3,2
 14856  13C2  2C2A               	goto	l7021
 14857  13C3  0869               	movf	Config_SetUpLimit@fractLimit,w
 14858  13C4  046A               	iorwf	Config_SetUpLimit@fractLimit+1,w
 14859  13C5  1D03               	btfss	3,2
 14860  13C6  2C2A               	goto	l7021
 14861  13C7                     l7005:	
 14862  13C7  0022               	movlb	2	; select bank2
 14863  13C8  0863               	movf	(_BottomIntLimitRT+1)^(0+256),w
 14864  13C9  3A80               	xorlw	128
 14865  13CA  0020               	movlb	0	; select bank0
 14866  13CB  00EB               	movwf	??_Config_SetUpLimit
 14867  13CC  0868               	movf	Config_SetUpLimit@intLimit+1,w
 14868  13CD  3A80               	xorlw	128
 14869  13CE  026B               	subwf	??_Config_SetUpLimit,w
 14870  13CF  1D03               	skipz
 14871  13D0  2BD4               	goto	u8355
 14872  13D1  0867               	movf	Config_SetUpLimit@intLimit,w
 14873  13D2  0022               	movlb	2	; select bank2
 14874  13D3  0262               	subwf	_BottomIntLimitRT^(0+256),w
 14875  13D4                     u8355:	
 14876  13D4  1C03               	skipc
 14877  13D5  2BF1               	goto	l7011
 14878  13D6  0022               	movlb	2	; select bank2
 14879  13D7  0863               	movf	(_BottomIntLimitRT+1)^(0+256),w
 14880  13D8  0020               	movlb	0	; select bank0
 14881  13D9  0668               	xorwf	Config_SetUpLimit@intLimit+1,w
 14882  13DA  1D03               	skipz
 14883  13DB  2BE0               	goto	u8365
 14884  13DC  0022               	movlb	2	; select bank2
 14885  13DD  0862               	movf	_BottomIntLimitRT^(0+256),w
 14886  13DE  0020               	movlb	0	; select bank0
 14887  13DF  0667               	xorwf	Config_SetUpLimit@intLimit,w
 14888  13E0                     u8365:	
 14889  13E0  1D03               	skipz
 14890  13E1  2C2A               	goto	l7021
 14891  13E2  0022               	movlb	2	; select bank2
 14892  13E3  0861               	movf	(_BottomFractLimitRT+1)^(0+256),w
 14893  13E4  3A80               	xorlw	128
 14894  13E5  0020               	movlb	0	; select bank0
 14895  13E6  00EB               	movwf	??_Config_SetUpLimit
 14896  13E7  086A               	movf	Config_SetUpLimit@fractLimit+1,w
 14897  13E8  3A80               	xorlw	128
 14898  13E9  026B               	subwf	??_Config_SetUpLimit,w
 14899  13EA  1D03               	skipz
 14900  13EB  2BEF               	goto	u8375
 14901  13EC  0869               	movf	Config_SetUpLimit@fractLimit,w
 14902  13ED  0022               	movlb	2	; select bank2
 14903  13EE  0260               	subwf	_BottomFractLimitRT^(0+256),w
 14904  13EF                     u8375:	
 14905  13EF  1803               	skipnc
 14906  13F0  2C2A               	goto	l7021
 14907  13F1                     l7011:	
 14908                           
 14909                           ;config.c: 34: {
 14910                           ;config.c: 36: UpIntLimitRT = intLimit;
 14911  13F1  0020               	movlb	0	; select bank0
 14912  13F2  0868               	movf	Config_SetUpLimit@intLimit+1,w
 14913  13F3  0021               	movlb	1	; select bank1
 14914  13F4  00E6               	movwf	(_UpIntLimitRT+1)^(0+128)
 14915  13F5  0020               	movlb	0	; select bank0
 14916  13F6  0867               	movf	Config_SetUpLimit@intLimit,w
 14917  13F7  0021               	movlb	1	; select bank1
 14918  13F8  00E5               	movwf	_UpIntLimitRT^(0+128)
 14919                           
 14920                           ;config.c: 37: UpFractLimitRT = fractLimit;
 14921  13F9  0020               	movlb	0	; select bank0
 14922  13FA  086A               	movf	Config_SetUpLimit@fractLimit+1,w
 14923  13FB  0022               	movlb	2	; select bank2
 14924  13FC  00E7               	movwf	(_UpFractLimitRT+1)^(0+256)
 14925  13FD  0020               	movlb	0	; select bank0
 14926  13FE  0869               	movf	Config_SetUpLimit@fractLimit,w
 14927  13FF  0022               	movlb	2	; select bank2
 14928  1400  00E6               	movwf	_UpFractLimitRT^(0+256)
 14929                           
 14930                           ;config.c: 39: uint8_t writeData[4];
 14931                           ;config.c: 40: writeData[0] = intLimit & 0xFF;
 14932  1401  0020               	movlb	0	; select bank0
 14933  1402  0867               	movf	Config_SetUpLimit@intLimit,w
 14934  1403  00EB               	movwf	??_Config_SetUpLimit
 14935  1404  086B               	movf	??_Config_SetUpLimit,w
 14936  1405  0021               	movlb	1	; select bank1
 14937  1406  00A0               	movwf	Config_SetUpLimit@writeData^(0+128)
 14938                           
 14939                           ;config.c: 41: writeData[1] = intLimit >> 8;
 14940  1407  0020               	movlb	0	; select bank0
 14941  1408  0868               	movf	Config_SetUpLimit@intLimit+1,w
 14942  1409  00EB               	movwf	??_Config_SetUpLimit
 14943  140A  086B               	movf	??_Config_SetUpLimit,w
 14944  140B  0021               	movlb	1	; select bank1
 14945  140C  00A1               	movwf	(Config_SetUpLimit@writeData^(0+128)+1)
 14946                           
 14947                           ;config.c: 42: writeData[2] = fractLimit & 0xFF;
 14948  140D  0020               	movlb	0	; select bank0
 14949  140E  0869               	movf	Config_SetUpLimit@fractLimit,w
 14950  140F  00EB               	movwf	??_Config_SetUpLimit
 14951  1410  086B               	movf	??_Config_SetUpLimit,w
 14952  1411  0021               	movlb	1	; select bank1
 14953  1412  00A2               	movwf	(Config_SetUpLimit@writeData^(0+128)+2)
 14954                           
 14955                           ;config.c: 43: writeData[3] = fractLimit >> 8;
 14956  1413  0020               	movlb	0	; select bank0
 14957  1414  086A               	movf	Config_SetUpLimit@fractLimit+1,w
 14958  1415  00EB               	movwf	??_Config_SetUpLimit
 14959  1416  086B               	movf	??_Config_SetUpLimit,w
 14960  1417  0021               	movlb	1	; select bank1
 14961  1418  00A3               	movwf	(Config_SetUpLimit@writeData^(0+128)+3)
 14962                           
 14963                           ;config.c: 44: EEPROM_25AA040A_WriteBuffer(0x00, writeData, 4);
 14964  1419  3000               	movlw	0
 14965  141A  0020               	movlb	0	; select bank0
 14966  141B  00D6               	movwf	EEPROM_25AA040A_WriteBuffer@address
 14967  141C  00D7               	movwf	EEPROM_25AA040A_WriteBuffer@address+1
 14968  141D  30A0               	movlw	(low (Config_SetUpLimit@writeData| 0))& (0+255)
 14969  141E  00EB               	movwf	??_Config_SetUpLimit
 14970  141F  086B               	movf	??_Config_SetUpLimit,w
 14971  1420  00D8               	movwf	EEPROM_25AA040A_WriteBuffer@data
 14972  1421  3004               	movlw	4
 14973  1422  00EC               	movwf	??_Config_SetUpLimit+1
 14974  1423  086C               	movf	??_Config_SetUpLimit+1,w
 14975  1424  00D9               	movwf	EEPROM_25AA040A_WriteBuffer@dataLength
 14976  1425  3197  2724         	fcall	_EEPROM_25AA040A_WriteBuffer
 14977                           
 14978                           ;config.c: 46: success = 1;
 14979  1427  0021               	movlb	1	; select bank1
 14980  1428  01A4               	clrf	Config_SetUpLimit@success^(0+128)
 14981  1429  0AA4               	incf	Config_SetUpLimit@success^(0+128),f
 14982  142A                     l7021:	
 14983                           
 14984                           ;config.c: 47: }
 14985                           ;config.c: 48: return success;
 14986  142A  0021               	movlb	1	; select bank1
 14987  142B  0824               	movf	Config_SetUpLimit@success^(0+128),w
 14988  142C  0008               	return
 14989  142D                     __end_of_Config_SetUpLimit:	
 14990                           
 14991                           	psect	text42
 14992  14B7                     __ptext42:	
 14993 ;; *************** function _Config_SetBottomLimit *****************
 14994 ;; Defined at:
 14995 ;;		line 53 in file "config.c"
 14996 ;; Parameters:    Size  Location     Type
 14997 ;;  intLimit        2   71[BANK0 ] int 
 14998 ;;  fractLimit      2   73[BANK0 ] int 
 14999 ;; Auto vars:     Size  Location     Type
 15000 ;;  writeData       4    0[BANK1 ] unsigned char [4]
 15001 ;;  success         1    4[BANK1 ] unsigned char 
 15002 ;; Return value:  Size  Location     Type
 15003 ;;                  1    wreg      unsigned char 
 15004 ;; Registers used:
 15005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15006 ;; Tracked objects:
 15007 ;;		On entry : 0/0
 15008 ;;		On exit  : 0/0
 15009 ;;		Unchanged: 0/0
 15010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15012 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15013 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15014 ;;      Totals:         0       6       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15015 ;;Total ram usage:       11 bytes
 15016 ;; Hardware stack levels used:    1
 15017 ;; Hardware stack levels required when called:    6
 15018 ;; This function calls:
 15019 ;;		_EEPROM_25AA040A_WriteBuffer
 15020 ;; This function is called by:
 15021 ;;		_processCommand
 15022 ;;		_LeaveSettingsScreen
 15023 ;; This function uses a non-reentrant model
 15024 ;;
 15025                           
 15026                           
 15027                           ;psect for function _Config_SetBottomLimit
 15028  14B7                     _Config_SetBottomLimit:	
 15029                           
 15030                           ;config.c: 55: bool success = 0;
 15031                           
 15032                           ;incstack = 0
 15033                           ; Regs used in _Config_SetBottomLimit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15034  14B7  0021               	movlb	1	; select bank1
 15035  14B8  01A4               	clrf	Config_SetBottomLimit@success^(0+128)
 15036                           
 15037                           ;config.c: 56: if( (intLimit > -10 ||
 15038                           ;config.c: 57: (intLimit == -10 && fractLimit > 0)) &&
 15039                           ;config.c: 58: (intLimit < UpIntLimitRT ||
 15040                           ;config.c: 59: (intLimit == UpIntLimitRT && fractLimit < UpFractLimitRT)))
 15041  14B9  0020               	movlb	0	; select bank0
 15042  14BA  0868               	movf	Config_SetBottomLimit@intLimit+1,w
 15043  14BB  3A80               	xorlw	128
 15044  14BC  00EB               	movwf	??_Config_SetBottomLimit
 15045  14BD  307F               	movlw	127
 15046  14BE  026B               	subwf	??_Config_SetBottomLimit,w
 15047  14BF  1D03               	skipz
 15048  14C0  2CC3               	goto	u8385
 15049  14C1  30F7               	movlw	247
 15050  14C2  0267               	subwf	Config_SetBottomLimit@intLimit,w
 15051  14C3                     u8385:	
 15052  14C3  1803               	skipnc
 15053  14C4  2CD8               	goto	l7033
 15054  14C5  30F6               	movlw	246
 15055  14C6  0020               	movlb	0	; select bank0
 15056  14C7  0667               	xorwf	Config_SetBottomLimit@intLimit,w
 15057  14C8  1D03               	skipz
 15058  14C9  2D3F               	goto	l7049
 15059  14CA  0A68               	incf	Config_SetBottomLimit@intLimit+1,w
 15060  14CB  1D03               	btfss	3,2
 15061  14CC  2D3F               	goto	l7049
 15062  14CD  086A               	movf	Config_SetBottomLimit@fractLimit+1,w
 15063  14CE  3A80               	xorlw	128
 15064  14CF  00EB               	movwf	??_Config_SetBottomLimit
 15065  14D0  3080               	movlw	128
 15066  14D1  026B               	subwf	??_Config_SetBottomLimit,w
 15067  14D2  1D03               	skipz
 15068  14D3  2CD6               	goto	u8405
 15069  14D4  3001               	movlw	1
 15070  14D5  0269               	subwf	Config_SetBottomLimit@fractLimit,w
 15071  14D6                     u8405:	
 15072  14D6  1C03               	skipc
 15073  14D7  2D3F               	goto	l7049
 15074  14D8                     l7033:	
 15075  14D8  0020               	movlb	0	; select bank0
 15076  14D9  0868               	movf	Config_SetBottomLimit@intLimit+1,w
 15077  14DA  3A80               	xorlw	128
 15078  14DB  00EB               	movwf	??_Config_SetBottomLimit
 15079  14DC  0021               	movlb	1	; select bank1
 15080  14DD  0866               	movf	(_UpIntLimitRT+1)^(0+128),w
 15081  14DE  3A80               	xorlw	128
 15082  14DF  0020               	movlb	0	; select bank0
 15083  14E0  026B               	subwf	??_Config_SetBottomLimit,w
 15084  14E1  1D03               	skipz
 15085  14E2  2CE7               	goto	u8415
 15086  14E3  0021               	movlb	1	; select bank1
 15087  14E4  0865               	movf	_UpIntLimitRT^(0+128),w
 15088  14E5  0020               	movlb	0	; select bank0
 15089  14E6  0267               	subwf	Config_SetBottomLimit@intLimit,w
 15090  14E7                     u8415:	
 15091  14E7  1C03               	skipc
 15092  14E8  2D05               	goto	l7039
 15093  14E9  0021               	movlb	1	; select bank1
 15094  14EA  0866               	movf	(_UpIntLimitRT+1)^(0+128),w
 15095  14EB  0020               	movlb	0	; select bank0
 15096  14EC  0668               	xorwf	Config_SetBottomLimit@intLimit+1,w
 15097  14ED  1D03               	skipz
 15098  14EE  2CF3               	goto	u8425
 15099  14EF  0021               	movlb	1	; select bank1
 15100  14F0  0865               	movf	_UpIntLimitRT^(0+128),w
 15101  14F1  0020               	movlb	0	; select bank0
 15102  14F2  0667               	xorwf	Config_SetBottomLimit@intLimit,w
 15103  14F3                     u8425:	
 15104  14F3  1D03               	skipz
 15105  14F4  2D3F               	goto	l7049
 15106  14F5  086A               	movf	Config_SetBottomLimit@fractLimit+1,w
 15107  14F6  3A80               	xorlw	128
 15108  14F7  00EB               	movwf	??_Config_SetBottomLimit
 15109  14F8  0022               	movlb	2	; select bank2
 15110  14F9  0867               	movf	(_UpFractLimitRT+1)^(0+256),w
 15111  14FA  3A80               	xorlw	128
 15112  14FB  0020               	movlb	0	; select bank0
 15113  14FC  026B               	subwf	??_Config_SetBottomLimit,w
 15114  14FD  1D03               	skipz
 15115  14FE  2D03               	goto	u8435
 15116  14FF  0022               	movlb	2	; select bank2
 15117  1500  0866               	movf	_UpFractLimitRT^(0+256),w
 15118  1501  0020               	movlb	0	; select bank0
 15119  1502  0269               	subwf	Config_SetBottomLimit@fractLimit,w
 15120  1503                     u8435:	
 15121  1503  1803               	skipnc
 15122  1504  2D3F               	goto	l7049
 15123  1505                     l7039:	
 15124                           
 15125                           ;config.c: 60: {
 15126                           ;config.c: 62: BottomIntLimitRT = intLimit;
 15127  1505  0020               	movlb	0	; select bank0
 15128  1506  0868               	movf	Config_SetBottomLimit@intLimit+1,w
 15129  1507  0022               	movlb	2	; select bank2
 15130  1508  00E3               	movwf	(_BottomIntLimitRT+1)^(0+256)
 15131  1509  0020               	movlb	0	; select bank0
 15132  150A  0867               	movf	Config_SetBottomLimit@intLimit,w
 15133  150B  0022               	movlb	2	; select bank2
 15134  150C  00E2               	movwf	_BottomIntLimitRT^(0+256)
 15135                           
 15136                           ;config.c: 63: BottomFractLimitRT = fractLimit;
 15137  150D  0020               	movlb	0	; select bank0
 15138  150E  086A               	movf	Config_SetBottomLimit@fractLimit+1,w
 15139  150F  0022               	movlb	2	; select bank2
 15140  1510  00E1               	movwf	(_BottomFractLimitRT+1)^(0+256)
 15141  1511  0020               	movlb	0	; select bank0
 15142  1512  0869               	movf	Config_SetBottomLimit@fractLimit,w
 15143  1513  0022               	movlb	2	; select bank2
 15144  1514  00E0               	movwf	_BottomFractLimitRT^(0+256)
 15145                           
 15146                           ;config.c: 65: uint8_t writeData[4];
 15147                           ;config.c: 66: writeData[0] = intLimit & 0xFF;
 15148  1515  0020               	movlb	0	; select bank0
 15149  1516  0867               	movf	Config_SetBottomLimit@intLimit,w
 15150  1517  00EB               	movwf	??_Config_SetBottomLimit
 15151  1518  086B               	movf	??_Config_SetBottomLimit,w
 15152  1519  0021               	movlb	1	; select bank1
 15153  151A  00A0               	movwf	Config_SetBottomLimit@writeData^(0+128)
 15154                           
 15155                           ;config.c: 67: writeData[1] = intLimit >> 8;
 15156  151B  0020               	movlb	0	; select bank0
 15157  151C  0868               	movf	Config_SetBottomLimit@intLimit+1,w
 15158  151D  00EB               	movwf	??_Config_SetBottomLimit
 15159  151E  086B               	movf	??_Config_SetBottomLimit,w
 15160  151F  0021               	movlb	1	; select bank1
 15161  1520  00A1               	movwf	(Config_SetBottomLimit@writeData^(0+128)+1)
 15162                           
 15163                           ;config.c: 68: writeData[2] = fractLimit & 0xFF;
 15164  1521  0020               	movlb	0	; select bank0
 15165  1522  0869               	movf	Config_SetBottomLimit@fractLimit,w
 15166  1523  00EB               	movwf	??_Config_SetBottomLimit
 15167  1524  086B               	movf	??_Config_SetBottomLimit,w
 15168  1525  0021               	movlb	1	; select bank1
 15169  1526  00A2               	movwf	(Config_SetBottomLimit@writeData^(0+128)+2)
 15170                           
 15171                           ;config.c: 69: writeData[3] = fractLimit >> 8;
 15172  1527  0020               	movlb	0	; select bank0
 15173  1528  086A               	movf	Config_SetBottomLimit@fractLimit+1,w
 15174  1529  00EB               	movwf	??_Config_SetBottomLimit
 15175  152A  086B               	movf	??_Config_SetBottomLimit,w
 15176  152B  0021               	movlb	1	; select bank1
 15177  152C  00A3               	movwf	(Config_SetBottomLimit@writeData^(0+128)+3)
 15178                           
 15179                           ;config.c: 70: EEPROM_25AA040A_WriteBuffer(0x04, writeData, 4);
 15180  152D  3004               	movlw	4
 15181  152E  0020               	movlb	0	; select bank0
 15182  152F  00D6               	movwf	EEPROM_25AA040A_WriteBuffer@address
 15183  1530  3000               	movlw	0
 15184  1531  00D7               	movwf	EEPROM_25AA040A_WriteBuffer@address+1
 15185  1532  30A0               	movlw	(low (Config_SetBottomLimit@writeData| 0))& (0+255)
 15186  1533  00EB               	movwf	??_Config_SetBottomLimit
 15187  1534  086B               	movf	??_Config_SetBottomLimit,w
 15188  1535  00D8               	movwf	EEPROM_25AA040A_WriteBuffer@data
 15189  1536  3004               	movlw	4
 15190  1537  00EC               	movwf	??_Config_SetBottomLimit+1
 15191  1538  086C               	movf	??_Config_SetBottomLimit+1,w
 15192  1539  00D9               	movwf	EEPROM_25AA040A_WriteBuffer@dataLength
 15193  153A  3197  2724         	fcall	_EEPROM_25AA040A_WriteBuffer
 15194                           
 15195                           ;config.c: 72: success = 1;
 15196  153C  0021               	movlb	1	; select bank1
 15197  153D  01A4               	clrf	Config_SetBottomLimit@success^(0+128)
 15198  153E  0AA4               	incf	Config_SetBottomLimit@success^(0+128),f
 15199  153F                     l7049:	
 15200                           
 15201                           ;config.c: 73: }
 15202                           ;config.c: 74: return success;
 15203  153F  0021               	movlb	1	; select bank1
 15204  1540  0824               	movf	Config_SetBottomLimit@success^(0+128),w
 15205  1541  0008               	return
 15206  1542                     __end_of_Config_SetBottomLimit:	
 15207                           
 15208                           	psect	text43
 15209  26F2                     __ptext43:	
 15210 ;; *************** function _FlashLed100ms *****************
 15211 ;; Defined at:
 15212 ;;		line 8 in file "led.c"
 15213 ;; Parameters:    Size  Location     Type
 15214 ;;		None
 15215 ;; Auto vars:     Size  Location     Type
 15216 ;;		None
 15217 ;; Return value:  Size  Location     Type
 15218 ;;		None               void
 15219 ;; Registers used:
 15220 ;;		wreg
 15221 ;; Tracked objects:
 15222 ;;		On entry : 0/0
 15223 ;;		On exit  : 0/0
 15224 ;;		Unchanged: 0/0
 15225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15228 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15229 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15230 ;;Total ram usage:        3 bytes
 15231 ;; Hardware stack levels used:    1
 15232 ;; Hardware stack levels required when called:    2
 15233 ;; This function calls:
 15234 ;;		Nothing
 15235 ;; This function is called by:
 15236 ;;		__SettingsScreen_SetLongPress
 15237 ;;		_FlashLedCallback
 15238 ;; This function uses a non-reentrant model
 15239 ;;
 15240                           
 15241                           
 15242                           ;psect for function _FlashLed100ms
 15243  26F2                     _FlashLed100ms:	
 15244                           
 15245                           ;incstack = 0
 15246                           ; Regs used in _FlashLed100ms: [wreg]
 15247                           ;led.c: 10: do { LATB4 = 1; } while(0);
 15248  26F2  0022               	movlb	2	; select bank2
 15249  26F3  160D               	bsf	13,4	;volatile
 15250                           
 15251                           ;led.c: 11: _delay((unsigned long)((100)*(16000000/4000.0)));
 15252  26F4  3003               	movlw	3
 15253  26F5  00F4               	movwf	??_FlashLed100ms+2
 15254  26F6  3008               	movlw	8
 15255  26F7  00F3               	movwf	??_FlashLed100ms+1
 15256  26F8  3078               	movlw	120
 15257  26F9  00F2               	movwf	??_FlashLed100ms
 15258  26FA                     u10377:	
 15259  26FA  0BF2               	decfsz	??_FlashLed100ms,f
 15260  26FB  2EFA               	goto	u10377
 15261  26FC  0BF3               	decfsz	??_FlashLed100ms+1,f
 15262  26FD  2EFA               	goto	u10377
 15263  26FE  0BF4               	decfsz	??_FlashLed100ms+2,f
 15264  26FF  2EFA               	goto	u10377
 15265                           
 15266                           ;led.c: 12: do { LATB4 = 0; } while(0);
 15267  2700  0022               	movlb	2	; select bank2
 15268  2701  120D               	bcf	13,4	;volatile
 15269  2702  0008               	return
 15270  2703                     __end_of_FlashLed100ms:	
 15271                           
 15272                           	psect	text44
 15273  07C6                     __ptext44:	
 15274 ;; *************** function __MenuScreen_MoveDown *****************
 15275 ;; Defined at:
 15276 ;;		line 67 in file "menuscreen.c"
 15277 ;; Parameters:    Size  Location     Type
 15278 ;;  wasLongPress    1   23[BANK0 ] unsigned char 
 15279 ;; Auto vars:     Size  Location     Type
 15280 ;;  oldSelected     1   28[BANK0 ] unsigned char 
 15281 ;; Return value:  Size  Location     Type
 15282 ;;		None               void
 15283 ;; Registers used:
 15284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15285 ;; Tracked objects:
 15286 ;;		On entry : 0/0
 15287 ;;		On exit  : 0/0
 15288 ;;		Unchanged: 0/0
 15289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15290 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15291 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15292 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15293 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15294 ;;Total ram usage:        6 bytes
 15295 ;; Hardware stack levels used:    1
 15296 ;; Hardware stack levels required when called:    7
 15297 ;; This function calls:
 15298 ;;		_MenuScreen_Display
 15299 ;;		___wmul
 15300 ;; This function is called by:
 15301 ;;		_MenuScreen_Init
 15302 ;;		_handleButtons
 15303 ;; This function uses a non-reentrant model
 15304 ;;
 15305                           
 15306                           
 15307                           ;psect for function __MenuScreen_MoveDown
 15308  07C6                     __MenuScreen_MoveDown:	
 15309                           
 15310                           ;menuscreen.c: 69: if(!wasLongPress)
 15311                           
 15312                           ;incstack = 0
 15313                           ; Regs used in __MenuScreen_MoveDown: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15314  07C6  0020               	movlb	0	; select bank0
 15315  07C7  0837               	movf	__MenuScreen_MoveDown@wasLongPress,w
 15316  07C8  1D03               	btfss	3,2
 15317  07C9  0008               	return
 15318                           
 15319                           ;menuscreen.c: 70: {
 15320                           ;menuscreen.c: 71: menuDir = DIR_DOWN;
 15321  07CA  0022               	movlb	2	; select bank2
 15322  07CB  01D3               	clrf	_menuDir^(0+256)
 15323  07CC  0AD3               	incf	_menuDir^(0+256),f
 15324                           
 15325                           ;menuscreen.c: 72: uint8_t oldSelected = _Menu_SelectedItem;
 15326  07CD  087B               	movf	__Menu_SelectedItem,w
 15327  07CE  0020               	movlb	0	; select bank0
 15328  07CF  00B8               	movwf	??__MenuScreen_MoveDown
 15329  07D0  0838               	movf	??__MenuScreen_MoveDown,w
 15330  07D1  00BC               	movwf	__MenuScreen_MoveDown@oldSelected
 15331                           
 15332                           ;menuscreen.c: 73: if(_Menu_SelectedItem == _Menu_MaxValidIndex)
 15333  07D2  087B               	movf	__Menu_SelectedItem,w
 15334  07D3  067A               	xorwf	__Menu_MaxValidIndex,w
 15335  07D4  1D03               	skipz
 15336  07D5  2FD8               	goto	l7611
 15337                           
 15338                           ;menuscreen.c: 74: {
 15339                           ;menuscreen.c: 75: _Menu_SelectedItem = 0;
 15340  07D6  01FB               	clrf	__Menu_SelectedItem
 15341                           
 15342                           ;menuscreen.c: 76: }
 15343  07D7  2FDD               	goto	l7613
 15344  07D8                     l7611:	
 15345                           
 15346                           ;menuscreen.c: 77: else
 15347                           ;menuscreen.c: 78: {
 15348                           ;menuscreen.c: 79: _Menu_SelectedItem = (_Menu_SelectedItem + 1);
 15349  07D8  087B               	movf	__Menu_SelectedItem,w
 15350  07D9  3E01               	addlw	1
 15351  07DA  00B8               	movwf	??__MenuScreen_MoveDown
 15352  07DB  0838               	movf	??__MenuScreen_MoveDown,w
 15353  07DC  00FB               	movwf	__Menu_SelectedItem
 15354  07DD                     l7613:	
 15355                           
 15356                           ;menuscreen.c: 80: }
 15357                           ;menuscreen.c: 81: if( !MainMenu[_Menu_SelectedItem].IsValid)
 15358  07DD  087B               	movf	__Menu_SelectedItem,w
 15359  07DE  00B8               	movwf	??__MenuScreen_MoveDown
 15360  07DF  01B9               	clrf	??__MenuScreen_MoveDown+1
 15361  07E0  0838               	movf	??__MenuScreen_MoveDown,w
 15362  07E1  00A0               	movwf	___wmul@multiplier
 15363  07E2  0839               	movf	??__MenuScreen_MoveDown+1,w
 15364  07E3  00A1               	movwf	___wmul@multiplier+1
 15365  07E4  300C               	movlw	12
 15366  07E5  00A2               	movwf	___wmul@multiplicand
 15367  07E6  3000               	movlw	0
 15368  07E7  00A3               	movwf	___wmul@multiplicand+1
 15369  07E8  3198  203A  3187   	fcall	___wmul
 15370  07EB  3078               	movlw	120
 15371  07EC  0020               	movlb	0	; select bank0
 15372  07ED  00BA               	movwf	??__MenuScreen_MoveDown+2
 15373  07EE  3027               	movlw	39
 15374  07EF  00BB               	movwf	??__MenuScreen_MoveDown+3
 15375  07F0  0820               	movf	?___wmul,w
 15376  07F1  073A               	addwf	??__MenuScreen_MoveDown+2,w
 15377  07F2  0086               	movwf	6
 15378  07F3  0821               	movf	?___wmul+1,w
 15379  07F4  3D3B               	addwfc	??__MenuScreen_MoveDown+3,w
 15380  07F5  0087               	movwf	7
 15381  07F6  0801               	movf	1,w
 15382  07F7  1D03               	btfss	3,2
 15383  07F8  2FFD               	goto	l7617
 15384                           
 15385                           ;menuscreen.c: 82: {
 15386                           ;menuscreen.c: 83: _Menu_SelectedItem = oldSelected;
 15387  07F9  083C               	movf	__MenuScreen_MoveDown@oldSelected,w
 15388  07FA  00B8               	movwf	??__MenuScreen_MoveDown
 15389  07FB  0838               	movf	??__MenuScreen_MoveDown,w
 15390  07FC  00FB               	movwf	__Menu_SelectedItem
 15391  07FD                     l7617:	
 15392                           
 15393                           ;menuscreen.c: 84: }
 15394                           ;menuscreen.c: 85: MenuScreen_Display();
 15395  07FD  318A  2204         	fcall	_MenuScreen_Display
 15396  07FF  0008               	return
 15397  0800                     __end_of__MenuScreen_MoveDown:	
 15398                           
 15399                           	psect	text45
 15400  114A                     __ptext45:	
 15401 ;; *************** function __SettingsScreen_DownRelease *****************
 15402 ;; Defined at:
 15403 ;;		line 61 in file "settingsscreen.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;  wasLongPress    1   23[BANK0 ] unsigned char 
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;		None               void
 15410 ;; Registers used:
 15411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15417 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15419 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15420 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15421 ;;Total ram usage:        2 bytes
 15422 ;; Hardware stack levels used:    1
 15423 ;; Hardware stack levels required when called:    7
 15424 ;; This function calls:
 15425 ;;		_SettingsScreen_Display
 15426 ;; This function is called by:
 15427 ;;		_SettingsScreen_Init
 15428 ;;		_handleButtons
 15429 ;; This function uses a non-reentrant model
 15430 ;;
 15431                           
 15432                           
 15433                           ;psect for function __SettingsScreen_DownRelease
 15434  114A                     __SettingsScreen_DownRelease:	
 15435                           
 15436                           ;settingsscreen.c: 63: if(!wasLongPress)
 15437                           
 15438                           ;incstack = 0
 15439                           ; Regs used in __SettingsScreen_DownRelease: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15440  114A  0020               	movlb	0	; select bank0
 15441  114B  0837               	movf	__SettingsScreen_DownRelease@wasLongPress,w
 15442  114C  1D03               	btfss	3,2
 15443  114D  0008               	return
 15444                           
 15445                           ;settingsscreen.c: 64: {
 15446                           ;settingsscreen.c: 68: if(curRow == 0 && (curBottomIntLimit < curUpIntLimit || curBottom
      +                          FractLimit < curUpFractLimit))
 15447  114E  0021               	movlb	1	; select bank1
 15448  114F  0863               	movf	_curRow^(0+128),w
 15449  1150  1D03               	btfss	3,2
 15450  1151  2984               	goto	l7563
 15451  1152  086A               	movf	(_curBottomIntLimit+1)^(0+128),w
 15452  1153  3A80               	xorlw	128
 15453  1154  0020               	movlb	0	; select bank0
 15454  1155  00B8               	movwf	??__SettingsScreen_DownRelease
 15455  1156  0021               	movlb	1	; select bank1
 15456  1157  086E               	movf	(_curUpIntLimit+1)^(0+128),w
 15457  1158  3A80               	xorlw	128
 15458  1159  0020               	movlb	0	; select bank0
 15459  115A  0238               	subwf	??__SettingsScreen_DownRelease,w
 15460  115B  1D03               	skipz
 15461  115C  2960               	goto	u9175
 15462  115D  0021               	movlb	1	; select bank1
 15463  115E  086D               	movf	_curUpIntLimit^(0+128),w
 15464  115F  0269               	subwf	_curBottomIntLimit^(0+128),w
 15465  1160                     u9175:	
 15466  1160  1C03               	skipc
 15467  1161  2973               	goto	l7557
 15468  1162  0021               	movlb	1	; select bank1
 15469  1163  0868               	movf	(_curBottomFractLimit+1)^(0+128),w
 15470  1164  3A80               	xorlw	128
 15471  1165  0020               	movlb	0	; select bank0
 15472  1166  00B8               	movwf	??__SettingsScreen_DownRelease
 15473  1167  0021               	movlb	1	; select bank1
 15474  1168  086C               	movf	(_curUpFractLimit+1)^(0+128),w
 15475  1169  3A80               	xorlw	128
 15476  116A  0020               	movlb	0	; select bank0
 15477  116B  0238               	subwf	??__SettingsScreen_DownRelease,w
 15478  116C  1D03               	skipz
 15479  116D  2971               	goto	u9185
 15480  116E  0021               	movlb	1	; select bank1
 15481  116F  086B               	movf	_curUpFractLimit^(0+128),w
 15482  1170  0267               	subwf	_curBottomFractLimit^(0+128),w
 15483  1171                     u9185:	
 15484  1171  1803               	skipnc
 15485  1172  2984               	goto	l7563
 15486  1173                     l7557:	
 15487                           
 15488                           ;settingsscreen.c: 69: {
 15489                           ;settingsscreen.c: 70: if(curUpFractLimit == 0)
 15490  1173  0021               	movlb	1	; select bank1
 15491  1174  086B               	movf	_curUpFractLimit^(0+128),w
 15492  1175  046C               	iorwf	(_curUpFractLimit+1)^(0+128),w
 15493  1176  1D03               	btfss	3,2
 15494  1177  2981               	goto	l7561
 15495                           
 15496                           ;settingsscreen.c: 71: {
 15497                           ;settingsscreen.c: 72: curUpFractLimit = 5;
 15498  1178  3005               	movlw	5
 15499  1179  00EB               	movwf	_curUpFractLimit^(0+128)
 15500  117A  3000               	movlw	0
 15501  117B  00EC               	movwf	(_curUpFractLimit^(0+128)+1)
 15502                           
 15503                           ;settingsscreen.c: 73: curUpIntLimit -= 1;
 15504  117C  30FF               	movlw	255
 15505  117D  07ED               	addwf	_curUpIntLimit^(0+128),f
 15506  117E  30FF               	movlw	255
 15507  117F  3DEE               	addwfc	(_curUpIntLimit+1)^(0+128),f
 15508                           
 15509                           ;settingsscreen.c: 74: }
 15510  1180  29A5               	goto	l7573
 15511  1181                     l7561:	
 15512                           
 15513                           ;settingsscreen.c: 75: else
 15514                           ;settingsscreen.c: 76: {
 15515                           ;settingsscreen.c: 77: curUpFractLimit = 0;
 15516  1181  01EB               	clrf	_curUpFractLimit^(0+128)
 15517  1182  01EC               	clrf	(_curUpFractLimit+1)^(0+128)
 15518                           
 15519                           ;settingsscreen.c: 78: }
 15520                           ;settingsscreen.c: 79: }
 15521  1183  29A5               	goto	l7573
 15522  1184                     l7563:	
 15523                           
 15524                           ;settingsscreen.c: 81: else if( curRow == 1 && curBottomIntLimit > -10)
 15525  1184  0021               	movlb	1	; select bank1
 15526  1185  0363               	decf	_curRow^(0+128),w
 15527  1186  1D03               	btfss	3,2
 15528  1187  29A5               	goto	l7573
 15529  1188  086A               	movf	(_curBottomIntLimit+1)^(0+128),w
 15530  1189  3A80               	xorlw	128
 15531  118A  0020               	movlb	0	; select bank0
 15532  118B  00B8               	movwf	??__SettingsScreen_DownRelease
 15533  118C  307F               	movlw	127
 15534  118D  0238               	subwf	??__SettingsScreen_DownRelease,w
 15535  118E  1D03               	skipz
 15536  118F  2993               	goto	u9215
 15537  1190  30F7               	movlw	247
 15538  1191  0021               	movlb	1	; select bank1
 15539  1192  0269               	subwf	_curBottomIntLimit^(0+128),w
 15540  1193                     u9215:	
 15541  1193  1C03               	skipc
 15542  1194  29A5               	goto	l7573
 15543                           
 15544                           ;settingsscreen.c: 82: {
 15545                           ;settingsscreen.c: 83: if(curBottomFractLimit == 0)
 15546  1195  0021               	movlb	1	; select bank1
 15547  1196  0867               	movf	_curBottomFractLimit^(0+128),w
 15548  1197  0468               	iorwf	(_curBottomFractLimit+1)^(0+128),w
 15549  1198  1D03               	btfss	3,2
 15550  1199  29A3               	goto	l7571
 15551                           
 15552                           ;settingsscreen.c: 84: {
 15553                           ;settingsscreen.c: 85: curBottomFractLimit = 5;
 15554  119A  3005               	movlw	5
 15555  119B  00E7               	movwf	_curBottomFractLimit^(0+128)
 15556  119C  3000               	movlw	0
 15557  119D  00E8               	movwf	(_curBottomFractLimit^(0+128)+1)
 15558                           
 15559                           ;settingsscreen.c: 86: curBottomIntLimit -= 1;
 15560  119E  30FF               	movlw	255
 15561  119F  07E9               	addwf	_curBottomIntLimit^(0+128),f
 15562  11A0  30FF               	movlw	255
 15563  11A1  3DEA               	addwfc	(_curBottomIntLimit+1)^(0+128),f
 15564                           
 15565                           ;settingsscreen.c: 87: }
 15566  11A2  29A5               	goto	l7573
 15567  11A3                     l7571:	
 15568                           
 15569                           ;settingsscreen.c: 88: else
 15570                           ;settingsscreen.c: 89: {
 15571                           ;settingsscreen.c: 90: curBottomFractLimit = 0;
 15572  11A3  01E7               	clrf	_curBottomFractLimit^(0+128)
 15573  11A4  01E8               	clrf	(_curBottomFractLimit+1)^(0+128)
 15574  11A5                     l7573:	
 15575                           
 15576                           ;settingsscreen.c: 91: }
 15577                           ;settingsscreen.c: 92: }
 15578                           ;settingsscreen.c: 93: SettingsScreen_Display();
 15579  11A5  3188  2011         	fcall	_SettingsScreen_Display
 15580  11A7  0008               	return
 15581  11A8                     __end_of__SettingsScreen_DownRelease:	
 15582                           
 15583                           	psect	text46
 15584  1003                     __ptext46:	
 15585 ;; *************** function _ChangeToSettingsScreen *****************
 15586 ;; Defined at:
 15587 ;;		line 197 in file "settingsscreen.c"
 15588 ;; Parameters:    Size  Location     Type
 15589 ;;  param           1   23[BANK0 ] PTR void 
 15590 ;;		 -> NULL(0), 
 15591 ;; Auto vars:     Size  Location     Type
 15592 ;;		None
 15593 ;; Return value:  Size  Location     Type
 15594 ;;		None               void
 15595 ;; Registers used:
 15596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15597 ;; Tracked objects:
 15598 ;;		On entry : 0/0
 15599 ;;		On exit  : 0/0
 15600 ;;		Unchanged: 0/0
 15601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15602 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15605 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15606 ;;Total ram usage:        1 bytes
 15607 ;; Hardware stack levels used:    1
 15608 ;; Hardware stack levels required when called:    7
 15609 ;; This function calls:
 15610 ;;		_Config_GetBottomLimit
 15611 ;;		_Config_GetUpLimit
 15612 ;;		_SettingsScreen_Display
 15613 ;;		_SettingsScreen_Init
 15614 ;; This function is called by:
 15615 ;;		__MenuScreen_SetRelease
 15616 ;; This function uses a non-reentrant model
 15617 ;;
 15618                           
 15619                           
 15620                           ;psect for function _ChangeToSettingsScreen
 15621  1003                     _ChangeToSettingsScreen:	
 15622                           
 15623                           ;settingsscreen.c: 199: SettingsScreen_Init();
 15624                           
 15625                           ;incstack = 0
 15626                           ; Regs used in _ChangeToSettingsScreen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15627  1003  3199  2153  3190   	fcall	_SettingsScreen_Init
 15628                           
 15629                           ;settingsscreen.c: 201: Config_GetUpLimit(&curUpIntLimit, &curUpFractLimit);
 15630  1006  30EB               	movlw	low _curUpFractLimit
 15631  1007  0020               	movlb	0	; select bank0
 15632  1008  00A7               	movwf	Config_GetUpLimit@p_fractLimit
 15633  1009  3000               	movlw	high _curUpFractLimit
 15634  100A  00A8               	movwf	Config_GetUpLimit@p_fractLimit+1
 15635  100B  30ED               	movlw	(low (_curUpIntLimit| 0))& (0+255)
 15636  100C  319A  223C  3190   	fcall	_Config_GetUpLimit
 15637                           
 15638                           ;settingsscreen.c: 202: oldUpIntLimit = curUpIntLimit;
 15639  100F  0021               	movlb	1	; select bank1
 15640  1010  086E               	movf	(_curUpIntLimit+1)^(0+128),w
 15641  1011  0022               	movlb	2	; select bank2
 15642  1012  00BF               	movwf	(_oldUpIntLimit+1)^(0+256)
 15643  1013  0021               	movlb	1	; select bank1
 15644  1014  086D               	movf	_curUpIntLimit^(0+128),w
 15645  1015  0022               	movlb	2	; select bank2
 15646  1016  00BE               	movwf	_oldUpIntLimit^(0+256)
 15647                           
 15648                           ;settingsscreen.c: 203: oldUpFractLimit = curUpFractLimit;
 15649  1017  0021               	movlb	1	; select bank1
 15650  1018  086C               	movf	(_curUpFractLimit+1)^(0+128),w
 15651  1019  0022               	movlb	2	; select bank2
 15652  101A  00BD               	movwf	(_oldUpFractLimit+1)^(0+256)
 15653  101B  0021               	movlb	1	; select bank1
 15654  101C  086B               	movf	_curUpFractLimit^(0+128),w
 15655  101D  0022               	movlb	2	; select bank2
 15656  101E  00BC               	movwf	_oldUpFractLimit^(0+256)
 15657                           
 15658                           ;settingsscreen.c: 205: Config_GetBottomLimit(&curBottomIntLimit, &curBottomFractLimit);
 15659  101F  30E9               	movlw	low _curBottomIntLimit
 15660  1020  0020               	movlb	0	; select bank0
 15661  1021  00A7               	movwf	Config_GetBottomLimit@p_intLimit
 15662  1022  3000               	movlw	high _curBottomIntLimit
 15663  1023  00A8               	movwf	Config_GetBottomLimit@p_intLimit+1
 15664  1024  30E7               	movlw	low _curBottomFractLimit
 15665  1025  00A9               	movwf	Config_GetBottomLimit@p_fractLimit
 15666  1026  3000               	movlw	high _curBottomFractLimit
 15667  1027  00AA               	movwf	Config_GetBottomLimit@p_fractLimit+1
 15668  1028  319A  22A0  3190   	fcall	_Config_GetBottomLimit
 15669                           
 15670                           ;settingsscreen.c: 206: oldBottomIntLimit = curBottomIntLimit;
 15671  102B  0021               	movlb	1	; select bank1
 15672  102C  086A               	movf	(_curBottomIntLimit+1)^(0+128),w
 15673  102D  0022               	movlb	2	; select bank2
 15674  102E  00BB               	movwf	(_oldBottomIntLimit+1)^(0+256)
 15675  102F  0021               	movlb	1	; select bank1
 15676  1030  0869               	movf	_curBottomIntLimit^(0+128),w
 15677  1031  0022               	movlb	2	; select bank2
 15678  1032  00BA               	movwf	_oldBottomIntLimit^(0+256)
 15679                           
 15680                           ;settingsscreen.c: 207: oldBottomFractLimit = curBottomFractLimit;
 15681  1033  0021               	movlb	1	; select bank1
 15682  1034  0868               	movf	(_curBottomFractLimit+1)^(0+128),w
 15683  1035  0022               	movlb	2	; select bank2
 15684  1036  00B9               	movwf	(_oldBottomFractLimit+1)^(0+256)
 15685  1037  0021               	movlb	1	; select bank1
 15686  1038  0867               	movf	_curBottomFractLimit^(0+128),w
 15687  1039  0022               	movlb	2	; select bank2
 15688  103A  00B8               	movwf	_oldBottomFractLimit^(0+256)
 15689                           
 15690                           ;settingsscreen.c: 209: SettingsScreen_Display();
 15691  103B  3188  2011         	fcall	_SettingsScreen_Display
 15692  103D  0008               	return
 15693  103E                     __end_of_ChangeToSettingsScreen:	
 15694                           
 15695                           	psect	text47
 15696  27E7                     __ptext47:	
 15697 ;; *************** function _LCD_ToggleBacklight *****************
 15698 ;; Defined at:
 15699 ;;		line 82 in file "liblcd/lcd.c"
 15700 ;; Parameters:    Size  Location     Type
 15701 ;;		None
 15702 ;; Auto vars:     Size  Location     Type
 15703 ;;  duty            2   24[BANK0 ] unsigned int 
 15704 ;; Return value:  Size  Location     Type
 15705 ;;		None               void
 15706 ;; Registers used:
 15707 ;;		wreg, status,2, status,0, pclath, cstack
 15708 ;; Tracked objects:
 15709 ;;		On entry : 0/0
 15710 ;;		On exit  : 0/0
 15711 ;;		Unchanged: 0/0
 15712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15713 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15716 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15717 ;;Total ram usage:        3 bytes
 15718 ;; Hardware stack levels used:    1
 15719 ;; Hardware stack levels required when called:    3
 15720 ;; This function calls:
 15721 ;;		_PWM3_GetDutyValue
 15722 ;;		_PWM3_LoadDutyValue
 15723 ;; This function is called by:
 15724 ;;		_main
 15725 ;;		__MenuScreen_SetRelease
 15726 ;;		_handleButtons
 15727 ;; This function uses a non-reentrant model
 15728 ;;
 15729                           
 15730                           
 15731                           ;psect for function _LCD_ToggleBacklight
 15732  27E7                     _LCD_ToggleBacklight:	
 15733                           
 15734                           ;lcd.c: 84: uint16_t duty = PWM3_GetDutyValue();
 15735                           
 15736                           ;incstack = 0
 15737                           ; Regs used in _LCD_ToggleBacklight: [wreg+status,2+status,0+pclath+cstack]
 15738  27E7  31A6  261C  31A7   	fcall	_PWM3_GetDutyValue
 15739  27EA  0873               	movf	?_PWM3_GetDutyValue+1,w
 15740  27EB  0020               	movlb	0	; select bank0
 15741  27EC  00B9               	movwf	LCD_ToggleBacklight@duty+1
 15742  27ED  0872               	movf	?_PWM3_GetDutyValue,w
 15743  27EE  00B8               	movwf	LCD_ToggleBacklight@duty
 15744                           
 15745                           ;lcd.c: 85: if(duty > 0)
 15746  27EF  0838               	movf	LCD_ToggleBacklight@duty,w
 15747  27F0  0439               	iorwf	LCD_ToggleBacklight@duty+1,w
 15748  27F1  1903               	btfsc	3,2
 15749  27F2  2FF9               	goto	l5173
 15750                           
 15751                           ;lcd.c: 86: {
 15752                           ;lcd.c: 87: PWM3_LoadDutyValue(0);
 15753  27F3  3000               	movlw	0
 15754  27F4  00F2               	movwf	PWM3_LoadDutyValue@dutyValue
 15755  27F5  00F3               	movwf	PWM3_LoadDutyValue@dutyValue+1
 15756  27F6  3198  201F         	fcall	_PWM3_LoadDutyValue
 15757                           
 15758                           ;lcd.c: 88: }
 15759  27F8  0008               	return
 15760  27F9                     l5173:	
 15761                           
 15762                           ;lcd.c: 89: else
 15763                           ;lcd.c: 90: {
 15764                           ;lcd.c: 91: PWM3_LoadDutyValue(512);
 15765  27F9  3000               	movlw	0
 15766  27FA  00F2               	movwf	PWM3_LoadDutyValue@dutyValue
 15767  27FB  3002               	movlw	2
 15768  27FC  00F3               	movwf	PWM3_LoadDutyValue@dutyValue+1
 15769  27FD  3198  201F         	fcall	_PWM3_LoadDutyValue
 15770  27FF  0008               	return
 15771  2800                     __end_of_LCD_ToggleBacklight:	
 15772                           
 15773                           	psect	text48
 15774  181F                     __ptext48:	
 15775 ;; *************** function _PWM3_LoadDutyValue *****************
 15776 ;; Defined at:
 15777 ;;		line 76 in file "mcc_generated_files/pwm3.c"
 15778 ;; Parameters:    Size  Location     Type
 15779 ;;  dutyValue       2    2[COMMON] unsigned int 
 15780 ;; Auto vars:     Size  Location     Type
 15781 ;;		None
 15782 ;; Return value:  Size  Location     Type
 15783 ;;		None               void
 15784 ;; Registers used:
 15785 ;;		wreg, status,2, status,0
 15786 ;; Tracked objects:
 15787 ;;		On entry : 0/0
 15788 ;;		On exit  : 0/0
 15789 ;;		Unchanged: 0/0
 15790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15794 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15795 ;;Total ram usage:        4 bytes
 15796 ;; Hardware stack levels used:    1
 15797 ;; Hardware stack levels required when called:    2
 15798 ;; This function calls:
 15799 ;;		Nothing
 15800 ;; This function is called by:
 15801 ;;		_LCD_ToggleBacklight
 15802 ;;		_initDrivers
 15803 ;; This function uses a non-reentrant model
 15804 ;;
 15805                           
 15806                           
 15807                           ;psect for function _PWM3_LoadDutyValue
 15808  181F                     _PWM3_LoadDutyValue:	
 15809                           
 15810                           ;pwm3.c: 78: _PWM3_CurDutyValue = dutyValue;
 15811                           
 15812                           ;incstack = 0
 15813                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
 15814  181F  0873               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 15815  1820  0022               	movlb	2	; select bank2
 15816  1821  00ED               	movwf	(__PWM3_CurDutyValue+1)^(0+256)
 15817  1822  0872               	movf	PWM3_LoadDutyValue@dutyValue,w
 15818  1823  00EC               	movwf	__PWM3_CurDutyValue^(0+256)
 15819                           
 15820                           ;pwm3.c: 81: PWM3DCH = (dutyValue & 0x03FC) >> 2;
 15821  1824  0873               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 15822  1825  00F5               	movwf	??_PWM3_LoadDutyValue+1
 15823  1826  0872               	movf	PWM3_LoadDutyValue@dutyValue,w
 15824  1827  00F4               	movwf	??_PWM3_LoadDutyValue
 15825  1828  36F5               	lsrf	??_PWM3_LoadDutyValue+1,f
 15826  1829  0CF4               	rrf	??_PWM3_LoadDutyValue,f
 15827  182A  36F5               	lsrf	??_PWM3_LoadDutyValue+1,f
 15828  182B  0CF4               	rrf	??_PWM3_LoadDutyValue,f
 15829  182C  0874               	movf	??_PWM3_LoadDutyValue,w
 15830  182D  002C               	movlb	12	; select bank12
 15831  182E  0098               	movwf	24	;volatile
 15832                           
 15833                           ;pwm3.c: 84: PWM3DCL = (dutyValue & 0x0003) << 6;
 15834  182F  0872               	movf	PWM3_LoadDutyValue@dutyValue,w
 15835  1830  3903               	andlw	3
 15836  1831  00F4               	movwf	??_PWM3_LoadDutyValue
 15837  1832  3005               	movlw	5
 15838  1833                     u4865:	
 15839  1833  35F4               	lslf	??_PWM3_LoadDutyValue,f
 15840  1834  3EFF               	addlw	-1
 15841  1835  1D03               	skipz
 15842  1836  2833               	goto	u4865
 15843  1837  3574               	lslf	??_PWM3_LoadDutyValue,w
 15844  1838  0097               	movwf	23	;volatile
 15845  1839  0008               	return
 15846  183A                     __end_of_PWM3_LoadDutyValue:	
 15847                           
 15848                           	psect	text49
 15849  261C                     __ptext49:	
 15850 ;; *************** function _PWM3_GetDutyValue *****************
 15851 ;; Defined at:
 15852 ;;		line 89 in file "mcc_generated_files/pwm3.c"
 15853 ;; Parameters:    Size  Location     Type
 15854 ;;		None
 15855 ;; Auto vars:     Size  Location     Type
 15856 ;;		None
 15857 ;; Return value:  Size  Location     Type
 15858 ;;                  2    2[COMMON] unsigned int 
 15859 ;; Registers used:
 15860 ;;		wreg
 15861 ;; Tracked objects:
 15862 ;;		On entry : 0/0
 15863 ;;		On exit  : 0/0
 15864 ;;		Unchanged: 0/0
 15865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15870 ;;Total ram usage:        2 bytes
 15871 ;; Hardware stack levels used:    1
 15872 ;; Hardware stack levels required when called:    2
 15873 ;; This function calls:
 15874 ;;		Nothing
 15875 ;; This function is called by:
 15876 ;;		_LCD_ToggleBacklight
 15877 ;; This function uses a non-reentrant model
 15878 ;;
 15879                           
 15880                           
 15881                           ;psect for function _PWM3_GetDutyValue
 15882  261C                     _PWM3_GetDutyValue:	
 15883                           
 15884                           ;pwm3.c: 91: return _PWM3_CurDutyValue;
 15885                           
 15886                           ;incstack = 0
 15887                           ; Regs used in _PWM3_GetDutyValue: [wreg]
 15888  261C  0022               	movlb	2	; select bank2
 15889  261D  086D               	movf	(__PWM3_CurDutyValue+1)^(0+256),w
 15890  261E  00F3               	movwf	?_PWM3_GetDutyValue+1
 15891  261F  086C               	movf	__PWM3_CurDutyValue^(0+256),w
 15892  2620  00F2               	movwf	?_PWM3_GetDutyValue
 15893  2621  0008               	return
 15894  2622                     __end_of_PWM3_GetDutyValue:	
 15895                           
 15896                           	psect	text50
 15897  1953                     __ptext50:	
 15898 ;; *************** function _SettingsScreen_Init *****************
 15899 ;; Defined at:
 15900 ;;		line 118 in file "settingsscreen.c"
 15901 ;; Parameters:    Size  Location     Type
 15902 ;;		None
 15903 ;; Auto vars:     Size  Location     Type
 15904 ;;		None
 15905 ;; Return value:  Size  Location     Type
 15906 ;;		None               void
 15907 ;; Registers used:
 15908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15909 ;; Tracked objects:
 15910 ;;		On entry : 0/0
 15911 ;;		On exit  : 0/0
 15912 ;;		Unchanged: 0/0
 15913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15918 ;;Total ram usage:        0 bytes
 15919 ;; Hardware stack levels used:    1
 15920 ;; Hardware stack levels required when called:    6
 15921 ;; This function calls:
 15922 ;;		_MenuScreen_Clear
 15923 ;; This function is called by:
 15924 ;;		_ChangeToSettingsScreen
 15925 ;; This function uses a non-reentrant model
 15926 ;;
 15927                           
 15928                           
 15929                           ;psect for function _SettingsScreen_Init
 15930  1953                     _SettingsScreen_Init:	
 15931                           
 15932                           ;settingsscreen.c: 120: MenuScreen_Clear();
 15933                           
 15934                           ;incstack = 0
 15935                           ; Regs used in _SettingsScreen_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15936  1953  319C  2426         	fcall	_MenuScreen_Clear
 15937                           
 15938                           ;settingsscreen.c: 122: prevUpReleaseCB = ButtonUp_ReleaseCB;
 15939  1955  0022               	movlb	2	; select bank2
 15940  1956  0835               	movf	(_ButtonUp_ReleaseCB+1)^(0+256),w
 15941  1957  00C7               	movwf	(_prevUpReleaseCB+1)^(0+256)
 15942  1958  0834               	movf	_ButtonUp_ReleaseCB^(0+256),w
 15943  1959  00C6               	movwf	_prevUpReleaseCB^(0+256)
 15944                           
 15945                           ;settingsscreen.c: 123: prevDownReleaseCB = ButtonDown_ReleaseCB;
 15946  195A  0829               	movf	(_ButtonDown_ReleaseCB+1)^(0+256),w
 15947  195B  00C1               	movwf	(_prevDownReleaseCB+1)^(0+256)
 15948  195C  0828               	movf	_ButtonDown_ReleaseCB^(0+256),w
 15949  195D  00C0               	movwf	_prevDownReleaseCB^(0+256)
 15950                           
 15951                           ;settingsscreen.c: 124: prevSetReleaseCB = ButtonSet_ReleaseCB;
 15952  195E  082F               	movf	(_ButtonSet_ReleaseCB+1)^(0+256),w
 15953  195F  00C5               	movwf	(_prevSetReleaseCB+1)^(0+256)
 15954  1960  082E               	movf	_ButtonSet_ReleaseCB^(0+256),w
 15955  1961  00C4               	movwf	_prevSetReleaseCB^(0+256)
 15956                           
 15957                           ;settingsscreen.c: 125: prevSetLongPressCB = ButtonSet_LongPressCB;
 15958  1962  082B               	movf	(_ButtonSet_LongPressCB+1)^(0+256),w
 15959  1963  00C3               	movwf	(_prevSetLongPressCB+1)^(0+256)
 15960  1964  082A               	movf	_ButtonSet_LongPressCB^(0+256),w
 15961  1965  00C2               	movwf	_prevSetLongPressCB^(0+256)
 15962                           
 15963                           ;settingsscreen.c: 127: ButtonUp_ReleaseCB = _SettingsScreen_UpRelease;
 15964  1966  30A8               	movlw	low __SettingsScreen_UpRelease
 15965  1967  00B4               	movwf	_ButtonUp_ReleaseCB^(0+256)
 15966  1968  3011               	movlw	high __SettingsScreen_UpRelease
 15967  1969  00B5               	movwf	(_ButtonUp_ReleaseCB^(0+256)+1)
 15968                           
 15969                           ;settingsscreen.c: 128: ButtonDown_ReleaseCB = _SettingsScreen_DownRelease;
 15970  196A  304A               	movlw	low __SettingsScreen_DownRelease
 15971  196B  00A8               	movwf	_ButtonDown_ReleaseCB^(0+256)
 15972  196C  3011               	movlw	high __SettingsScreen_DownRelease
 15973  196D  00A9               	movwf	(_ButtonDown_ReleaseCB^(0+256)+1)
 15974                           
 15975                           ;settingsscreen.c: 129: ButtonSet_ReleaseCB = _SettingsScreen_SetRelease;
 15976  196E  3039               	movlw	low __SettingsScreen_SetRelease
 15977  196F  00AE               	movwf	_ButtonSet_ReleaseCB^(0+256)
 15978  1970  3027               	movlw	high __SettingsScreen_SetRelease
 15979  1971  00AF               	movwf	(_ButtonSet_ReleaseCB^(0+256)+1)
 15980                           
 15981                           ;settingsscreen.c: 130: ButtonSet_LongPressCB = _SettingsScreen_SetLongPress;
 15982  1972  3022               	movlw	low __SettingsScreen_SetLongPress
 15983  1973  00AA               	movwf	_ButtonSet_LongPressCB^(0+256)
 15984  1974  3026               	movlw	high __SettingsScreen_SetLongPress
 15985  1975  00AB               	movwf	(_ButtonSet_LongPressCB^(0+256)+1)
 15986  1976  0008               	return
 15987  1977                     __end_of_SettingsScreen_Init:	
 15988                           
 15989                           	psect	text51
 15990  0811                     __ptext51:	
 15991 ;; *************** function _SettingsScreen_Display *****************
 15992 ;; Defined at:
 15993 ;;		line 136 in file "settingsscreen.c"
 15994 ;; Parameters:    Size  Location     Type
 15995 ;;		None
 15996 ;; Auto vars:     Size  Location     Type
 15997 ;;  bottomInt       2   21[BANK0 ] int 
 15998 ;;  upInt           2   19[BANK0 ] int 
 15999 ;; Return value:  Size  Location     Type
 16000 ;;		None               void
 16001 ;; Registers used:
 16002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16003 ;; Tracked objects:
 16004 ;;		On entry : 0/0
 16005 ;;		On exit  : 0/0
 16006 ;;		Unchanged: 0/0
 16007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16009 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16010 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16011 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16012 ;;Total ram usage:        5 bytes
 16013 ;; Hardware stack levels used:    1
 16014 ;; Hardware stack levels required when called:    6
 16015 ;; This function calls:
 16016 ;;		_LCDGotoXY
 16017 ;;		_LCDWriteInt
 16018 ;;		_LCDWriteString
 16019 ;;		_MenuScreen_Clear
 16020 ;; This function is called by:
 16021 ;;		__SettingsScreen_UpRelease
 16022 ;;		__SettingsScreen_DownRelease
 16023 ;;		__SettingsScreen_SetRelease
 16024 ;;		_ChangeToSettingsScreen
 16025 ;; This function uses a non-reentrant model
 16026 ;;
 16027                           
 16028                           
 16029                           ;psect for function _SettingsScreen_Display
 16030  0811                     _SettingsScreen_Display:	
 16031                           
 16032                           ;settingsscreen.c: 138: MenuScreen_Clear();
 16033                           
 16034                           ;incstack = 0
 16035                           ; Regs used in _SettingsScreen_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16036  0811  319C  2426  3188   	fcall	_MenuScreen_Clear
 16037                           
 16038                           ;settingsscreen.c: 139: { LCDGotoXY(7,curRow); LCDWriteString("*");};
 16039  0814  0021               	movlb	1	; select bank1
 16040  0815  0863               	movf	_curRow^(0+128),w
 16041  0816  0020               	movlb	0	; select bank0
 16042  0817  00B2               	movwf	??_SettingsScreen_Display
 16043  0818  0832               	movf	??_SettingsScreen_Display,w
 16044  0819  00A4               	movwf	LCDGotoXY@y
 16045  081A  3007               	movlw	7
 16046  081B  3199  210B  3188   	fcall	_LCDGotoXY
 16047  081E  30CD               	movlw	low (STR_30| (0+32768))
 16048  081F  0020               	movlb	0	; select bank0
 16049  0820  00A6               	movwf	LCDWriteString@msg
 16050  0821  3085               	movlw	high (STR_30| (0+32768))
 16051  0822  00A7               	movwf	LCDWriteString@msg+1
 16052  0823  319C  2465  3188   	fcall	_LCDWriteString
 16053                           
 16054                           ;settingsscreen.c: 140: { LCDGotoXY(7 + 1,0); LCDWriteString("U ");};
 16055  0826  0020               	movlb	0	; select bank0
 16056  0827  01A4               	clrf	LCDGotoXY@y
 16057  0828  3008               	movlw	8
 16058  0829  3199  210B  3188   	fcall	_LCDGotoXY
 16059  082C  30CA               	movlw	low (STR_31| (0+32768))
 16060  082D  0020               	movlb	0	; select bank0
 16061  082E  00A6               	movwf	LCDWriteString@msg
 16062  082F  3085               	movlw	high (STR_31| (0+32768))
 16063  0830  00A7               	movwf	LCDWriteString@msg+1
 16064  0831  319C  2465  3188   	fcall	_LCDWriteString
 16065                           
 16066                           ;settingsscreen.c: 141: { LCDGotoXY(7 + 1,1); LCDWriteString("B ");};
 16067  0834  0020               	movlb	0	; select bank0
 16068  0835  01A4               	clrf	LCDGotoXY@y
 16069  0836  0AA4               	incf	LCDGotoXY@y,f
 16070  0837  3008               	movlw	8
 16071  0838  3199  210B  3188   	fcall	_LCDGotoXY
 16072  083B  30C7               	movlw	low (STR_32| (0+32768))
 16073  083C  0020               	movlb	0	; select bank0
 16074  083D  00A6               	movwf	LCDWriteString@msg
 16075  083E  3085               	movlw	high (STR_32| (0+32768))
 16076  083F  00A7               	movwf	LCDWriteString@msg+1
 16077  0840  319C  2465  3188   	fcall	_LCDWriteString
 16078                           
 16079                           ;settingsscreen.c: 143: int upInt = curUpIntLimit;
 16080  0843  0021               	movlb	1	; select bank1
 16081  0844  086E               	movf	(_curUpIntLimit+1)^(0+128),w
 16082  0845  0020               	movlb	0	; select bank0
 16083  0846  00B4               	movwf	SettingsScreen_Display@upInt+1
 16084  0847  0021               	movlb	1	; select bank1
 16085  0848  086D               	movf	_curUpIntLimit^(0+128),w
 16086  0849  0020               	movlb	0	; select bank0
 16087  084A  00B3               	movwf	SettingsScreen_Display@upInt
 16088                           
 16089                           ;settingsscreen.c: 144: int bottomInt = curBottomIntLimit;
 16090  084B  0021               	movlb	1	; select bank1
 16091  084C  086A               	movf	(_curBottomIntLimit+1)^(0+128),w
 16092  084D  0020               	movlb	0	; select bank0
 16093  084E  00B6               	movwf	SettingsScreen_Display@bottomInt+1
 16094  084F  0021               	movlb	1	; select bank1
 16095  0850  0869               	movf	_curBottomIntLimit^(0+128),w
 16096  0851  0020               	movlb	0	; select bank0
 16097  0852  00B5               	movwf	SettingsScreen_Display@bottomInt
 16098                           
 16099                           ;settingsscreen.c: 148: if(curUpIntLimit < 0)
 16100  0853  0021               	movlb	1	; select bank1
 16101  0854  1FEE               	btfss	(_curUpIntLimit+1)^(0+128),7
 16102  0855  2869               	goto	l7099
 16103                           
 16104                           ;settingsscreen.c: 149: {
 16105                           ;settingsscreen.c: 150: upInt = -upInt;
 16106  0856  0020               	movlb	0	; select bank0
 16107  0857  09B3               	comf	SettingsScreen_Display@upInt,f
 16108  0858  09B4               	comf	SettingsScreen_Display@upInt+1,f
 16109  0859  0AB3               	incf	SettingsScreen_Display@upInt,f
 16110  085A  1903               	skipnz
 16111  085B  0AB4               	incf	SettingsScreen_Display@upInt+1,f
 16112                           
 16113                           ;settingsscreen.c: 151: { LCDGotoXY(7 + 3,0); LCDWriteString("-");};
 16114  085C  01A4               	clrf	LCDGotoXY@y
 16115  085D  300A               	movlw	10
 16116  085E  3199  210B  3188   	fcall	_LCDGotoXY
 16117  0861  30CF               	movlw	low (STR_33| (0+32768))
 16118  0862  0020               	movlb	0	; select bank0
 16119  0863  00A6               	movwf	LCDWriteString@msg
 16120  0864  3085               	movlw	high (STR_33| (0+32768))
 16121  0865  00A7               	movwf	LCDWriteString@msg+1
 16122  0866  319C  2465  3188   	fcall	_LCDWriteString
 16123  0869                     l7099:	
 16124                           
 16125                           ;settingsscreen.c: 152: }
 16126                           ;settingsscreen.c: 153: if(curBottomIntLimit < 0)
 16127  0869  0021               	movlb	1	; select bank1
 16128  086A  1FEA               	btfss	(_curBottomIntLimit+1)^(0+128),7
 16129  086B  2880               	goto	l7107
 16130                           
 16131                           ;settingsscreen.c: 154: {
 16132                           ;settingsscreen.c: 155: bottomInt = -bottomInt;
 16133  086C  0020               	movlb	0	; select bank0
 16134  086D  09B5               	comf	SettingsScreen_Display@bottomInt,f
 16135  086E  09B6               	comf	SettingsScreen_Display@bottomInt+1,f
 16136  086F  0AB5               	incf	SettingsScreen_Display@bottomInt,f
 16137  0870  1903               	skipnz
 16138  0871  0AB6               	incf	SettingsScreen_Display@bottomInt+1,f
 16139                           
 16140                           ;settingsscreen.c: 156: { LCDGotoXY(7 + 3,1); LCDWriteString("-");};
 16141  0872  01A4               	clrf	LCDGotoXY@y
 16142  0873  0AA4               	incf	LCDGotoXY@y,f
 16143  0874  300A               	movlw	10
 16144  0875  3199  210B  3188   	fcall	_LCDGotoXY
 16145  0878  30CF               	movlw	low (STR_33| (0+32768))
 16146  0879  0020               	movlb	0	; select bank0
 16147  087A  00A6               	movwf	LCDWriteString@msg
 16148  087B  3085               	movlw	high (STR_33| (0+32768))
 16149  087C  00A7               	movwf	LCDWriteString@msg+1
 16150  087D  319C  2465  3188   	fcall	_LCDWriteString
 16151  0880                     l7107:	
 16152                           
 16153                           ;settingsscreen.c: 157: }
 16154                           ;settingsscreen.c: 159: { LCDGotoXY(7 + 4,0); LCDWriteInt(upInt,2);};
 16155  0880  0020               	movlb	0	; select bank0
 16156  0881  01A4               	clrf	LCDGotoXY@y
 16157  0882  300B               	movlw	11
 16158  0883  3199  210B  3188   	fcall	_LCDGotoXY
 16159  0886  0020               	movlb	0	; select bank0
 16160  0887  0834               	movf	SettingsScreen_Display@upInt+1,w
 16161  0888  00A5               	movwf	LCDWriteInt@val+1
 16162  0889  0833               	movf	SettingsScreen_Display@upInt,w
 16163  088A  00A4               	movwf	LCDWriteInt@val
 16164  088B  3002               	movlw	2
 16165  088C  00B2               	movwf	??_SettingsScreen_Display
 16166  088D  0832               	movf	??_SettingsScreen_Display,w
 16167  088E  00A6               	movwf	LCDWriteInt@field_length
 16168  088F  3195  25D0  3188   	fcall	_LCDWriteInt
 16169                           
 16170                           ;settingsscreen.c: 160: { LCDGotoXY(7 + 4,1); LCDWriteInt(bottomInt,2);};
 16171  0892  0020               	movlb	0	; select bank0
 16172  0893  01A4               	clrf	LCDGotoXY@y
 16173  0894  0AA4               	incf	LCDGotoXY@y,f
 16174  0895  300B               	movlw	11
 16175  0896  3199  210B  3188   	fcall	_LCDGotoXY
 16176  0899  0020               	movlb	0	; select bank0
 16177  089A  0836               	movf	SettingsScreen_Display@bottomInt+1,w
 16178  089B  00A5               	movwf	LCDWriteInt@val+1
 16179  089C  0835               	movf	SettingsScreen_Display@bottomInt,w
 16180  089D  00A4               	movwf	LCDWriteInt@val
 16181  089E  3002               	movlw	2
 16182  089F  00B2               	movwf	??_SettingsScreen_Display
 16183  08A0  0832               	movf	??_SettingsScreen_Display,w
 16184  08A1  00A6               	movwf	LCDWriteInt@field_length
 16185  08A2  3195  25D0  3188   	fcall	_LCDWriteInt
 16186                           
 16187                           ;settingsscreen.c: 162: { LCDGotoXY(7 + 6,0); LCDWriteString(".");};
 16188  08A5  0020               	movlb	0	; select bank0
 16189  08A6  01A4               	clrf	LCDGotoXY@y
 16190  08A7  300D               	movlw	13
 16191  08A8  3199  210B  3188   	fcall	_LCDGotoXY
 16192  08AB  30D3               	movlw	low (STR_29| (0+32768))
 16193  08AC  0020               	movlb	0	; select bank0
 16194  08AD  00A6               	movwf	LCDWriteString@msg
 16195  08AE  3085               	movlw	high (STR_29| (0+32768))
 16196  08AF  00A7               	movwf	LCDWriteString@msg+1
 16197  08B0  319C  2465  3188   	fcall	_LCDWriteString
 16198                           
 16199                           ;settingsscreen.c: 163: { LCDGotoXY(7 + 6,1); LCDWriteString(".");};
 16200  08B3  0020               	movlb	0	; select bank0
 16201  08B4  01A4               	clrf	LCDGotoXY@y
 16202  08B5  0AA4               	incf	LCDGotoXY@y,f
 16203  08B6  300D               	movlw	13
 16204  08B7  3199  210B  3188   	fcall	_LCDGotoXY
 16205  08BA  30D3               	movlw	low (STR_29| (0+32768))
 16206  08BB  0020               	movlb	0	; select bank0
 16207  08BC  00A6               	movwf	LCDWriteString@msg
 16208  08BD  3085               	movlw	high (STR_29| (0+32768))
 16209  08BE  00A7               	movwf	LCDWriteString@msg+1
 16210  08BF  319C  2465  3188   	fcall	_LCDWriteString
 16211                           
 16212                           ;settingsscreen.c: 165: { LCDGotoXY(7 + 7,0); LCDWriteInt(curUpFractLimit,1);};
 16213  08C2  0020               	movlb	0	; select bank0
 16214  08C3  01A4               	clrf	LCDGotoXY@y
 16215  08C4  300E               	movlw	14
 16216  08C5  3199  210B  3188   	fcall	_LCDGotoXY
 16217  08C8  0021               	movlb	1	; select bank1
 16218  08C9  086C               	movf	(_curUpFractLimit+1)^(0+128),w
 16219  08CA  0020               	movlb	0	; select bank0
 16220  08CB  00A5               	movwf	LCDWriteInt@val+1
 16221  08CC  0021               	movlb	1	; select bank1
 16222  08CD  086B               	movf	_curUpFractLimit^(0+128),w
 16223  08CE  0020               	movlb	0	; select bank0
 16224  08CF  00A4               	movwf	LCDWriteInt@val
 16225  08D0  01A6               	clrf	LCDWriteInt@field_length
 16226  08D1  0AA6               	incf	LCDWriteInt@field_length,f
 16227  08D2  3195  25D0  3188   	fcall	_LCDWriteInt
 16228                           
 16229                           ;settingsscreen.c: 166: { LCDGotoXY(7 + 7,1); LCDWriteInt(curBottomFractLimit,1);};
 16230  08D5  0020               	movlb	0	; select bank0
 16231  08D6  01A4               	clrf	LCDGotoXY@y
 16232  08D7  0AA4               	incf	LCDGotoXY@y,f
 16233  08D8  300E               	movlw	14
 16234  08D9  3199  210B  3188   	fcall	_LCDGotoXY
 16235  08DC  0021               	movlb	1	; select bank1
 16236  08DD  0868               	movf	(_curBottomFractLimit+1)^(0+128),w
 16237  08DE  0020               	movlb	0	; select bank0
 16238  08DF  00A5               	movwf	LCDWriteInt@val+1
 16239  08E0  0021               	movlb	1	; select bank1
 16240  08E1  0867               	movf	_curBottomFractLimit^(0+128),w
 16241  08E2  0020               	movlb	0	; select bank0
 16242  08E3  00A4               	movwf	LCDWriteInt@val
 16243  08E4  01A6               	clrf	LCDWriteInt@field_length
 16244  08E5  0AA6               	incf	LCDWriteInt@field_length,f
 16245  08E6  3195  25D0  3188   	fcall	_LCDWriteInt
 16246                           
 16247                           ;settingsscreen.c: 167: { LCDGotoXY(7 + 8,0); LCDWriteString("C");};
 16248  08E9  0020               	movlb	0	; select bank0
 16249  08EA  01A4               	clrf	LCDGotoXY@y
 16250  08EB  300F               	movlw	15
 16251  08EC  3199  210B  3188   	fcall	_LCDGotoXY
 16252  08EF  30D1               	movlw	low (STR_37| (0+32768))
 16253  08F0  0020               	movlb	0	; select bank0
 16254  08F1  00A6               	movwf	LCDWriteString@msg
 16255  08F2  3085               	movlw	high (STR_37| (0+32768))
 16256  08F3  00A7               	movwf	LCDWriteString@msg+1
 16257  08F4  319C  2465  3188   	fcall	_LCDWriteString
 16258                           
 16259                           ;settingsscreen.c: 168: { LCDGotoXY(7 + 8,1); LCDWriteString("C");};
 16260  08F7  0020               	movlb	0	; select bank0
 16261  08F8  01A4               	clrf	LCDGotoXY@y
 16262  08F9  0AA4               	incf	LCDGotoXY@y,f
 16263  08FA  300F               	movlw	15
 16264  08FB  3199  210B  3188   	fcall	_LCDGotoXY
 16265  08FE  30D1               	movlw	low (STR_37| (0+32768))
 16266  08FF  0020               	movlb	0	; select bank0
 16267  0900  00A6               	movwf	LCDWriteString@msg
 16268  0901  3085               	movlw	high (STR_37| (0+32768))
 16269  0902  00A7               	movwf	LCDWriteString@msg+1
 16270  0903  319C  2465         	fcall	_LCDWriteString
 16271  0905  0008               	return
 16272  0906                     __end_of_SettingsScreen_Display:	
 16273                           
 16274                           	psect	text52
 16275  15D0                     __ptext52:	
 16276 ;; *************** function _LCDWriteInt *****************
 16277 ;; Defined at:
 16278 ;;		line 326 in file "liblcd/lcd.c"
 16279 ;; Parameters:    Size  Location     Type
 16280 ;;  val             2    4[BANK0 ] int 
 16281 ;;  field_length    1    6[BANK0 ] char 
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;  str             5    9[BANK0 ] unsigned char [5]
 16284 ;;  i               2   16[BANK0 ] int 
 16285 ;;  j               2   14[BANK0 ] int 
 16286 ;; Return value:  Size  Location     Type
 16287 ;;		None               void
 16288 ;; Registers used:
 16289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16290 ;; Tracked objects:
 16291 ;;		On entry : 0/0
 16292 ;;		On exit  : 0/0
 16293 ;;		Unchanged: 0/0
 16294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16295 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16296 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16297 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16298 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16299 ;;Total ram usage:       14 bytes
 16300 ;; Hardware stack levels used:    1
 16301 ;; Hardware stack levels required when called:    4
 16302 ;; This function calls:
 16303 ;;		_LCDByte
 16304 ;;		___awdiv
 16305 ;;		___awmod
 16306 ;; This function is called by:
 16307 ;;		_updateTemperature
 16308 ;;		_SettingsScreen_Display
 16309 ;; This function uses a non-reentrant model
 16310 ;;
 16311                           
 16312                           
 16313                           ;psect for function _LCDWriteInt
 16314  15D0                     _LCDWriteInt:	
 16315                           
 16316                           ;lcd.c: 339: char str[5] = {0, 0, 0, 0, 0};
 16317                           
 16318                           ;incstack = 0
 16319                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16320  15D0  30AC               	movlw	low LCDWriteInt@F6391
 16321  15D1  0086               	movwf	6
 16322  15D2  3001               	movlw	high LCDWriteInt@F6391
 16323  15D3  0087               	movwf	7
 16324  15D4  3029               	movlw	low LCDWriteInt@str
 16325  15D5  0084               	movwf	4
 16326  15D6  3000               	movlw	high LCDWriteInt@str
 16327  15D7  0085               	movwf	5
 16328  15D8  3005               	movlw	5
 16329  15D9  0020               	movlb	0	; select bank0
 16330  15DA  00A7               	movwf	??_LCDWriteInt
 16331  15DB                     u8040:	
 16332  15DB  0016               	moviw fsr1++
 16333  15DC  001A               	movwi fsr0++
 16334  15DD  0BA7               	decfsz	??_LCDWriteInt,f
 16335  15DE  2DDB               	goto	u8040
 16336                           
 16337                           ;lcd.c: 340: int i = 4, j = 0;
 16338  15DF  3004               	movlw	4
 16339  15E0  00B0               	movwf	LCDWriteInt@i
 16340  15E1  3000               	movlw	0
 16341  15E2  00B1               	movwf	LCDWriteInt@i+1
 16342  15E3  01AE               	clrf	LCDWriteInt@j
 16343  15E4  01AF               	clrf	LCDWriteInt@j+1
 16344                           
 16345                           ;lcd.c: 343: if (val < 0)
 16346  15E5  1FA5               	btfss	LCDWriteInt@val+1,7
 16347  15E6  2DF3               	goto	l6879
 16348                           
 16349                           ;lcd.c: 344: {
 16350                           ;lcd.c: 345: (LCDByte('-',1));
 16351  15E7  01F7               	clrf	LCDByte@isdata
 16352  15E8  0AF7               	incf	LCDByte@isdata,f
 16353  15E9  302D               	movlw	45
 16354  15EA  319B  2375  3195   	fcall	_LCDByte
 16355                           
 16356                           ;lcd.c: 346: val = val*-1;
 16357  15ED  0020               	movlb	0	; select bank0
 16358  15EE  09A4               	comf	LCDWriteInt@val,f
 16359  15EF  09A5               	comf	LCDWriteInt@val+1,f
 16360  15F0  0AA4               	incf	LCDWriteInt@val,f
 16361  15F1  1903               	skipnz
 16362  15F2  0AA5               	incf	LCDWriteInt@val+1,f
 16363  15F3                     l6879:	
 16364                           ;lcd.c: 347: }
 16365                           ;lcd.c: 349: while (val)
 16366                           
 16367  15F3  0824               	movf	LCDWriteInt@val,w
 16368  15F4  0425               	iorwf	LCDWriteInt@val+1,w
 16369  15F5  1903               	btfsc	3,2
 16370  15F6  2E20               	goto	l6881
 16371                           
 16372                           ;lcd.c: 350: {
 16373                           ;lcd.c: 351: str[i] = val % 10;
 16374  15F7  300A               	movlw	10
 16375  15F8  00F2               	movwf	___awmod@divisor
 16376  15F9  3000               	movlw	0
 16377  15FA  00F3               	movwf	___awmod@divisor+1
 16378  15FB  0825               	movf	LCDWriteInt@val+1,w
 16379  15FC  00F5               	movwf	___awmod@dividend+1
 16380  15FD  0824               	movf	LCDWriteInt@val,w
 16381  15FE  00F4               	movwf	___awmod@dividend
 16382  15FF  319D  25F4  3195   	fcall	___awmod
 16383  1602  0872               	movf	?___awmod,w
 16384  1603  0020               	movlb	0	; select bank0
 16385  1604  00A7               	movwf	??_LCDWriteInt
 16386  1605  0830               	movf	LCDWriteInt@i,w
 16387  1606  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 16388  1607  0086               	movwf	6
 16389  1608  0187               	clrf	7
 16390  1609  0827               	movf	??_LCDWriteInt,w
 16391  160A  0081               	movwf	1
 16392                           
 16393                           ;lcd.c: 352: val = val / 10;
 16394  160B  300A               	movlw	10
 16395  160C  00F2               	movwf	___awdiv@divisor
 16396  160D  3000               	movlw	0
 16397  160E  00F3               	movwf	___awdiv@divisor+1
 16398  160F  0825               	movf	LCDWriteInt@val+1,w
 16399  1610  00F5               	movwf	___awdiv@dividend+1
 16400  1611  0824               	movf	LCDWriteInt@val,w
 16401  1612  00F4               	movwf	___awdiv@dividend
 16402  1613  319F  27AE  3195   	fcall	___awdiv
 16403  1616  0873               	movf	?___awdiv+1,w
 16404  1617  0020               	movlb	0	; select bank0
 16405  1618  00A5               	movwf	LCDWriteInt@val+1
 16406  1619  0872               	movf	?___awdiv,w
 16407  161A  00A4               	movwf	LCDWriteInt@val
 16408                           
 16409                           ;lcd.c: 353: i--;
 16410  161B  30FF               	movlw	255
 16411  161C  07B0               	addwf	LCDWriteInt@i,f
 16412  161D  30FF               	movlw	255
 16413  161E  3DB1               	addwfc	LCDWriteInt@i+1,f
 16414  161F  2DF3               	goto	l6879
 16415  1620                     l6881:	
 16416                           
 16417                           ;lcd.c: 354: }
 16418                           ;lcd.c: 355: if (field_length == -1)
 16419  1620  0A26               	incf	LCDWriteInt@field_length,w
 16420  1621  1903               	btfsc	3,2
 16421  1622  2E28               	goto	l6887
 16422  1623  2E30               	goto	l6889
 16423  1624                     l6885:	
 16424                           ;lcd.c: 356: while (str[j] == 0) j++;
 16425                           
 16426  1624  3001               	movlw	1
 16427  1625  07AE               	addwf	LCDWriteInt@j,f
 16428  1626  3000               	movlw	0
 16429  1627  3DAF               	addwfc	LCDWriteInt@j+1,f
 16430  1628                     l6887:	
 16431  1628  082E               	movf	LCDWriteInt@j,w
 16432  1629  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 16433  162A  0086               	movwf	6
 16434  162B  0187               	clrf	7
 16435  162C  0801               	movf	1,w
 16436  162D  1D03               	btfss	3,2
 16437  162E  2E40               	goto	l6891
 16438  162F  2E24               	goto	l6885
 16439  1630                     l6889:	
 16440                           
 16441                           ;lcd.c: 357: else
 16442                           ;lcd.c: 358: j = 5 - field_length;
 16443  1630  0826               	movf	LCDWriteInt@field_length,w
 16444  1631  00A7               	movwf	??_LCDWriteInt
 16445  1632  01A8               	clrf	??_LCDWriteInt+1
 16446  1633  1BA7               	btfsc	??_LCDWriteInt,7
 16447  1634  03A8               	decf	??_LCDWriteInt+1,f
 16448  1635  09A7               	comf	??_LCDWriteInt,f
 16449  1636  09A8               	comf	??_LCDWriteInt+1,f
 16450  1637  0AA7               	incf	??_LCDWriteInt,f
 16451  1638  1903               	skipnz
 16452  1639  0AA8               	incf	??_LCDWriteInt+1,f
 16453  163A  0827               	movf	??_LCDWriteInt,w
 16454  163B  3E05               	addlw	5
 16455  163C  00AE               	movwf	LCDWriteInt@j
 16456  163D  3000               	movlw	0
 16457  163E  3D28               	addwfc	??_LCDWriteInt+1,w
 16458  163F  00AF               	movwf	LCDWriteInt@j+1
 16459  1640                     l6891:	
 16460                           
 16461                           ;lcd.c: 361: for (i = j; i < 5; i++)
 16462  1640  082F               	movf	LCDWriteInt@j+1,w
 16463  1641  00B1               	movwf	LCDWriteInt@i+1
 16464  1642  082E               	movf	LCDWriteInt@j,w
 16465  1643  00B0               	movwf	LCDWriteInt@i
 16466  1644                     L8:	
 16467  1644  0831               	movf	LCDWriteInt@i+1,w
 16468  1645  3A80               	xorlw	128
 16469  1646  00A7               	movwf	??_LCDWriteInt
 16470  1647  3080               	movlw	128
 16471  1648  0227               	subwf	??_LCDWriteInt,w
 16472  1649  1D03               	skipz
 16473  164A  2E4D               	goto	u8095
 16474  164B  3005               	movlw	5
 16475  164C  0230               	subwf	LCDWriteInt@i,w
 16476  164D                     u8095:	
 16477  164D  1803               	btfsc	3,0
 16478  164E  0008               	return
 16479                           
 16480                           ;lcd.c: 362: {
 16481                           ;lcd.c: 363: (LCDByte(48 + str[i],1));
 16482  164F  01F7               	clrf	LCDByte@isdata
 16483  1650  0AF7               	incf	LCDByte@isdata,f
 16484  1651  0020               	movlb	0	; select bank0
 16485  1652  0830               	movf	LCDWriteInt@i,w
 16486  1653  3E29               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
 16487  1654  0086               	movwf	6
 16488  1655  0187               	clrf	7
 16489  1656  0801               	movf	1,w
 16490  1657  3E30               	addlw	48
 16491  1658  319B  2375  3195   	fcall	_LCDByte
 16492  165B  3001               	movlw	1
 16493  165C  0020               	movlb	0	; select bank0
 16494  165D  07B0               	addwf	LCDWriteInt@i,f
 16495  165E  3000               	movlw	0
 16496  165F  3DB1               	addwfc	LCDWriteInt@i+1,f
 16497  1660  2E44               	goto	L8
 16498  1661                     __end_of_LCDWriteInt:	
 16499                           
 16500                           	psect	text53
 16501  0A04                     __ptext53:	
 16502 ;; *************** function _MenuScreen_Display *****************
 16503 ;; Defined at:
 16504 ;;		line 146 in file "menuscreen.c"
 16505 ;; Parameters:    Size  Location     Type
 16506 ;;		None
 16507 ;; Auto vars:     Size  Location     Type
 16508 ;;		None
 16509 ;; Return value:  Size  Location     Type
 16510 ;;		None               void
 16511 ;; Registers used:
 16512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16513 ;; Tracked objects:
 16514 ;;		On entry : 0/0
 16515 ;;		On exit  : 0/0
 16516 ;;		Unchanged: 0/0
 16517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16520 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16521 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16522 ;;Total ram usage:        6 bytes
 16523 ;; Hardware stack levels used:    1
 16524 ;; Hardware stack levels required when called:    6
 16525 ;; This function calls:
 16526 ;;		_LCDGotoXY
 16527 ;;		_LCDWriteString
 16528 ;;		_MenuScreen_Clear
 16529 ;;		___awmod
 16530 ;;		___wmul
 16531 ;; This function is called by:
 16532 ;;		_main
 16533 ;;		__MenuScreen_MoveUp
 16534 ;;		__MenuScreen_MoveDown
 16535 ;;		__MenuScreen_SetRelease
 16536 ;; This function uses a non-reentrant model
 16537 ;;
 16538                           
 16539                           
 16540                           ;psect for function _MenuScreen_Display
 16541  0A04                     _MenuScreen_Display:	
 16542                           
 16543                           ;menuscreen.c: 148: MenuScreen_Clear();
 16544                           
 16545                           ;incstack = 0
 16546                           ; Regs used in _MenuScreen_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16547  0A04  319C  2426  318A   	fcall	_MenuScreen_Clear
 16548                           
 16549                           ;menuscreen.c: 153: if(menuDir == DIR_UP)
 16550  0A07  0022               	movlb	2	; select bank2
 16551  0A08  0853               	movf	_menuDir^(0+256),w
 16552  0A09  1D03               	btfss	3,2
 16553  0A0A  2AAF               	goto	l7189
 16554                           
 16555                           ;menuscreen.c: 154: {
 16556                           ;menuscreen.c: 155: { LCDGotoXY(7,0); LCDWriteString("*");};
 16557  0A0B  0020               	movlb	0	; select bank0
 16558  0A0C  01A4               	clrf	LCDGotoXY@y
 16559  0A0D  3007               	movlw	7
 16560  0A0E  3199  210B  318A   	fcall	_LCDGotoXY
 16561  0A11  30CD               	movlw	low (STR_30| (0+32768))
 16562  0A12  0020               	movlb	0	; select bank0
 16563  0A13  00A6               	movwf	LCDWriteString@msg
 16564  0A14  3085               	movlw	high (STR_30| (0+32768))
 16565  0A15  00A7               	movwf	LCDWriteString@msg+1
 16566  0A16  319C  2465  318A   	fcall	_LCDWriteString
 16567                           
 16568                           ;menuscreen.c: 156: { LCDGotoXY(7,1); LCDWriteString(" ");};
 16569  0A19  0020               	movlb	0	; select bank0
 16570  0A1A  01A4               	clrf	LCDGotoXY@y
 16571  0A1B  0AA4               	incf	LCDGotoXY@y,f
 16572  0A1C  3007               	movlw	7
 16573  0A1D  3199  210B  318A   	fcall	_LCDGotoXY
 16574  0A20  30A4               	movlw	low ((STR_46+4)| (0+32768))
 16575  0A21  0020               	movlb	0	; select bank0
 16576  0A22  00A6               	movwf	LCDWriteString@msg
 16577  0A23  3085               	movlw	high ((STR_46+4)| (0+32768))
 16578  0A24  00A7               	movwf	LCDWriteString@msg+1
 16579  0A25  319C  2465  318A   	fcall	_LCDWriteString
 16580                           
 16581                           ;menuscreen.c: 157: { LCDGotoXY(7 + 1,0); LCDWriteString(MainMenu[( ( (_Menu_SelectedIte
      +                          m) + _Menu_MaxValidIndex + 1) % (_Menu_MaxValidIndex + 1))].String);};
 16582  0A28  0020               	movlb	0	; select bank0
 16583  0A29  01A4               	clrf	LCDGotoXY@y
 16584  0A2A  3008               	movlw	8
 16585  0A2B  3199  210B  318A   	fcall	_LCDGotoXY
 16586  0A2E  087B               	movf	__Menu_SelectedItem,w
 16587  0A2F  077A               	addwf	__Menu_MaxValidIndex,w
 16588  0A30  0020               	movlb	0	; select bank0
 16589  0A31  00AD               	movwf	??_MenuScreen_Display
 16590  0A32  01AE               	clrf	??_MenuScreen_Display+1
 16591  0A33  1803               	skipnc
 16592  0A34  0AAE               	incf	??_MenuScreen_Display+1,f
 16593  0A35  1BFB               	btfsc	__Menu_SelectedItem,7
 16594  0A36  03AE               	decf	??_MenuScreen_Display+1,f
 16595  0A37  1BFA               	btfsc	__Menu_MaxValidIndex,7
 16596  0A38  03AE               	decf	??_MenuScreen_Display+1,f
 16597  0A39  0020               	movlb	0	; select bank0
 16598  0A3A  082D               	movf	??_MenuScreen_Display,w
 16599  0A3B  3E01               	addlw	1
 16600  0A3C  00F4               	movwf	___awmod@dividend
 16601  0A3D  3000               	movlw	0
 16602  0A3E  3D2E               	addwfc	??_MenuScreen_Display+1,w
 16603  0A3F  00F5               	movwf	___awmod@dividend+1
 16604  0A40  3001               	movlw	1
 16605  0A41  077A               	addwf	__Menu_MaxValidIndex,w
 16606  0A42  00F2               	movwf	___awmod@divisor
 16607  0A43  01F3               	clrf	___awmod@divisor+1
 16608  0A44  1803               	skipnc
 16609  0A45  0AF3               	incf	___awmod@divisor+1,f
 16610  0A46  1BFA               	btfsc	__Menu_MaxValidIndex,7
 16611  0A47  03F3               	decf	___awmod@divisor+1,f
 16612  0A48  319D  25F4  318A   	fcall	___awmod
 16613  0A4B  0873               	movf	?___awmod+1,w
 16614  0A4C  0020               	movlb	0	; select bank0
 16615  0A4D  00A1               	movwf	___wmul@multiplier+1
 16616  0A4E  0872               	movf	?___awmod,w
 16617  0A4F  00A0               	movwf	___wmul@multiplier
 16618  0A50  300C               	movlw	12
 16619  0A51  00A2               	movwf	___wmul@multiplicand
 16620  0A52  3000               	movlw	0
 16621  0A53  00A3               	movwf	___wmul@multiplicand+1
 16622  0A54  3198  203A  318A   	fcall	___wmul
 16623  0A57  0020               	movlb	0	; select bank0
 16624  0A58  0820               	movf	?___wmul,w
 16625  0A59  3E01               	addlw	1
 16626  0A5A  00AF               	movwf	??_MenuScreen_Display+2
 16627  0A5B  3000               	movlw	0
 16628  0A5C  3D21               	addwfc	?___wmul+1,w
 16629  0A5D  00B0               	movwf	??_MenuScreen_Display+3
 16630  0A5E  3078               	movlw	120
 16631  0A5F  00B1               	movwf	??_MenuScreen_Display+4
 16632  0A60  3027               	movlw	39
 16633  0A61  00B2               	movwf	??_MenuScreen_Display+5
 16634  0A62  082F               	movf	??_MenuScreen_Display+2,w
 16635  0A63  0731               	addwf	??_MenuScreen_Display+4,w
 16636  0A64  00A6               	movwf	LCDWriteString@msg
 16637  0A65  0830               	movf	??_MenuScreen_Display+3,w
 16638  0A66  3D32               	addwfc	??_MenuScreen_Display+5,w
 16639  0A67  00A7               	movwf	LCDWriteString@msg+1
 16640  0A68  319C  2465  318A   	fcall	_LCDWriteString
 16641                           
 16642                           ;menuscreen.c: 158: { LCDGotoXY(7 + 1,1); LCDWriteString(MainMenu[( ( (_Menu_SelectedIte
      +                          m + 1) + _Menu_MaxValidIndex + 1) % (_Menu_MaxValidIndex + 1))].String);};
 16643  0A6B  0020               	movlb	0	; select bank0
 16644  0A6C  01A4               	clrf	LCDGotoXY@y
 16645  0A6D  0AA4               	incf	LCDGotoXY@y,f
 16646  0A6E  3008               	movlw	8
 16647  0A6F  3199  210B  318A   	fcall	_LCDGotoXY
 16648  0A72  087B               	movf	__Menu_SelectedItem,w
 16649  0A73  077A               	addwf	__Menu_MaxValidIndex,w
 16650  0A74  0020               	movlb	0	; select bank0
 16651  0A75  00AD               	movwf	??_MenuScreen_Display
 16652  0A76  01AE               	clrf	??_MenuScreen_Display+1
 16653  0A77  1803               	skipnc
 16654  0A78  0AAE               	incf	??_MenuScreen_Display+1,f
 16655  0A79  1BFB               	btfsc	__Menu_SelectedItem,7
 16656  0A7A  03AE               	decf	??_MenuScreen_Display+1,f
 16657  0A7B  1BFA               	btfsc	__Menu_MaxValidIndex,7
 16658  0A7C  03AE               	decf	??_MenuScreen_Display+1,f
 16659  0A7D  0020               	movlb	0	; select bank0
 16660  0A7E  082D               	movf	??_MenuScreen_Display,w
 16661  0A7F  3E02               	addlw	2
 16662  0A80  00F4               	movwf	___awmod@dividend
 16663  0A81  3000               	movlw	0
 16664  0A82  3D2E               	addwfc	??_MenuScreen_Display+1,w
 16665  0A83  00F5               	movwf	___awmod@dividend+1
 16666  0A84  3001               	movlw	1
 16667  0A85  077A               	addwf	__Menu_MaxValidIndex,w
 16668  0A86  00F2               	movwf	___awmod@divisor
 16669  0A87  01F3               	clrf	___awmod@divisor+1
 16670  0A88  1803               	skipnc
 16671  0A89  0AF3               	incf	___awmod@divisor+1,f
 16672  0A8A  1BFA               	btfsc	__Menu_MaxValidIndex,7
 16673  0A8B  03F3               	decf	___awmod@divisor+1,f
 16674  0A8C  319D  25F4  318A   	fcall	___awmod
 16675  0A8F  0873               	movf	?___awmod+1,w
 16676  0A90  0020               	movlb	0	; select bank0
 16677  0A91  00A1               	movwf	___wmul@multiplier+1
 16678  0A92  0872               	movf	?___awmod,w
 16679  0A93  00A0               	movwf	___wmul@multiplier
 16680  0A94  300C               	movlw	12
 16681  0A95  00A2               	movwf	___wmul@multiplicand
 16682  0A96  3000               	movlw	0
 16683  0A97  00A3               	movwf	___wmul@multiplicand+1
 16684  0A98  3198  203A  318A   	fcall	___wmul
 16685  0A9B  0020               	movlb	0	; select bank0
 16686  0A9C  0820               	movf	?___wmul,w
 16687  0A9D  3E01               	addlw	1
 16688  0A9E  00AF               	movwf	??_MenuScreen_Display+2
 16689  0A9F  3000               	movlw	0
 16690  0AA0  3D21               	addwfc	?___wmul+1,w
 16691  0AA1  00B0               	movwf	??_MenuScreen_Display+3
 16692  0AA2  3078               	movlw	120
 16693  0AA3  00B1               	movwf	??_MenuScreen_Display+4
 16694  0AA4  3027               	movlw	39
 16695  0AA5  00B2               	movwf	??_MenuScreen_Display+5
 16696  0AA6  082F               	movf	??_MenuScreen_Display+2,w
 16697  0AA7  0731               	addwf	??_MenuScreen_Display+4,w
 16698  0AA8  00A6               	movwf	LCDWriteString@msg
 16699  0AA9  0830               	movf	??_MenuScreen_Display+3,w
 16700  0AAA  3D32               	addwfc	??_MenuScreen_Display+5,w
 16701  0AAB  00A7               	movwf	LCDWriteString@msg+1
 16702  0AAC  319C  2465         	fcall	_LCDWriteString
 16703                           
 16704                           ;menuscreen.c: 159: }
 16705  0AAE  0008               	return
 16706  0AAF                     l7189:	
 16707                           
 16708                           ;menuscreen.c: 160: else if(menuDir == DIR_DOWN)
 16709  0AAF  0022               	movlb	2	; select bank2
 16710  0AB0  0353               	decf	_menuDir^(0+256),w
 16711  0AB1  1D03               	btfss	3,2
 16712  0AB2  0008               	return
 16713                           
 16714                           ;menuscreen.c: 161: {
 16715                           ;menuscreen.c: 162: { LCDGotoXY(7,0); LCDWriteString(" ");};
 16716  0AB3  0020               	movlb	0	; select bank0
 16717  0AB4  01A4               	clrf	LCDGotoXY@y
 16718  0AB5  3007               	movlw	7
 16719  0AB6  3199  210B  318A   	fcall	_LCDGotoXY
 16720  0AB9  30A4               	movlw	low ((STR_46+4)| (0+32768))
 16721  0ABA  0020               	movlb	0	; select bank0
 16722  0ABB  00A6               	movwf	LCDWriteString@msg
 16723  0ABC  3085               	movlw	high ((STR_46+4)| (0+32768))
 16724  0ABD  00A7               	movwf	LCDWriteString@msg+1
 16725  0ABE  319C  2465  318A   	fcall	_LCDWriteString
 16726                           
 16727                           ;menuscreen.c: 163: { LCDGotoXY(7,1); LCDWriteString("*");};
 16728  0AC1  0020               	movlb	0	; select bank0
 16729  0AC2  01A4               	clrf	LCDGotoXY@y
 16730  0AC3  0AA4               	incf	LCDGotoXY@y,f
 16731  0AC4  3007               	movlw	7
 16732  0AC5  3199  210B  318A   	fcall	_LCDGotoXY
 16733  0AC8  30CD               	movlw	low (STR_30| (0+32768))
 16734  0AC9  0020               	movlb	0	; select bank0
 16735  0ACA  00A6               	movwf	LCDWriteString@msg
 16736  0ACB  3085               	movlw	high (STR_30| (0+32768))
 16737  0ACC  00A7               	movwf	LCDWriteString@msg+1
 16738  0ACD  319C  2465  318A   	fcall	_LCDWriteString
 16739                           
 16740                           ;menuscreen.c: 164: { LCDGotoXY(7 + 1,0); LCDWriteString(MainMenu[( ( (_Menu_SelectedIte
      +                          m - 1) + _Menu_MaxValidIndex + 1) % (_Menu_MaxValidIndex + 1))].String);};
 16741  0AD0  0020               	movlb	0	; select bank0
 16742  0AD1  01A4               	clrf	LCDGotoXY@y
 16743  0AD2  3008               	movlw	8
 16744  0AD3  3199  210B  318A   	fcall	_LCDGotoXY
 16745  0AD6  087B               	movf	__Menu_SelectedItem,w
 16746  0AD7  077A               	addwf	__Menu_MaxValidIndex,w
 16747  0AD8  00F4               	movwf	___awmod@dividend
 16748  0AD9  01F5               	clrf	___awmod@dividend+1
 16749  0ADA  1803               	skipnc
 16750  0ADB  0AF5               	incf	___awmod@dividend+1,f
 16751  0ADC  1BFB               	btfsc	__Menu_SelectedItem,7
 16752  0ADD  03F5               	decf	___awmod@dividend+1,f
 16753  0ADE  1BFA               	btfsc	__Menu_MaxValidIndex,7
 16754  0ADF  03F5               	decf	___awmod@dividend+1,f
 16755  0AE0  3001               	movlw	1
 16756  0AE1  077A               	addwf	__Menu_MaxValidIndex,w
 16757  0AE2  00F2               	movwf	___awmod@divisor
 16758  0AE3  01F3               	clrf	___awmod@divisor+1
 16759  0AE4  1803               	skipnc
 16760  0AE5  0AF3               	incf	___awmod@divisor+1,f
 16761  0AE6  1BFA               	btfsc	__Menu_MaxValidIndex,7
 16762  0AE7  03F3               	decf	___awmod@divisor+1,f
 16763  0AE8  319D  25F4  318A   	fcall	___awmod
 16764  0AEB  0873               	movf	?___awmod+1,w
 16765  0AEC  0020               	movlb	0	; select bank0
 16766  0AED  00A1               	movwf	___wmul@multiplier+1
 16767  0AEE  0872               	movf	?___awmod,w
 16768  0AEF  00A0               	movwf	___wmul@multiplier
 16769  0AF0  300C               	movlw	12
 16770  0AF1  00A2               	movwf	___wmul@multiplicand
 16771  0AF2  3000               	movlw	0
 16772  0AF3  00A3               	movwf	___wmul@multiplicand+1
 16773  0AF4  3198  203A  318A   	fcall	___wmul
 16774  0AF7  0020               	movlb	0	; select bank0
 16775  0AF8  0820               	movf	?___wmul,w
 16776  0AF9  3E01               	addlw	1
 16777  0AFA  00AD               	movwf	??_MenuScreen_Display
 16778  0AFB  3000               	movlw	0
 16779  0AFC  3D21               	addwfc	?___wmul+1,w
 16780  0AFD  00AE               	movwf	??_MenuScreen_Display+1
 16781  0AFE  3078               	movlw	120
 16782  0AFF  00AF               	movwf	??_MenuScreen_Display+2
 16783  0B00  3027               	movlw	39
 16784  0B01  00B0               	movwf	??_MenuScreen_Display+3
 16785  0B02  082D               	movf	??_MenuScreen_Display,w
 16786  0B03  072F               	addwf	??_MenuScreen_Display+2,w
 16787  0B04  00A6               	movwf	LCDWriteString@msg
 16788  0B05  082E               	movf	??_MenuScreen_Display+1,w
 16789  0B06  3D30               	addwfc	??_MenuScreen_Display+3,w
 16790  0B07  00A7               	movwf	LCDWriteString@msg+1
 16791  0B08  319C  2465  318A   	fcall	_LCDWriteString
 16792                           
 16793                           ;menuscreen.c: 165: { LCDGotoXY(7 + 1,1); LCDWriteString(MainMenu[( ( (_Menu_SelectedIte
      +                          m) + _Menu_MaxValidIndex + 1) % (_Menu_MaxValidIndex + 1))].String);};
 16794  0B0B  0020               	movlb	0	; select bank0
 16795  0B0C  01A4               	clrf	LCDGotoXY@y
 16796  0B0D  0AA4               	incf	LCDGotoXY@y,f
 16797  0B0E  3008               	movlw	8
 16798  0B0F  3199  210B  318A   	fcall	_LCDGotoXY
 16799  0B12  087B               	movf	__Menu_SelectedItem,w
 16800  0B13  077A               	addwf	__Menu_MaxValidIndex,w
 16801  0B14  0020               	movlb	0	; select bank0
 16802  0B15  00AD               	movwf	??_MenuScreen_Display
 16803  0B16  01AE               	clrf	??_MenuScreen_Display+1
 16804  0B17  1803               	skipnc
 16805  0B18  0AAE               	incf	??_MenuScreen_Display+1,f
 16806  0B19  1BFB               	btfsc	__Menu_SelectedItem,7
 16807  0B1A  03AE               	decf	??_MenuScreen_Display+1,f
 16808  0B1B  1BFA               	btfsc	__Menu_MaxValidIndex,7
 16809  0B1C  03AE               	decf	??_MenuScreen_Display+1,f
 16810  0B1D  0020               	movlb	0	; select bank0
 16811  0B1E  082D               	movf	??_MenuScreen_Display,w
 16812  0B1F  3E01               	addlw	1
 16813  0B20  00F4               	movwf	___awmod@dividend
 16814  0B21  3000               	movlw	0
 16815  0B22  3D2E               	addwfc	??_MenuScreen_Display+1,w
 16816  0B23  00F5               	movwf	___awmod@dividend+1
 16817  0B24  3001               	movlw	1
 16818  0B25  077A               	addwf	__Menu_MaxValidIndex,w
 16819  0B26  00F2               	movwf	___awmod@divisor
 16820  0B27  01F3               	clrf	___awmod@divisor+1
 16821  0B28  1803               	skipnc
 16822  0B29  0AF3               	incf	___awmod@divisor+1,f
 16823  0B2A  1BFA               	btfsc	__Menu_MaxValidIndex,7
 16824  0B2B  03F3               	decf	___awmod@divisor+1,f
 16825  0B2C  319D  25F4  318A   	fcall	___awmod
 16826  0B2F  0873               	movf	?___awmod+1,w
 16827  0B30  0020               	movlb	0	; select bank0
 16828  0B31  00A1               	movwf	___wmul@multiplier+1
 16829  0B32  0872               	movf	?___awmod,w
 16830  0B33  00A0               	movwf	___wmul@multiplier
 16831  0B34  300C               	movlw	12
 16832  0B35  00A2               	movwf	___wmul@multiplicand
 16833  0B36  3000               	movlw	0
 16834  0B37  00A3               	movwf	___wmul@multiplicand+1
 16835  0B38  3198  203A  318A   	fcall	___wmul
 16836  0B3B  0020               	movlb	0	; select bank0
 16837  0B3C  0820               	movf	?___wmul,w
 16838  0B3D  3E01               	addlw	1
 16839  0B3E  00AF               	movwf	??_MenuScreen_Display+2
 16840  0B3F  3000               	movlw	0
 16841  0B40  3D21               	addwfc	?___wmul+1,w
 16842  0B41  00B0               	movwf	??_MenuScreen_Display+3
 16843  0B42  3078               	movlw	120
 16844  0B43  00B1               	movwf	??_MenuScreen_Display+4
 16845  0B44  3027               	movlw	39
 16846  0B45  00B2               	movwf	??_MenuScreen_Display+5
 16847  0B46  082F               	movf	??_MenuScreen_Display+2,w
 16848  0B47  0731               	addwf	??_MenuScreen_Display+4,w
 16849  0B48  00A6               	movwf	LCDWriteString@msg
 16850  0B49  0830               	movf	??_MenuScreen_Display+3,w
 16851  0B4A  3D32               	addwfc	??_MenuScreen_Display+5,w
 16852  0B4B  00A7               	movwf	LCDWriteString@msg+1
 16853  0B4C  319C  2465         	fcall	_LCDWriteString
 16854  0B4E  0008               	return
 16855  0B4F                     __end_of_MenuScreen_Display:	
 16856                           
 16857                           	psect	text54
 16858  1DF4                     __ptext54:	
 16859 ;; *************** function ___awmod *****************
 16860 ;; Defined at:
 16861 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/awmod.c"
 16862 ;; Parameters:    Size  Location     Type
 16863 ;;  divisor         2    2[COMMON] int 
 16864 ;;  dividend        2    4[COMMON] int 
 16865 ;; Auto vars:     Size  Location     Type
 16866 ;;  sign            1    8[COMMON] unsigned char 
 16867 ;;  counter         1    7[COMMON] unsigned char 
 16868 ;; Return value:  Size  Location     Type
 16869 ;;                  2    2[COMMON] int 
 16870 ;; Registers used:
 16871 ;;		wreg, status,2, status,0
 16872 ;; Tracked objects:
 16873 ;;		On entry : 0/0
 16874 ;;		On exit  : 0/0
 16875 ;;		Unchanged: 0/0
 16876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16878 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16880 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16881 ;;Total ram usage:        7 bytes
 16882 ;; Hardware stack levels used:    1
 16883 ;; Hardware stack levels required when called:    2
 16884 ;; This function calls:
 16885 ;;		Nothing
 16886 ;; This function is called by:
 16887 ;;		_LCDWriteInt
 16888 ;;		_MenuScreen_Display
 16889 ;; This function uses a non-reentrant model
 16890 ;;
 16891                           
 16892                           
 16893                           ;psect for function ___awmod
 16894  1DF4                     ___awmod:	
 16895                           
 16896                           ;incstack = 0
 16897                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 16898  1DF4  01F8               	clrf	___awmod@sign
 16899  1DF5  1FF5               	btfss	___awmod@dividend+1,7
 16900  1DF6  2DFE               	goto	l4675
 16901  1DF7  09F4               	comf	___awmod@dividend,f
 16902  1DF8  09F5               	comf	___awmod@dividend+1,f
 16903  1DF9  0AF4               	incf	___awmod@dividend,f
 16904  1DFA  1903               	skipnz
 16905  1DFB  0AF5               	incf	___awmod@dividend+1,f
 16906  1DFC  01F8               	clrf	___awmod@sign
 16907  1DFD  0AF8               	incf	___awmod@sign,f
 16908  1DFE                     l4675:	
 16909  1DFE  1FF3               	btfss	___awmod@divisor+1,7
 16910  1DFF  2E05               	goto	l4679
 16911  1E00  09F2               	comf	___awmod@divisor,f
 16912  1E01  09F3               	comf	___awmod@divisor+1,f
 16913  1E02  0AF2               	incf	___awmod@divisor,f
 16914  1E03  1903               	skipnz
 16915  1E04  0AF3               	incf	___awmod@divisor+1,f
 16916  1E05                     l4679:	
 16917  1E05  0872               	movf	___awmod@divisor,w
 16918  1E06  0473               	iorwf	___awmod@divisor+1,w
 16919  1E07  1903               	btfsc	3,2
 16920  1E08  2E2C               	goto	l4697
 16921  1E09  01F7               	clrf	___awmod@counter
 16922  1E0A  0AF7               	incf	___awmod@counter,f
 16923  1E0B                     l4687:	
 16924  1E0B  1BF3               	btfsc	___awmod@divisor+1,7
 16925  1E0C  2E17               	goto	l4689
 16926  1E0D  3001               	movlw	1
 16927  1E0E                     u4495:	
 16928  1E0E  35F2               	lslf	___awmod@divisor,f
 16929  1E0F  0DF3               	rlf	___awmod@divisor+1,f
 16930  1E10  0B89               	decfsz	9,f
 16931  1E11  2E0E               	goto	u4495
 16932  1E12  3001               	movlw	1
 16933  1E13  00F6               	movwf	??___awmod
 16934  1E14  0876               	movf	??___awmod,w
 16935  1E15  07F7               	addwf	___awmod@counter,f
 16936  1E16  2E0B               	goto	l4687
 16937  1E17                     l4689:	
 16938  1E17  0873               	movf	___awmod@divisor+1,w
 16939  1E18  0275               	subwf	___awmod@dividend+1,w
 16940  1E19  1D03               	skipz
 16941  1E1A  2E1D               	goto	u4515
 16942  1E1B  0872               	movf	___awmod@divisor,w
 16943  1E1C  0274               	subwf	___awmod@dividend,w
 16944  1E1D                     u4515:	
 16945  1E1D  1C03               	skipc
 16946  1E1E  2E23               	goto	l4693
 16947  1E1F  0872               	movf	___awmod@divisor,w
 16948  1E20  02F4               	subwf	___awmod@dividend,f
 16949  1E21  0873               	movf	___awmod@divisor+1,w
 16950  1E22  3BF5               	subwfb	___awmod@dividend+1,f
 16951  1E23                     l4693:	
 16952  1E23  3001               	movlw	1
 16953  1E24                     u4525:	
 16954  1E24  36F3               	lsrf	___awmod@divisor+1,f
 16955  1E25  0CF2               	rrf	___awmod@divisor,f
 16956  1E26  0B89               	decfsz	9,f
 16957  1E27  2E24               	goto	u4525
 16958  1E28  3001               	movlw	1
 16959  1E29  02F7               	subwf	___awmod@counter,f
 16960  1E2A  1D03               	btfss	3,2
 16961  1E2B  2E17               	goto	l4689
 16962  1E2C                     l4697:	
 16963  1E2C  0878               	movf	___awmod@sign,w
 16964  1E2D  1903               	btfsc	3,2
 16965  1E2E  2E34               	goto	l4701
 16966  1E2F  09F4               	comf	___awmod@dividend,f
 16967  1E30  09F5               	comf	___awmod@dividend+1,f
 16968  1E31  0AF4               	incf	___awmod@dividend,f
 16969  1E32  1903               	skipnz
 16970  1E33  0AF5               	incf	___awmod@dividend+1,f
 16971  1E34                     l4701:	
 16972  1E34  0875               	movf	___awmod@dividend+1,w
 16973  1E35  00F3               	movwf	?___awmod+1
 16974  1E36  0874               	movf	___awmod@dividend,w
 16975  1E37  00F2               	movwf	?___awmod
 16976  1E38  0008               	return
 16977  1E39                     __end_of___awmod:	
 16978                           
 16979                           	psect	text55
 16980  1C26                     __ptext55:	
 16981 ;; *************** function _MenuScreen_Clear *****************
 16982 ;; Defined at:
 16983 ;;		line 107 in file "menuscreen.c"
 16984 ;; Parameters:    Size  Location     Type
 16985 ;;		None
 16986 ;; Auto vars:     Size  Location     Type
 16987 ;;  i               2   11[BANK0 ] unsigned int 
 16988 ;; Return value:  Size  Location     Type
 16989 ;;		None               void
 16990 ;; Registers used:
 16991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16992 ;; Tracked objects:
 16993 ;;		On entry : 0/0
 16994 ;;		On exit  : 0/0
 16995 ;;		Unchanged: 0/0
 16996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16998 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16999 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17000 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17001 ;;Total ram usage:        3 bytes
 17002 ;; Hardware stack levels used:    1
 17003 ;; Hardware stack levels required when called:    5
 17004 ;; This function calls:
 17005 ;;		_LCDGotoXY
 17006 ;;		_LCDWriteString
 17007 ;; This function is called by:
 17008 ;;		_SettingsScreen_Init
 17009 ;;		_SettingsScreen_Display
 17010 ;;		_MenuScreen_Display
 17011 ;; This function uses a non-reentrant model
 17012 ;;
 17013                           
 17014                           
 17015                           ;psect for function _MenuScreen_Clear
 17016  1C26                     _MenuScreen_Clear:	
 17017                           
 17018                           ;menuscreen.c: 109: static char allSpace[9] = {0};
 17019                           ;menuscreen.c: 110: if(allSpace[0] == 0)
 17020                           
 17021                           ;incstack = 0
 17022                           ; Regs used in _MenuScreen_Clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17023  1C26  0023               	movlb	3	; select bank3
 17024  1C27  0841               	movf	MenuScreen_Clear@allSpace^(0+384),w
 17025  1C28  1D03               	btfss	3,2
 17026  1C29  2C48               	goto	l6983
 17027                           
 17028                           ;menuscreen.c: 111: {
 17029                           ;menuscreen.c: 112: size_t i;
 17030                           ;menuscreen.c: 113: for(i = 0;i<9;++i)
 17031  1C2A  0020               	movlb	0	; select bank0
 17032  1C2B  01AB               	clrf	MenuScreen_Clear@i
 17033  1C2C  01AC               	clrf	MenuScreen_Clear@i+1
 17034  1C2D  3000               	movlw	0
 17035  1C2E  022C               	subwf	MenuScreen_Clear@i+1,w
 17036  1C2F  3009               	movlw	9
 17037  1C30  1903               	skipnz
 17038  1C31  022B               	subwf	MenuScreen_Clear@i,w
 17039  1C32  1803               	btfsc	3,0
 17040  1C33  2C48               	goto	l6983
 17041  1C34                     l6977:	
 17042                           
 17043                           ;menuscreen.c: 114: {
 17044                           ;menuscreen.c: 115: allSpace[i] = ' ';
 17045  1C34  3020               	movlw	32
 17046  1C35  00AA               	movwf	??_MenuScreen_Clear
 17047  1C36  082B               	movf	MenuScreen_Clear@i,w
 17048  1C37  3EC1               	addlw	(low (MenuScreen_Clear@allSpace| (0+256)))& (0+255)
 17049  1C38  0086               	movwf	6
 17050  1C39  3001               	movlw	1	; select bank3/4
 17051  1C3A  0087               	movwf	7
 17052  1C3B  082A               	movf	??_MenuScreen_Clear,w
 17053  1C3C  0081               	movwf	1
 17054  1C3D  3001               	movlw	1
 17055  1C3E  07AB               	addwf	MenuScreen_Clear@i,f
 17056  1C3F  3000               	movlw	0
 17057  1C40  3DAC               	addwfc	MenuScreen_Clear@i+1,f
 17058  1C41  3000               	movlw	0
 17059  1C42  022C               	subwf	MenuScreen_Clear@i+1,w
 17060  1C43  3009               	movlw	9
 17061  1C44  1903               	skipnz
 17062  1C45  022B               	subwf	MenuScreen_Clear@i,w
 17063  1C46  1C03               	skipc
 17064  1C47  2C34               	goto	l6977
 17065  1C48                     l6983:	
 17066                           
 17067                           ;menuscreen.c: 116: }
 17068                           ;menuscreen.c: 117: }
 17069                           ;menuscreen.c: 118: { LCDGotoXY(7,0); LCDWriteString(allSpace);};
 17070  1C48  0020               	movlb	0	; select bank0
 17071  1C49  01A4               	clrf	LCDGotoXY@y
 17072  1C4A  3007               	movlw	7
 17073  1C4B  3199  210B  319C   	fcall	_LCDGotoXY
 17074  1C4E  30C1               	movlw	low MenuScreen_Clear@allSpace
 17075  1C4F  0020               	movlb	0	; select bank0
 17076  1C50  00A6               	movwf	LCDWriteString@msg
 17077  1C51  3001               	movlw	high MenuScreen_Clear@allSpace
 17078  1C52  00A7               	movwf	LCDWriteString@msg+1
 17079  1C53  319C  2465  319C   	fcall	_LCDWriteString
 17080                           
 17081                           ;menuscreen.c: 119: { LCDGotoXY(7,1); LCDWriteString(allSpace);};
 17082  1C56  0020               	movlb	0	; select bank0
 17083  1C57  01A4               	clrf	LCDGotoXY@y
 17084  1C58  0AA4               	incf	LCDGotoXY@y,f
 17085  1C59  3007               	movlw	7
 17086  1C5A  3199  210B  319C   	fcall	_LCDGotoXY
 17087  1C5D  30C1               	movlw	low MenuScreen_Clear@allSpace
 17088  1C5E  0020               	movlb	0	; select bank0
 17089  1C5F  00A6               	movwf	LCDWriteString@msg
 17090  1C60  3001               	movlw	high MenuScreen_Clear@allSpace
 17091  1C61  00A7               	movwf	LCDWriteString@msg+1
 17092  1C62  319C  2465         	fcall	_LCDWriteString
 17093  1C64  0008               	return
 17094  1C65                     __end_of_MenuScreen_Clear:	
 17095                           
 17096                           	psect	text56
 17097  1BEB                     __ptext56:	
 17098 ;; *************** function __ACKLastSavedEvent *****************
 17099 ;; Defined at:
 17100 ;;		line 74 in file "alarm.c"
 17101 ;; Parameters:    Size  Location     Type
 17102 ;;		None
 17103 ;; Auto vars:     Size  Location     Type
 17104 ;;  newEvent       16    0[BANK1 ] volatile struct .
 17105 ;; Return value:  Size  Location     Type
 17106 ;;		None               void
 17107 ;; Registers used:
 17108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17109 ;; Tracked objects:
 17110 ;;		On entry : 0/0
 17111 ;;		On exit  : 0/0
 17112 ;;		Unchanged: 0/0
 17113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17115 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17116 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17117 ;;      Totals:         0       3      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17118 ;;Total ram usage:       19 bytes
 17119 ;; Hardware stack levels used:    1
 17120 ;; Hardware stack levels required when called:    7
 17121 ;; This function calls:
 17122 ;;		_EEPROM_25AA040A_ReadToBuffer
 17123 ;;		__AlarmEvent_SaveToAddress
 17124 ;; This function is called by:
 17125 ;;		_ACKAlarm
 17126 ;; This function uses a non-reentrant model
 17127 ;;
 17128                           
 17129                           
 17130                           ;psect for function __ACKLastSavedEvent
 17131  1BEB                     __ACKLastSavedEvent:	
 17132                           
 17133                           ;alarm.c: 76: AlarmEvent newEvent;
 17134                           ;alarm.c: 77: EEPROM_25AA040A_ReadToBuffer( 0x0F + 1 +
 17135                           ;alarm.c: 78: (SavedEventCounter - 1) * sizeof(AlarmEvent),
 17136                           ;alarm.c: 79: (uint8_t*)&newEvent, sizeof(AlarmEvent));
 17137                           
 17138                           ;incstack = 0
 17139                           ; Regs used in __ACKLastSavedEvent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17140  1BEB  0021               	movlb	1	; select bank1
 17141  1BEC  0861               	movf	_SavedEventCounter^(0+128),w
 17142  1BED  0020               	movlb	0	; select bank0
 17143  1BEE  00EC               	movwf	??__ACKLastSavedEvent
 17144  1BEF  01ED               	clrf	??__ACKLastSavedEvent+1
 17145  1BF0  0EEC               	swapf	??__ACKLastSavedEvent,f
 17146  1BF1  0EED               	swapf	??__ACKLastSavedEvent+1,f
 17147  1BF2  30F0               	movlw	240
 17148  1BF3  05ED               	andwf	??__ACKLastSavedEvent+1,f
 17149  1BF4  086C               	movf	??__ACKLastSavedEvent,w
 17150  1BF5  390F               	andlw	15
 17151  1BF6  04ED               	iorwf	??__ACKLastSavedEvent+1,f
 17152  1BF7  30F0               	movlw	240
 17153  1BF8  05EC               	andwf	??__ACKLastSavedEvent,f
 17154  1BF9  086C               	movf	??__ACKLastSavedEvent,w
 17155  1BFA  00F3               	movwf	EEPROM_25AA040A_ReadToBuffer@address
 17156  1BFB  086D               	movf	??__ACKLastSavedEvent+1,w
 17157  1BFC  00F4               	movwf	EEPROM_25AA040A_ReadToBuffer@address+1
 17158  1BFD  30A0               	movlw	(low (__ACKLastSavedEvent@newEvent| 0))& (0+255)
 17159  1BFE  00EE               	movwf	??__ACKLastSavedEvent+2
 17160  1BFF  086E               	movf	??__ACKLastSavedEvent+2,w
 17161  1C00  00F5               	movwf	EEPROM_25AA040A_ReadToBuffer@dst
 17162  1C01  3010               	movlw	16
 17163  1C02  00F6               	movwf	EEPROM_25AA040A_ReadToBuffer@dataLength
 17164  1C03  3000               	movlw	0
 17165  1C04  00F7               	movwf	EEPROM_25AA040A_ReadToBuffer@dataLength+1
 17166  1C05  319D  25AF  319B   	fcall	_EEPROM_25AA040A_ReadToBuffer
 17167                           
 17168                           ;alarm.c: 80: newEvent.Acknowledged = 1;
 17169  1C08  3001               	movlw	1
 17170  1C09  0020               	movlb	0	; select bank0
 17171  1C0A  00EC               	movwf	??__ACKLastSavedEvent
 17172  1C0B  086C               	movf	??__ACKLastSavedEvent,w
 17173  1C0C  0021               	movlb	1	; select bank1
 17174  1C0D  00AE               	movwf	(__ACKLastSavedEvent@newEvent^(0+128)+14)	;volatile
 17175                           
 17176                           ;alarm.c: 81: _AlarmEvent_SaveToAddress( 0x0F + 1 +
 17177                           ;alarm.c: 82: (SavedEventCounter - 1) * sizeof(AlarmEvent), &newEvent);
 17178  1C0E  0861               	movf	_SavedEventCounter^(0+128),w
 17179  1C0F  0020               	movlb	0	; select bank0
 17180  1C10  00EC               	movwf	??__ACKLastSavedEvent
 17181  1C11  01ED               	clrf	??__ACKLastSavedEvent+1
 17182  1C12  0EEC               	swapf	??__ACKLastSavedEvent,f
 17183  1C13  0EED               	swapf	??__ACKLastSavedEvent+1,f
 17184  1C14  30F0               	movlw	240
 17185  1C15  05ED               	andwf	??__ACKLastSavedEvent+1,f
 17186  1C16  086C               	movf	??__ACKLastSavedEvent,w
 17187  1C17  390F               	andlw	15
 17188  1C18  04ED               	iorwf	??__ACKLastSavedEvent+1,f
 17189  1C19  30F0               	movlw	240
 17190  1C1A  05EC               	andwf	??__ACKLastSavedEvent,f
 17191  1C1B  086C               	movf	??__ACKLastSavedEvent,w
 17192  1C1C  00E7               	movwf	__AlarmEvent_SaveToAddress@address
 17193  1C1D  086D               	movf	??__ACKLastSavedEvent+1,w
 17194  1C1E  00E8               	movwf	__AlarmEvent_SaveToAddress@address+1
 17195  1C1F  30A0               	movlw	(low (__ACKLastSavedEvent@newEvent| 0))& (0+255)
 17196  1C20  00EE               	movwf	??__ACKLastSavedEvent+2
 17197  1C21  086E               	movf	??__ACKLastSavedEvent+2,w
 17198  1C22  00E9               	movwf	__AlarmEvent_SaveToAddress@e
 17199  1C23  31A6  26E2         	fcall	__AlarmEvent_SaveToAddress
 17200  1C25  0008               	return
 17201  1C26                     __end_of__ACKLastSavedEvent:	
 17202                           
 17203                           	psect	text57
 17204  0E4D                     __ptext57:	
 17205 ;; *************** function _checkAlarm *****************
 17206 ;; Defined at:
 17207 ;;		line 127 in file "alarm.c"
 17208 ;; Parameters:    Size  Location     Type
 17209 ;;		None
 17210 ;; Auto vars:     Size  Location     Type
 17211 ;;  buzOnTime       4    8[BANK1 ] unsigned long 
 17212 ;;  e              16   23[BANK1 ] volatile struct .
 17213 ;;  curTime         6   17[BANK1 ] volatile struct _SysTime
 17214 ;;  aboveUp         1   16[BANK1 ] unsigned char 
 17215 ;;  belowBottom     1   15[BANK1 ] unsigned char 
 17216 ;;  alarmJustCha    1   14[BANK1 ] unsigned char 
 17217 ;; Return value:  Size  Location     Type
 17218 ;;		None               void
 17219 ;; Registers used:
 17220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17221 ;; Tracked objects:
 17222 ;;		On entry : 0/0
 17223 ;;		On exit  : 0/0
 17224 ;;		Unchanged: 0/0
 17225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17227 ;;      Locals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17228 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17229 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17230 ;;Total ram usage:       39 bytes
 17231 ;; Hardware stack levels used:    1
 17232 ;; Hardware stack levels required when called:    8
 17233 ;; This function calls:
 17234 ;;		_LCDGotoXY
 17235 ;;		_LCDWriteString
 17236 ;;		_SysTime_DiffMs
 17237 ;;		_SysTime_GetNow
 17238 ;;		__saveAlarmEvent
 17239 ;;		_printf
 17240 ;; This function is called by:
 17241 ;;		_main
 17242 ;; This function uses a non-reentrant model
 17243 ;;
 17244                           
 17245                           
 17246                           ;psect for function _checkAlarm
 17247  0E4D                     _checkAlarm:	
 17248                           
 17249                           ;alarm.c: 129: bool alarmJustChanged = 0;
 17250                           
 17251                           ;incstack = 0
 17252                           ; Regs used in _checkAlarm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17253  0E4D  0021               	movlb	1	; select bank1
 17254  0E4E  01AE               	clrf	checkAlarm@alarmJustChanged^(0+128)
 17255                           
 17256                           ;alarm.c: 130: bool aboveUp = ((CurTempInt) > UpIntLimitRT || ((CurTempInt) == UpIntLimi
      +                          tRT && (CurTempFract) > UpFractLimitRT));
 17257  0E4F  01AC               	clrf	_checkAlarm$1557^(0+128)
 17258  0E50  0AAC               	incf	_checkAlarm$1557^(0+128),f
 17259  0E51  0866               	movf	(_UpIntLimitRT+1)^(0+128),w
 17260  0E52  3A80               	xorlw	128
 17261  0E53  00A0               	movwf	??_checkAlarm^(0+128)
 17262  0E54  085F               	movf	(_CurTempInt+1)^(0+128),w
 17263  0E55  3A80               	xorlw	128
 17264  0E56  0220               	subwf	??_checkAlarm^(0+128),w
 17265  0E57  1D03               	skipz
 17266  0E58  2E5B               	goto	u9865
 17267  0E59  085E               	movf	_CurTempInt^(0+128),w
 17268  0E5A  0265               	subwf	_UpIntLimitRT^(0+128),w
 17269  0E5B                     u9865:	
 17270  0E5B  1C03               	skipc
 17271  0E5C  2E76               	goto	l7911
 17272  0E5D  0021               	movlb	1	; select bank1
 17273  0E5E  0866               	movf	(_UpIntLimitRT+1)^(0+128),w
 17274  0E5F  065F               	xorwf	(_CurTempInt+1)^(0+128),w
 17275  0E60  1D03               	skipz
 17276  0E61  2E64               	goto	u9875
 17277  0E62  0865               	movf	_UpIntLimitRT^(0+128),w
 17278  0E63  065E               	xorwf	_CurTempInt^(0+128),w
 17279  0E64                     u9875:	
 17280  0E64  1D03               	skipz
 17281  0E65  2E74               	goto	l7909
 17282  0E66  0022               	movlb	2	; select bank2
 17283  0E67  0867               	movf	(_UpFractLimitRT+1)^(0+256),w
 17284  0E68  3A80               	xorlw	128
 17285  0E69  0021               	movlb	1	; select bank1
 17286  0E6A  00A0               	movwf	??_checkAlarm^(0+128)
 17287  0E6B  3080               	movlw	128
 17288  0E6C  0220               	subwf	??_checkAlarm^(0+128),w
 17289  0E6D  1D03               	skipz
 17290  0E6E  2E72               	goto	u9885
 17291  0E6F  0860               	movf	_CurTempFract^(0+128),w
 17292  0E70  0022               	movlb	2	; select bank2
 17293  0E71  0266               	subwf	_UpFractLimitRT^(0+256),w
 17294  0E72                     u9885:	
 17295  0E72  1C03               	skipc
 17296  0E73  2E76               	goto	l7911
 17297  0E74                     l7909:	
 17298  0E74  0021               	movlb	1	; select bank1
 17299  0E75  01AC               	clrf	_checkAlarm$1557^(0+128)
 17300  0E76                     l7911:	
 17301  0E76  0021               	movlb	1	; select bank1
 17302  0E77  082C               	movf	_checkAlarm$1557^(0+128),w
 17303  0E78  00A0               	movwf	??_checkAlarm^(0+128)
 17304  0E79  0820               	movf	??_checkAlarm^(0+128),w
 17305  0E7A  00B0               	movwf	checkAlarm@aboveUp^(0+128)
 17306                           
 17307                           ;alarm.c: 131: bool belowBottom = ((CurTempInt) < BottomIntLimitRT || ((CurTempInt) == B
      +                          ottomIntLimitRT && (CurTempFract) < BottomFractLimitRT));
 17308  0E7B  01AD               	clrf	_checkAlarm$1559^(0+128)
 17309  0E7C  0AAD               	incf	_checkAlarm$1559^(0+128),f
 17310  0E7D  085F               	movf	(_CurTempInt+1)^(0+128),w
 17311  0E7E  3A80               	xorlw	128
 17312  0E7F  00A0               	movwf	??_checkAlarm^(0+128)
 17313  0E80  0022               	movlb	2	; select bank2
 17314  0E81  0863               	movf	(_BottomIntLimitRT+1)^(0+256),w
 17315  0E82  3A80               	xorlw	128
 17316  0E83  0021               	movlb	1	; select bank1
 17317  0E84  0220               	subwf	??_checkAlarm^(0+128),w
 17318  0E85  1D03               	skipz
 17319  0E86  2E8B               	goto	u9895
 17320  0E87  0022               	movlb	2	; select bank2
 17321  0E88  0862               	movf	_BottomIntLimitRT^(0+256),w
 17322  0E89  0021               	movlb	1	; select bank1
 17323  0E8A  025E               	subwf	_CurTempInt^(0+128),w
 17324  0E8B                     u9895:	
 17325  0E8B  1C03               	skipc
 17326  0E8C  2EA6               	goto	l7923
 17327  0E8D  0022               	movlb	2	; select bank2
 17328  0E8E  0863               	movf	(_BottomIntLimitRT+1)^(0+256),w
 17329  0E8F  0021               	movlb	1	; select bank1
 17330  0E90  065F               	xorwf	(_CurTempInt+1)^(0+128),w
 17331  0E91  1D03               	skipz
 17332  0E92  2E97               	goto	u9905
 17333  0E93  0022               	movlb	2	; select bank2
 17334  0E94  0862               	movf	_BottomIntLimitRT^(0+256),w
 17335  0E95  0021               	movlb	1	; select bank1
 17336  0E96  065E               	xorwf	_CurTempInt^(0+128),w
 17337  0E97                     u9905:	
 17338  0E97  1D03               	skipz
 17339  0E98  2EA4               	goto	l7921
 17340  0E99  0022               	movlb	2	; select bank2
 17341  0E9A  0861               	movf	(_BottomFractLimitRT+1)^(0+256),w
 17342  0E9B  3A80               	xorlw	128
 17343  0E9C  3C80               	sublw	128
 17344  0E9D  1D03               	skipz
 17345  0E9E  2EA2               	goto	u9915
 17346  0E9F  0860               	movf	_BottomFractLimitRT^(0+256),w
 17347  0EA0  0021               	movlb	1	; select bank1
 17348  0EA1  0260               	subwf	_CurTempFract^(0+128),w
 17349  0EA2                     u9915:	
 17350  0EA2  1C03               	skipc
 17351  0EA3  2EA6               	goto	l7923
 17352  0EA4                     l7921:	
 17353  0EA4  0021               	movlb	1	; select bank1
 17354  0EA5  01AD               	clrf	_checkAlarm$1559^(0+128)
 17355  0EA6                     l7923:	
 17356  0EA6  0021               	movlb	1	; select bank1
 17357  0EA7  082D               	movf	_checkAlarm$1559^(0+128),w
 17358  0EA8  00A0               	movwf	??_checkAlarm^(0+128)
 17359  0EA9  0820               	movf	??_checkAlarm^(0+128),w
 17360  0EAA  00AF               	movwf	checkAlarm@belowBottom^(0+128)
 17361                           
 17362                           ;alarm.c: 132: if(!alarmOn && !alarmAckd)
 17363  0EAB  0862               	movf	_alarmOn^(0+128),w	;volatile
 17364  0EAC  1D03               	btfss	3,2
 17365  0EAD  2EBA               	goto	l7937
 17366  0EAE  0022               	movlb	2	; select bank2
 17367  0EAF  084D               	movf	_alarmAckd^(0+256),w
 17368  0EB0  1D03               	btfss	3,2
 17369  0EB1  2EBA               	goto	l7937
 17370                           
 17371                           ;alarm.c: 133: {
 17372                           ;alarm.c: 134: if(aboveUp)
 17373  0EB2  0021               	movlb	1	; select bank1
 17374  0EB3  0830               	movf	checkAlarm@aboveUp^(0+128),w
 17375  0EB4  1903               	btfsc	3,2
 17376                           
 17377                           ;alarm.c: 138: else if(belowBottom)
 17378                           
 17379                           ;alarm.c: 137: }
 17380                           
 17381                           ;alarm.c: 135: {
 17382                           ;alarm.c: 136: alarmJustChanged = 1;
 17383  0EB5  082F               	movf	checkAlarm@belowBottom^(0+128),w
 17384  0EB6  1903               	btfsc	3,2
 17385  0EB7  2EBA               	goto	l7937
 17386                           
 17387                           ;alarm.c: 139: {
 17388                           ;alarm.c: 140: alarmJustChanged = 1;
 17389  0EB8  01AE               	clrf	checkAlarm@alarmJustChanged^(0+128)
 17390  0EB9  0AAE               	incf	checkAlarm@alarmJustChanged^(0+128),f
 17391  0EBA                     l7937:	
 17392                           
 17393                           ;alarm.c: 141: }
 17394                           ;alarm.c: 142: }
 17395                           ;alarm.c: 144: if (alarmJustChanged)
 17396  0EBA  0021               	movlb	1	; select bank1
 17397  0EBB  082E               	movf	checkAlarm@alarmJustChanged^(0+128),w
 17398  0EBC  1903               	btfsc	3,2
 17399  0EBD  2F3F               	goto	l7965
 17400                           
 17401                           ;alarm.c: 145: {
 17402                           ;alarm.c: 146: do { LATC5 = 1; } while(0);
 17403  0EBE  0022               	movlb	2	; select bank2
 17404  0EBF  168E               	bsf	14,5	;volatile
 17405                           
 17406                           ;alarm.c: 147: do { LATB4 = 1; } while(0);
 17407  0EC0  160D               	bsf	13,4	;volatile
 17408                           
 17409                           ;alarm.c: 148: printf("ALARM: %d.%d C\r\n", CurTempInt, CurTempFract);
 17410  0EC1  3090               	movlw	low (STR_47| (0+32768))
 17411  0EC2  0020               	movlb	0	; select bank0
 17412  0EC3  00B0               	movwf	printf@f
 17413  0EC4  3084               	movlw	high (STR_47| (0+32768))
 17414  0EC5  00B1               	movwf	printf@f+1
 17415  0EC6  0021               	movlb	1	; select bank1
 17416  0EC7  085F               	movf	(_CurTempInt+1)^(0+128),w
 17417  0EC8  0020               	movlb	0	; select bank0
 17418  0EC9  00B3               	movwf	?_printf+3
 17419  0ECA  0021               	movlb	1	; select bank1
 17420  0ECB  085E               	movf	_CurTempInt^(0+128),w
 17421  0ECC  0020               	movlb	0	; select bank0
 17422  0ECD  00B2               	movwf	?_printf+2
 17423  0ECE  0021               	movlb	1	; select bank1
 17424  0ECF  0860               	movf	_CurTempFract^(0+128),w
 17425  0ED0  00A0               	movwf	??_checkAlarm^(0+128)
 17426  0ED1  01A1               	clrf	(??_checkAlarm^(0+128)+1)
 17427  0ED2  0820               	movf	??_checkAlarm^(0+128),w
 17428  0ED3  0020               	movlb	0	; select bank0
 17429  0ED4  00B4               	movwf	?_printf+4
 17430  0ED5  0021               	movlb	1	; select bank1
 17431  0ED6  0821               	movf	(??_checkAlarm+1)^(0+128),w
 17432  0ED7  0020               	movlb	0	; select bank0
 17433  0ED8  00B5               	movwf	?_printf+5
 17434  0ED9  3180  2096  318E   	fcall	_printf
 17435                           
 17436                           ;alarm.c: 149: { LCDGotoXY(0,1); LCDWriteString("ALARM");};
 17437  0EDC  0020               	movlb	0	; select bank0
 17438  0EDD  01A4               	clrf	LCDGotoXY@y
 17439  0EDE  0AA4               	incf	LCDGotoXY@y,f
 17440  0EDF  3000               	movlw	0
 17441  0EE0  3199  210B  318E   	fcall	_LCDGotoXY
 17442  0EE3  30A6               	movlw	low (STR_48| (0+32768))
 17443  0EE4  0020               	movlb	0	; select bank0
 17444  0EE5  00A6               	movwf	LCDWriteString@msg
 17445  0EE6  3085               	movlw	high (STR_48| (0+32768))
 17446  0EE7  00A7               	movwf	LCDWriteString@msg+1
 17447  0EE8  319C  2465  318E   	fcall	_LCDWriteString
 17448                           
 17449                           ;alarm.c: 150: alarmOn = 1;
 17450  0EEB  3001               	movlw	1
 17451  0EEC  0021               	movlb	1	; select bank1
 17452  0EED  00A0               	movwf	??_checkAlarm^(0+128)
 17453  0EEE  0820               	movf	??_checkAlarm^(0+128),w
 17454  0EEF  00E2               	movwf	_alarmOn^(0+128)	;volatile
 17455                           
 17456                           ;alarm.c: 151: lastAlarmTime = SysTime_GetNow();
 17457  0EF0  3198  20E8  318E   	fcall	_SysTime_GetNow
 17458  0EF3  0020               	movlb	0	; select bank0
 17459  0EF4  3020               	movlw	low ?_SysTime_GetNow
 17460  0EF5  0086               	movwf	6
 17461  0EF6  3000               	movlw	high ?_SysTime_GetNow
 17462  0EF7  0087               	movwf	7
 17463  0EF8  30A0               	movlw	low _lastAlarmTime
 17464  0EF9  0084               	movwf	4
 17465  0EFA  3001               	movlw	high _lastAlarmTime
 17466  0EFB  0085               	movwf	5
 17467  0EFC  3006               	movlw	6
 17468  0EFD  0021               	movlb	1	; select bank1
 17469  0EFE  00A0               	movwf	??_checkAlarm^(0+128)
 17470  0EFF                     u9970:	
 17471  0EFF  0016               	moviw fsr1++
 17472  0F00  001A               	movwi fsr0++
 17473  0F01  0BA0               	decfsz	??_checkAlarm^(0+128),f
 17474  0F02  2EFF               	goto	u9970
 17475                           
 17476                           ;alarm.c: 153: AlarmEvent e;
 17477                           ;alarm.c: 154: e.Time = lastAlarmTime;
 17478  0F03  30A0               	movlw	low _lastAlarmTime
 17479  0F04  0086               	movwf	6
 17480  0F05  3001               	movlw	high _lastAlarmTime
 17481  0F06  0087               	movwf	7
 17482  0F07  30B7               	movlw	low checkAlarm@e
 17483  0F08  0084               	movwf	4
 17484  0F09  3000               	movlw	high checkAlarm@e
 17485  0F0A  0085               	movwf	5
 17486  0F0B  3006               	movlw	6
 17487  0F0C  00A0               	movwf	??_checkAlarm^(0+128)
 17488  0F0D                     u9980:	
 17489  0F0D  0016               	moviw fsr1++
 17490  0F0E  001A               	movwi fsr0++
 17491  0F0F  0BA0               	decfsz	??_checkAlarm^(0+128),f
 17492  0F10  2F0D               	goto	u9980
 17493                           
 17494                           ;alarm.c: 155: e.Acknowledged = 0;
 17495  0F11  01C5               	clrf	(checkAlarm@e^(0+128)+14)	;volatile
 17496                           
 17497                           ;alarm.c: 156: e.TempInt = CurTempInt;
 17498  0F12  085F               	movf	(_CurTempInt+1)^(0+128),w
 17499  0F13  00BE               	movwf	((checkAlarm@e+1)^(0+128)+6)	;volatile
 17500  0F14  085E               	movf	_CurTempInt^(0+128),w
 17501  0F15  00BD               	movwf	(checkAlarm@e^(0+128)+6)	;volatile
 17502                           
 17503                           ;alarm.c: 157: e.TempFract = CurTempFract;
 17504  0F16  0860               	movf	_CurTempFract^(0+128),w
 17505  0F17  00A0               	movwf	??_checkAlarm^(0+128)
 17506  0F18  01A1               	clrf	(??_checkAlarm^(0+128)+1)
 17507  0F19  0820               	movf	??_checkAlarm^(0+128),w
 17508  0F1A  00BF               	movwf	(checkAlarm@e^(0+128)+8)	;volatile
 17509  0F1B  0821               	movf	(??_checkAlarm+1)^(0+128),w
 17510  0F1C  00C0               	movwf	((checkAlarm@e+1)^(0+128)+8)	;volatile
 17511                           
 17512                           ;alarm.c: 158: if(aboveUp)
 17513  0F1D  0830               	movf	checkAlarm@aboveUp^(0+128),w
 17514  0F1E  1903               	btfsc	3,2
 17515  0F1F  2F2B               	goto	l7961
 17516                           
 17517                           ;alarm.c: 159: {
 17518                           ;alarm.c: 160: e.LimitInt = UpIntLimitRT;
 17519  0F20  0866               	movf	(_UpIntLimitRT+1)^(0+128),w
 17520  0F21  00C2               	movwf	((checkAlarm@e+1)^(0+128)+10)	;volatile
 17521  0F22  0865               	movf	_UpIntLimitRT^(0+128),w
 17522  0F23  00C1               	movwf	(checkAlarm@e^(0+128)+10)	;volatile
 17523                           
 17524                           ;alarm.c: 161: e.LimitFract = UpFractLimitRT;
 17525  0F24  0022               	movlb	2	; select bank2
 17526  0F25  0867               	movf	(_UpFractLimitRT+1)^(0+256),w
 17527  0F26  0021               	movlb	1	; select bank1
 17528  0F27  00C4               	movwf	((checkAlarm@e+1)^(0+128)+12)	;volatile
 17529  0F28  0022               	movlb	2	; select bank2
 17530  0F29  0866               	movf	_UpFractLimitRT^(0+256),w
 17531  0F2A  2F39               	goto	L9
 17532  0F2B                     l7961:	
 17533                           ;alarm.c: 162: }
 17534                           
 17535                           
 17536                           ;alarm.c: 163: else
 17537                           ;alarm.c: 164: {
 17538                           ;alarm.c: 165: e.LimitInt = BottomIntLimitRT;
 17539  0F2B  0022               	movlb	2	; select bank2
 17540  0F2C  0863               	movf	(_BottomIntLimitRT+1)^(0+256),w
 17541  0F2D  0021               	movlb	1	; select bank1
 17542  0F2E  00C2               	movwf	((checkAlarm@e+1)^(0+128)+10)	;volatile
 17543  0F2F  0022               	movlb	2	; select bank2
 17544  0F30  0862               	movf	_BottomIntLimitRT^(0+256),w
 17545  0F31  0021               	movlb	1	; select bank1
 17546  0F32  00C1               	movwf	(checkAlarm@e^(0+128)+10)	;volatile
 17547                           
 17548                           ;alarm.c: 166: e.LimitFract = BottomFractLimitRT;
 17549  0F33  0022               	movlb	2	; select bank2
 17550  0F34  0861               	movf	(_BottomFractLimitRT+1)^(0+256),w
 17551  0F35  0021               	movlb	1	; select bank1
 17552  0F36  00C4               	movwf	((checkAlarm@e+1)^(0+128)+12)	;volatile
 17553  0F37  0022               	movlb	2	; select bank2
 17554  0F38  0860               	movf	_BottomFractLimitRT^(0+256),w
 17555  0F39                     L9:	
 17556  0F39  0021               	movlb	1	; select bank1
 17557  0F3A  00C3               	movwf	(checkAlarm@e^(0+128)+12)	;volatile
 17558                           
 17559                           ;alarm.c: 167: }
 17560                           ;alarm.c: 168: _saveAlarmEvent(&e);
 17561  0F3B  30B7               	movlw	(low (checkAlarm@e| 0))& (0+255)
 17562  0F3C  3192  22CC  318E   	fcall	__saveAlarmEvent
 17563  0F3F                     l7965:	
 17564                           
 17565                           ;alarm.c: 169: }
 17566                           ;alarm.c: 171: if (!aboveUp && !belowBottom)
 17567  0F3F  0021               	movlb	1	; select bank1
 17568  0F40  0830               	movf	checkAlarm@aboveUp^(0+128),w
 17569  0F41  1D03               	btfss	3,2
 17570  0F42  2F67               	goto	l1194
 17571  0F43  082F               	movf	checkAlarm@belowBottom^(0+128),w
 17572  0F44  1D03               	btfss	3,2
 17573  0F45  2F67               	goto	l1194
 17574                           
 17575                           ;alarm.c: 172: {
 17576                           ;alarm.c: 173: if (alarmOn)
 17577  0F46  0862               	movf	_alarmOn^(0+128),w	;volatile
 17578  0F47  1903               	btfsc	3,2
 17579  0F48  2F63               	goto	l7977
 17580                           
 17581                           ;alarm.c: 174: {
 17582                           ;alarm.c: 175: do { LATC5 = 0; } while(0);
 17583  0F49  0022               	movlb	2	; select bank2
 17584  0F4A  128E               	bcf	14,5	;volatile
 17585                           
 17586                           ;alarm.c: 176: do { LATB4 = 0; } while(0);
 17587  0F4B  120D               	bcf	13,4	;volatile
 17588                           
 17589                           ;alarm.c: 177: printf("ALARM OFF\r\n");
 17590  0F4C  3035               	movlw	low (STR_49| (0+32768))
 17591  0F4D  0020               	movlb	0	; select bank0
 17592  0F4E  00B0               	movwf	printf@f
 17593  0F4F  3085               	movlw	high (STR_49| (0+32768))
 17594  0F50  00B1               	movwf	printf@f+1
 17595  0F51  3180  2096  318E   	fcall	_printf
 17596                           
 17597                           ;alarm.c: 179: { LCDGotoXY(0,1); LCDWriteString("     ");};
 17598  0F54  0020               	movlb	0	; select bank0
 17599  0F55  01A4               	clrf	LCDGotoXY@y
 17600  0F56  0AA4               	incf	LCDGotoXY@y,f
 17601  0F57  3000               	movlw	0
 17602  0F58  3199  210B  318E   	fcall	_LCDGotoXY
 17603  0F5B  30A0               	movlw	low (STR_46| (0+32768))
 17604  0F5C  0020               	movlb	0	; select bank0
 17605  0F5D  00A6               	movwf	LCDWriteString@msg
 17606  0F5E  3085               	movlw	high (STR_46| (0+32768))
 17607  0F5F  00A7               	movwf	LCDWriteString@msg+1
 17608  0F60  319C  2465  318E   	fcall	_LCDWriteString
 17609  0F63                     l7977:	
 17610                           
 17611                           ;alarm.c: 180: }
 17612                           ;alarm.c: 181: alarmOn = 0;
 17613  0F63  0021               	movlb	1	; select bank1
 17614  0F64  01E2               	clrf	_alarmOn^(0+128)	;volatile
 17615                           
 17616                           ;alarm.c: 182: alarmAckd = 0;
 17617  0F65  0022               	movlb	2	; select bank2
 17618  0F66  01CD               	clrf	_alarmAckd^(0+256)
 17619  0F67                     l1194:	
 17620                           
 17621                           ;alarm.c: 183: }
 17622                           ;alarm.c: 185: SysTime curTime = SysTime_GetNow();
 17623  0F67  3198  20E8  318E   	fcall	_SysTime_GetNow
 17624  0F6A  0020               	movlb	0	; select bank0
 17625  0F6B  3020               	movlw	low ?_SysTime_GetNow
 17626  0F6C  0086               	movwf	6
 17627  0F6D  3000               	movlw	high ?_SysTime_GetNow
 17628  0F6E  0087               	movwf	7
 17629  0F6F  30B1               	movlw	low checkAlarm@curTime
 17630  0F70  0084               	movwf	4
 17631  0F71  3000               	movlw	high checkAlarm@curTime
 17632  0F72  0085               	movwf	5
 17633  0F73  3006               	movlw	6
 17634  0F74  0021               	movlb	1	; select bank1
 17635  0F75  00A0               	movwf	??_checkAlarm^(0+128)
 17636  0F76                     u10030:	
 17637  0F76  0016               	moviw fsr1++
 17638  0F77  001A               	movwi fsr0++
 17639  0F78  0BA0               	decfsz	??_checkAlarm^(0+128),f
 17640  0F79  2F76               	goto	u10030
 17641                           
 17642                           ;alarm.c: 186: if(alarmOn && !alarmAckd && ((curTime.Sec - lastBuzStartTime.Sec) > 30))
 17643  0F7A  0862               	movf	_alarmOn^(0+128),w	;volatile
 17644  0F7B  1903               	btfsc	3,2
 17645  0F7C  2FC7               	goto	l7989
 17646  0F7D  0022               	movlb	2	; select bank2
 17647  0F7E  084D               	movf	_alarmAckd^(0+256),w
 17648  0F7F  1D03               	btfss	3,2
 17649  0F80  2FC7               	goto	l7989
 17650  0F81  0021               	movlb	1	; select bank1
 17651  0F82  0831               	movf	checkAlarm@curTime^(0+128),w	;volatile
 17652  0F83  00A0               	movwf	??_checkAlarm^(0+128)
 17653  0F84  0832               	movf	(checkAlarm@curTime+1)^(0+128),w	;volatile
 17654  0F85  00A1               	movwf	(??_checkAlarm^(0+128)+1)
 17655  0F86  0833               	movf	(checkAlarm@curTime+2)^(0+128),w	;volatile
 17656  0F87  00A2               	movwf	(??_checkAlarm^(0+128)+2)
 17657  0F88  0834               	movf	(checkAlarm@curTime+3)^(0+128),w	;volatile
 17658  0F89  00A3               	movwf	(??_checkAlarm^(0+128)+3)
 17659  0F8A  0023               	movlb	3	; select bank3
 17660  0F8B  095C               	comf	_lastBuzStartTime^(0+384),w	;volatile
 17661  0F8C  0021               	movlb	1	; select bank1
 17662  0F8D  00A4               	movwf	(??_checkAlarm+4)^(0+128)
 17663  0F8E  0023               	movlb	3	; select bank3
 17664  0F8F  095D               	comf	(_lastBuzStartTime+1)^(0+384),w	;volatile
 17665  0F90  0021               	movlb	1	; select bank1
 17666  0F91  00A5               	movwf	((??_checkAlarm+4)^(0+128)+1)
 17667  0F92  0023               	movlb	3	; select bank3
 17668  0F93  095E               	comf	(_lastBuzStartTime+2)^(0+384),w	;volatile
 17669  0F94  0021               	movlb	1	; select bank1
 17670  0F95  00A6               	movwf	((??_checkAlarm+4)^(0+128)+2)
 17671  0F96  0023               	movlb	3	; select bank3
 17672  0F97  095F               	comf	(_lastBuzStartTime+3)^(0+384),w	;volatile
 17673  0F98  0021               	movlb	1	; select bank1
 17674  0F99  00A7               	movwf	((??_checkAlarm+4)^(0+128)+3)
 17675  0F9A  0AA4               	incf	(??_checkAlarm+4)^(0+128),f
 17676  0F9B  1903               	skipnz
 17677  0F9C  0AA5               	incf	((??_checkAlarm+4)^(0+128)+1),f
 17678  0F9D  1903               	skipnz
 17679  0F9E  0AA6               	incf	((??_checkAlarm+4)^(0+128)+2),f
 17680  0F9F  1903               	skipnz
 17681  0FA0  0AA7               	incf	((??_checkAlarm+4)^(0+128)+3),f
 17682  0FA1  0824               	movf	(??_checkAlarm+4)^(0+128),w
 17683  0FA2  07A0               	addwf	??_checkAlarm^(0+128),f
 17684  0FA3  0825               	movf	(??_checkAlarm+5)^(0+128),w
 17685  0FA4  3DA1               	addwfc	(??_checkAlarm^(0+128)+1),f
 17686  0FA5  0826               	movf	(??_checkAlarm+6)^(0+128),w
 17687  0FA6  3DA2               	addwfc	(??_checkAlarm^(0+128)+2),f
 17688  0FA7  0827               	movf	(??_checkAlarm+7)^(0+128),w
 17689  0FA8  3DA3               	addwfc	(??_checkAlarm^(0+128)+3),f
 17690  0FA9  0823               	movf	(??_checkAlarm^(0+128)+3),w
 17691  0FAA  1D03               	btfss	3,2
 17692  0FAB  2FB6               	goto	l1201
 17693  0FAC  0822               	movf	(??_checkAlarm^(0+128)+2),w
 17694  0FAD  1D03               	btfss	3,2
 17695  0FAE  2FB6               	goto	l1201
 17696  0FAF  0821               	movf	(??_checkAlarm^(0+128)+1),w
 17697  0FB0  1D03               	btfss	3,2
 17698  0FB1  2FB6               	goto	l1201
 17699  0FB2  301F               	movlw	31
 17700  0FB3  0220               	subwf	??_checkAlarm^(0+128),w
 17701  0FB4  1C03               	btfss	3,0
 17702  0FB5  2FC7               	goto	l7989
 17703  0FB6                     l1201:	
 17704                           ;alarm.c: 187: {
 17705                           ;alarm.c: 188: do { LATC5 = 1; } while(0);
 17706                           
 17707  0FB6  0022               	movlb	2	; select bank2
 17708  0FB7  168E               	bsf	14,5	;volatile
 17709                           
 17710                           ;alarm.c: 189: lastBuzStartTime = curTime;
 17711  0FB8  30B1               	movlw	low checkAlarm@curTime
 17712  0FB9  0086               	movwf	6
 17713  0FBA  3000               	movlw	high checkAlarm@curTime
 17714  0FBB  0087               	movwf	7
 17715  0FBC  30DC               	movlw	low _lastBuzStartTime
 17716  0FBD  0084               	movwf	4
 17717  0FBE  3001               	movlw	high _lastBuzStartTime
 17718  0FBF  0085               	movwf	5
 17719  0FC0  3006               	movlw	6
 17720  0FC1  0021               	movlb	1	; select bank1
 17721  0FC2  00A0               	movwf	??_checkAlarm^(0+128)
 17722  0FC3                     u10070:	
 17723  0FC3  0016               	moviw fsr1++
 17724  0FC4  001A               	movwi fsr0++
 17725  0FC5  0BA0               	decfsz	??_checkAlarm^(0+128),f
 17726  0FC6  2FC3               	goto	u10070
 17727  0FC7                     l7989:	
 17728                           
 17729                           ;alarm.c: 190: }
 17730                           ;alarm.c: 192: if(RC5 || RB4)
 17731  0FC7  0020               	movlb	0	; select bank0
 17732  0FC8  1A8E               	btfsc	14,5	;volatile
 17733  0FC9  2FCC               	goto	l7993
 17734  0FCA  1E0D               	btfss	13,4	;volatile
 17735  0FCB  0008               	return
 17736  0FCC                     l7993:	
 17737                           
 17738                           ;alarm.c: 193: {
 17739                           ;alarm.c: 194: uint32_t buzOnTime = SysTime_DiffMs(&lastBuzStartTime, &curTime);
 17740  0FCC  30DC               	movlw	low _lastBuzStartTime
 17741  0FCD  00A4               	movwf	SysTime_DiffMs@firstTime
 17742  0FCE  3001               	movlw	high _lastBuzStartTime
 17743  0FCF  00A5               	movwf	SysTime_DiffMs@firstTime+1
 17744  0FD0  30B1               	movlw	(low (checkAlarm@curTime| 0))& (0+255)
 17745  0FD1  0021               	movlb	1	; select bank1
 17746  0FD2  00A0               	movwf	??_checkAlarm^(0+128)
 17747  0FD3  0820               	movf	??_checkAlarm^(0+128),w
 17748  0FD4  0020               	movlb	0	; select bank0
 17749  0FD5  00A6               	movwf	SysTime_DiffMs@secondTime
 17750  0FD6  3194  242D  318E   	fcall	_SysTime_DiffMs
 17751  0FD9  0020               	movlb	0	; select bank0
 17752  0FDA  0827               	movf	?_SysTime_DiffMs+3,w
 17753  0FDB  0021               	movlb	1	; select bank1
 17754  0FDC  00AB               	movwf	(checkAlarm@buzOnTime+3)^(0+128)
 17755  0FDD  0020               	movlb	0	; select bank0
 17756  0FDE  0826               	movf	?_SysTime_DiffMs+2,w
 17757  0FDF  0021               	movlb	1	; select bank1
 17758  0FE0  00AA               	movwf	(checkAlarm@buzOnTime+2)^(0+128)
 17759  0FE1  0020               	movlb	0	; select bank0
 17760  0FE2  0825               	movf	?_SysTime_DiffMs+1,w
 17761  0FE3  0021               	movlb	1	; select bank1
 17762  0FE4  00A9               	movwf	(checkAlarm@buzOnTime+1)^(0+128)
 17763  0FE5  0020               	movlb	0	; select bank0
 17764  0FE6  0824               	movf	?_SysTime_DiffMs,w
 17765  0FE7  0021               	movlb	1	; select bank1
 17766  0FE8  00A8               	movwf	checkAlarm@buzOnTime^(0+128)
 17767                           
 17768                           ;alarm.c: 195: if (buzOnTime > 1000UL)
 17769  0FE9  082B               	movf	(checkAlarm@buzOnTime+3)^(0+128),w
 17770  0FEA  1D03               	btfss	3,2
 17771  0FEB  2FF5               	goto	l7997
 17772  0FEC  082A               	movf	(checkAlarm@buzOnTime+2)^(0+128),w
 17773  0FED  1D03               	btfss	3,2
 17774  0FEE  2FF5               	goto	l7997
 17775  0FEF  30E9               	movlw	233
 17776  0FF0  0228               	subwf	checkAlarm@buzOnTime^(0+128),w
 17777  0FF1  3003               	movlw	3
 17778  0FF2  3B29               	subwfb	(checkAlarm@buzOnTime+1)^(0+128),w
 17779  0FF3  1C03               	btfss	3,0
 17780  0FF4  0008               	return
 17781  0FF5                     l7997:	
 17782                           
 17783                           ;alarm.c: 196: {
 17784                           ;alarm.c: 197: printf("Buz off\r\n");
 17785  0FF5  3057               	movlw	low (STR_51| (0+32768))
 17786  0FF6  0020               	movlb	0	; select bank0
 17787  0FF7  00B0               	movwf	printf@f
 17788  0FF8  3085               	movlw	high (STR_51| (0+32768))
 17789  0FF9  00B1               	movwf	printf@f+1
 17790  0FFA  3180  2096         	fcall	_printf
 17791                           
 17792                           ;alarm.c: 198: do { LATC5 = 0; } while(0);
 17793  0FFC  0022               	movlb	2	; select bank2
 17794  0FFD  128E               	bcf	14,5	;volatile
 17795                           
 17796                           ;alarm.c: 199: do { LATB4 = 0; } while(0);
 17797  0FFE  120D               	bcf	13,4	;volatile
 17798  0FFF  0008               	return
 17799  1000                     __end_of_checkAlarm:	
 17800                           
 17801                           	psect	text58
 17802  12CC                     __ptext58:	
 17803 ;; *************** function __saveAlarmEvent *****************
 17804 ;; Defined at:
 17805 ;;		line 61 in file "alarm.c"
 17806 ;; Parameters:    Size  Location     Type
 17807 ;;  e               1    wreg     PTR Q_010000000  struct 
 17808 ;;		 -> checkAlarm@e(16), 
 17809 ;; Auto vars:     Size  Location     Type
 17810 ;;  e               1   79[BANK0 ] PTR Q_010000000  struct 
 17811 ;;		 -> checkAlarm@e(16), 
 17812 ;; Return value:  Size  Location     Type
 17813 ;;		None               void
 17814 ;; Registers used:
 17815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17816 ;; Tracked objects:
 17817 ;;		On entry : 0/0
 17818 ;;		On exit  : 0/0
 17819 ;;		Unchanged: 0/0
 17820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17822 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17823 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17824 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17825 ;;Total ram usage:        4 bytes
 17826 ;; Hardware stack levels used:    1
 17827 ;; Hardware stack levels required when called:    7
 17828 ;; This function calls:
 17829 ;;		__AlarmEvent_IncreaseSavedCounter
 17830 ;;		__AlarmEvent_SaveToAddress
 17831 ;;		_printf
 17832 ;; This function is called by:
 17833 ;;		_checkAlarm
 17834 ;; This function uses a non-reentrant model
 17835 ;;
 17836                           
 17837                           
 17838                           ;psect for function __saveAlarmEvent
 17839  12CC                     __saveAlarmEvent:	
 17840                           
 17841                           ;incstack = 0
 17842                           ; Regs used in __saveAlarmEvent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17843                           ;__saveAlarmEvent@e stored from wreg
 17844  12CC  0020               	movlb	0	; select bank0
 17845  12CD  00EF               	movwf	__saveAlarmEvent@e
 17846                           
 17847                           ;alarm.c: 63: _AlarmEvent_IncreaseSavedCounter();
 17848  12CE  31A7  274C  3192   	fcall	__AlarmEvent_IncreaseSavedCounter
 17849                           
 17850                           ;alarm.c: 64: _delay((unsigned long)((5)*(16000000/4000.0)));
 17851  12D1  301A               	movlw	26
 17852  12D2  0020               	movlb	0	; select bank0
 17853  12D3  00ED               	movwf	??__saveAlarmEvent+1
 17854  12D4  30F8               	movlw	248
 17855  12D5  00EC               	movwf	??__saveAlarmEvent
 17856  12D6                     u10387:	
 17857  12D6  0BEC               	decfsz	??__saveAlarmEvent,f
 17858  12D7  2AD6               	goto	u10387
 17859  12D8  0BED               	decfsz	??__saveAlarmEvent+1,f
 17860  12D9  2AD6               	goto	u10387
 17861  12DA  0000               	nop
 17862                           
 17863                           ;alarm.c: 65: printf("Saving alarm\r\n");
 17864  12DB  30C3               	movlw	low (STR_43| (0+32768))
 17865  12DC  0020               	movlb	0	; select bank0
 17866  12DD  00B0               	movwf	printf@f
 17867  12DE  3084               	movlw	high (STR_43| (0+32768))
 17868  12DF  00B1               	movwf	printf@f+1
 17869  12E0  3180  2096  3192   	fcall	_printf
 17870                           
 17871                           ;alarm.c: 66: printf("%lu.%u %d.%d C (%d.%d C)\r\n", e->Time.Sec, e->Time.Ms, e->TempInt
      +                          , e->TempFract,
 17872                           ;alarm.c: 67: e->LimitInt, e->LimitFract);
 17873  12E3  30E7               	movlw	low (STR_44| (0+32768))
 17874  12E4  0020               	movlb	0	; select bank0
 17875  12E5  00B0               	movwf	printf@f
 17876  12E6  3083               	movlw	high (STR_44| (0+32768))
 17877  12E7  00B1               	movwf	printf@f+1
 17878  12E8  086F               	movf	__saveAlarmEvent@e,w
 17879  12E9  0086               	movwf	6
 17880  12EA  0187               	clrf	7
 17881  12EB  3F40               	moviw [0]fsr1
 17882  12EC  00B2               	movwf	?_printf+2
 17883  12ED  3F41               	moviw [1]fsr1
 17884  12EE  00B3               	movwf	?_printf+3
 17885  12EF  3F42               	moviw [2]fsr1
 17886  12F0  00B4               	movwf	?_printf+4
 17887  12F1  3F43               	moviw [3]fsr1
 17888  12F2  00B5               	movwf	?_printf+5
 17889  12F3  086F               	movf	__saveAlarmEvent@e,w
 17890  12F4  3E04               	addlw	4
 17891  12F5  0086               	movwf	6
 17892  12F6  0187               	clrf	7
 17893  12F7  3F40               	moviw [0]fsr1
 17894  12F8  00B6               	movwf	?_printf+6
 17895  12F9  3F41               	moviw [1]fsr1
 17896  12FA  00B7               	movwf	?_printf+7
 17897  12FB  086F               	movf	__saveAlarmEvent@e,w
 17898  12FC  3E06               	addlw	6
 17899  12FD  0086               	movwf	6
 17900  12FE  0187               	clrf	7
 17901  12FF  3F40               	moviw [0]fsr1
 17902  1300  00B8               	movwf	?_printf+8
 17903  1301  3F41               	moviw [1]fsr1
 17904  1302  00B9               	movwf	?_printf+9
 17905  1303  086F               	movf	__saveAlarmEvent@e,w
 17906  1304  3E08               	addlw	8
 17907  1305  0086               	movwf	6
 17908  1306  0187               	clrf	7
 17909  1307  3F40               	moviw [0]fsr1
 17910  1308  00BA               	movwf	?_printf+10
 17911  1309  3F41               	moviw [1]fsr1
 17912  130A  00BB               	movwf	?_printf+11
 17913  130B  086F               	movf	__saveAlarmEvent@e,w
 17914  130C  3E0A               	addlw	10
 17915  130D  0086               	movwf	6
 17916  130E  0187               	clrf	7
 17917  130F  3F40               	moviw [0]fsr1
 17918  1310  00BC               	movwf	?_printf+12
 17919  1311  3F41               	moviw [1]fsr1
 17920  1312  00BD               	movwf	?_printf+13
 17921  1313  086F               	movf	__saveAlarmEvent@e,w
 17922  1314  3E0C               	addlw	12
 17923  1315  0086               	movwf	6
 17924  1316  0187               	clrf	7
 17925  1317  3F40               	moviw [0]fsr1
 17926  1318  00BE               	movwf	?_printf+14
 17927  1319  3F41               	moviw [1]fsr1
 17928  131A  00BF               	movwf	?_printf+15
 17929  131B  3180  2096  3192   	fcall	_printf
 17930                           
 17931                           ;alarm.c: 68: _AlarmEvent_SaveToAddress(0x0F + 1 +
 17932                           ;alarm.c: 69: (SavedEventCounter - 1) * sizeof(AlarmEvent), e);
 17933  131E  0021               	movlb	1	; select bank1
 17934  131F  0861               	movf	_SavedEventCounter^(0+128),w
 17935  1320  0020               	movlb	0	; select bank0
 17936  1321  00EC               	movwf	??__saveAlarmEvent
 17937  1322  01ED               	clrf	??__saveAlarmEvent+1
 17938  1323  0EEC               	swapf	??__saveAlarmEvent,f
 17939  1324  0EED               	swapf	??__saveAlarmEvent+1,f
 17940  1325  30F0               	movlw	240
 17941  1326  05ED               	andwf	??__saveAlarmEvent+1,f
 17942  1327  086C               	movf	??__saveAlarmEvent,w
 17943  1328  390F               	andlw	15
 17944  1329  04ED               	iorwf	??__saveAlarmEvent+1,f
 17945  132A  30F0               	movlw	240
 17946  132B  05EC               	andwf	??__saveAlarmEvent,f
 17947  132C  086C               	movf	??__saveAlarmEvent,w
 17948  132D  00E7               	movwf	__AlarmEvent_SaveToAddress@address
 17949  132E  086D               	movf	??__saveAlarmEvent+1,w
 17950  132F  00E8               	movwf	__AlarmEvent_SaveToAddress@address+1
 17951  1330  086F               	movf	__saveAlarmEvent@e,w
 17952  1331  00EE               	movwf	??__saveAlarmEvent+2
 17953  1332  086E               	movf	??__saveAlarmEvent+2,w
 17954  1333  00E9               	movwf	__AlarmEvent_SaveToAddress@e
 17955  1334  31A6  26E2         	fcall	__AlarmEvent_SaveToAddress
 17956  1336  0008               	return
 17957  1337                     __end_of__saveAlarmEvent:	
 17958                           
 17959                           	psect	text59
 17960  26E2                     __ptext59:	
 17961 ;; *************** function __AlarmEvent_SaveToAddress *****************
 17962 ;; Defined at:
 17963 ;;		line 54 in file "alarm.c"
 17964 ;; Parameters:    Size  Location     Type
 17965 ;;  address         2   71[BANK0 ] unsigned int 
 17966 ;;  e               1   73[BANK0 ] PTR Q_010000000  struct 
 17967 ;;		 -> checkAlarm@e(16), _ACKLastSavedEvent@newEvent(16), 
 17968 ;; Auto vars:     Size  Location     Type
 17969 ;;		None
 17970 ;; Return value:  Size  Location     Type
 17971 ;;		None               void
 17972 ;; Registers used:
 17973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17974 ;; Tracked objects:
 17975 ;;		On entry : 0/0
 17976 ;;		On exit  : 0/0
 17977 ;;		Unchanged: 0/0
 17978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17979 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17981 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17982 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17983 ;;Total ram usage:        5 bytes
 17984 ;; Hardware stack levels used:    1
 17985 ;; Hardware stack levels required when called:    6
 17986 ;; This function calls:
 17987 ;;		_EEPROM_25AA040A_WriteBuffer
 17988 ;; This function is called by:
 17989 ;;		__saveAlarmEvent
 17990 ;;		__ACKLastSavedEvent
 17991 ;; This function uses a non-reentrant model
 17992 ;;
 17993                           
 17994                           
 17995                           ;psect for function __AlarmEvent_SaveToAddress
 17996  26E2                     __AlarmEvent_SaveToAddress:	
 17997                           
 17998                           ;alarm.c: 56: EEPROM_25AA040A_WriteBuffer(address, (uint8_t*)e, sizeof(AlarmEvent));
 17999                           
 18000                           ;incstack = 0
 18001                           ; Regs used in __AlarmEvent_SaveToAddress: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18002  26E2  0020               	movlb	0	; select bank0
 18003  26E3  0868               	movf	__AlarmEvent_SaveToAddress@address+1,w
 18004  26E4  00D7               	movwf	EEPROM_25AA040A_WriteBuffer@address+1
 18005  26E5  0867               	movf	__AlarmEvent_SaveToAddress@address,w
 18006  26E6  00D6               	movwf	EEPROM_25AA040A_WriteBuffer@address
 18007  26E7  0869               	movf	__AlarmEvent_SaveToAddress@e,w
 18008  26E8  00EA               	movwf	??__AlarmEvent_SaveToAddress
 18009  26E9  086A               	movf	??__AlarmEvent_SaveToAddress,w
 18010  26EA  00D8               	movwf	EEPROM_25AA040A_WriteBuffer@data
 18011  26EB  3010               	movlw	16
 18012  26EC  00EB               	movwf	??__AlarmEvent_SaveToAddress+1
 18013  26ED  086B               	movf	??__AlarmEvent_SaveToAddress+1,w
 18014  26EE  00D9               	movwf	EEPROM_25AA040A_WriteBuffer@dataLength
 18015  26EF  3197  2724         	fcall	_EEPROM_25AA040A_WriteBuffer
 18016  26F1  0008               	return
 18017  26F2                     __end_of__AlarmEvent_SaveToAddress:	
 18018                           
 18019                           	psect	text60
 18020  1724                     __ptext60:	
 18021 ;; *************** function _EEPROM_25AA040A_WriteBuffer *****************
 18022 ;; Defined at:
 18023 ;;		line 128 in file "25AA040A.c"
 18024 ;; Parameters:    Size  Location     Type
 18025 ;;  address         2   54[BANK0 ] unsigned int 
 18026 ;;  data            1   56[BANK0 ] PTR unsigned char 
 18027 ;;		 -> clearAllAlarmEvents@nullEvt(16), checkAlarm@e(16), _ACKLastSavedEvent@newEvent(16), Config_SetBottomLimit@writeD
      +ata(4), 
 18028 ;;		 -> Config_SetUpLimit@writeData(4), 
 18029 ;;  dataLength      1   57[BANK0 ] unsigned char 
 18030 ;; Auto vars:     Size  Location     Type
 18031 ;;  j               1   68[BANK0 ] unsigned char 
 18032 ;;  pageAddr        2   65[BANK0 ] unsigned int 
 18033 ;;  WREN_Ok         1   64[BANK0 ] unsigned char 
 18034 ;;  opcode          1   63[BANK0 ] unsigned char 
 18035 ;;  bytesOnPage     1   67[BANK0 ] unsigned char 
 18036 ;;  i               1   70[BANK0 ] unsigned char 
 18037 ;;  pageCount       1   69[BANK0 ] unsigned char 
 18038 ;;  lastPageLen     1   62[BANK0 ] unsigned char 
 18039 ;; Return value:  Size  Location     Type
 18040 ;;		None               void
 18041 ;; Registers used:
 18042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18043 ;; Tracked objects:
 18044 ;;		On entry : 0/0
 18045 ;;		On exit  : 0/0
 18046 ;;		Unchanged: 0/0
 18047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18048 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18049 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18050 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18051 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18052 ;;Total ram usage:       17 bytes
 18053 ;; Hardware stack levels used:    1
 18054 ;; Hardware stack levels required when called:    5
 18055 ;; This function calls:
 18056 ;;		_SPI_Exchange8bit
 18057 ;;		__EEPROM_25AA040A_WriteEnable
 18058 ;;		___awdiv
 18059 ;;		_printf
 18060 ;; This function is called by:
 18061 ;;		_Config_SetUpLimit
 18062 ;;		_Config_SetBottomLimit
 18063 ;;		__AlarmEvent_SaveToAddress
 18064 ;;		_clearAllAlarmEvents
 18065 ;; This function uses a non-reentrant model
 18066 ;;
 18067                           
 18068                           
 18069                           ;psect for function _EEPROM_25AA040A_WriteBuffer
 18070  1724                     _EEPROM_25AA040A_WriteBuffer:	
 18071                           
 18072                           ;25AA040A.c: 130: uint8_t pageCount = dataLength / 16;
 18073                           
 18074                           ;incstack = 0
 18075                           ; Regs used in _EEPROM_25AA040A_WriteBuffer: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18076  1724  3010               	movlw	16
 18077  1725  00F2               	movwf	___awdiv@divisor
 18078  1726  3000               	movlw	0
 18079  1727  00F3               	movwf	___awdiv@divisor+1
 18080  1728  0020               	movlb	0	; select bank0
 18081  1729  0859               	movf	EEPROM_25AA040A_WriteBuffer@dataLength,w
 18082  172A  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18083  172B  01DB               	clrf	??_EEPROM_25AA040A_WriteBuffer+1
 18084  172C  085A               	movf	??_EEPROM_25AA040A_WriteBuffer,w
 18085  172D  00F4               	movwf	___awdiv@dividend
 18086  172E  085B               	movf	??_EEPROM_25AA040A_WriteBuffer+1,w
 18087  172F  00F5               	movwf	___awdiv@dividend+1
 18088  1730  319F  27AE  3197   	fcall	___awdiv
 18089  1733  0872               	movf	?___awdiv,w
 18090  1734  0020               	movlb	0	; select bank0
 18091  1735  00DC               	movwf	??_EEPROM_25AA040A_WriteBuffer+2
 18092  1736  085C               	movf	??_EEPROM_25AA040A_WriteBuffer+2,w
 18093  1737  00E5               	movwf	EEPROM_25AA040A_WriteBuffer@pageCount
 18094                           
 18095                           ;25AA040A.c: 131: uint8_t lastPageLen = dataLength - pageCount * 16;
 18096  1738  0865               	movf	EEPROM_25AA040A_WriteBuffer@pageCount,w
 18097  1739  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18098  173A  3003               	movlw	3
 18099  173B                     u8155:	
 18100  173B  35DA               	lslf	??_EEPROM_25AA040A_WriteBuffer,f
 18101  173C  3EFF               	addlw	-1
 18102  173D  1D03               	skipz
 18103  173E  2F3B               	goto	u8155
 18104  173F  355A               	lslf	??_EEPROM_25AA040A_WriteBuffer,w
 18105  1740  3AFF               	xorlw	255
 18106  1741  3E01               	addlw	1
 18107  1742  0759               	addwf	EEPROM_25AA040A_WriteBuffer@dataLength,w
 18108  1743  00DB               	movwf	??_EEPROM_25AA040A_WriteBuffer+1
 18109  1744  085B               	movf	??_EEPROM_25AA040A_WriteBuffer+1,w
 18110  1745  00DE               	movwf	EEPROM_25AA040A_WriteBuffer@lastPageLen
 18111                           
 18112                           ;25AA040A.c: 133: uint8_t i;
 18113                           ;25AA040A.c: 135: if(address + dataLength > 0x1FF)
 18114  1746  0859               	movf	EEPROM_25AA040A_WriteBuffer@dataLength,w
 18115  1747  0756               	addwf	EEPROM_25AA040A_WriteBuffer@address,w
 18116  1748  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18117  1749  0857               	movf	EEPROM_25AA040A_WriteBuffer@address+1,w
 18118  174A  1803               	skipnc
 18119  174B  0A57               	incf	EEPROM_25AA040A_WriteBuffer@address+1,w
 18120  174C  00DB               	movwf	??_EEPROM_25AA040A_WriteBuffer+1
 18121  174D  3002               	movlw	2
 18122  174E  025B               	subwf	??_EEPROM_25AA040A_WriteBuffer+1,w
 18123  174F  3000               	movlw	0
 18124  1750  1903               	skipnz
 18125  1751  025A               	subwf	??_EEPROM_25AA040A_WriteBuffer,w
 18126  1752  1C03               	skipc
 18127  1753  2F62               	goto	l6931
 18128                           
 18129                           ;25AA040A.c: 136: {
 18130                           ;25AA040A.c: 137: printf("EEPROM size smaller than %u\r\n", address + dataLength);
 18131  1754  30C9               	movlw	low (STR_2| (0+32768))
 18132  1755  00B0               	movwf	printf@f
 18133  1756  3083               	movlw	high (STR_2| (0+32768))
 18134  1757  00B1               	movwf	printf@f+1
 18135  1758  0859               	movf	EEPROM_25AA040A_WriteBuffer@dataLength,w
 18136  1759  0756               	addwf	EEPROM_25AA040A_WriteBuffer@address,w
 18137  175A  00B2               	movwf	?_printf+2
 18138  175B  0857               	movf	EEPROM_25AA040A_WriteBuffer@address+1,w
 18139  175C  1803               	skipnc
 18140  175D  0A57               	incf	EEPROM_25AA040A_WriteBuffer@address+1,w
 18141  175E  00B3               	movwf	?_printf+3
 18142  175F  3180  2096         	fcall	_printf
 18143                           
 18144                           ;25AA040A.c: 138: return;
 18145  1761  0008               	return
 18146  1762                     l6931:	
 18147                           
 18148                           ;25AA040A.c: 139: }
 18149                           ;25AA040A.c: 143: for (i = 0; i <= pageCount; ++i)
 18150  1762  0020               	movlb	0	; select bank0
 18151  1763  01E6               	clrf	EEPROM_25AA040A_WriteBuffer@i
 18152  1764                     l6965:	
 18153  1764  0866               	movf	EEPROM_25AA040A_WriteBuffer@i,w
 18154  1765  0265               	subwf	EEPROM_25AA040A_WriteBuffer@pageCount,w
 18155  1766  1C03               	btfss	3,0
 18156  1767  2FF6               	goto	l6967
 18157                           
 18158                           ;25AA040A.c: 144: {
 18159                           ;25AA040A.c: 145: uint8_t bytesOnPage = 16;
 18160  1768  3010               	movlw	16
 18161  1769  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18162  176A  085A               	movf	??_EEPROM_25AA040A_WriteBuffer,w
 18163  176B  00E3               	movwf	EEPROM_25AA040A_WriteBuffer@bytesOnPage
 18164                           
 18165                           ;25AA040A.c: 146: if (i == pageCount)
 18166  176C  0866               	movf	EEPROM_25AA040A_WriteBuffer@i,w
 18167  176D  0665               	xorwf	EEPROM_25AA040A_WriteBuffer@pageCount,w
 18168  176E  1D03               	skipz
 18169  176F  2F74               	goto	l6937
 18170                           
 18171                           ;25AA040A.c: 147: {
 18172                           ;25AA040A.c: 148: bytesOnPage = lastPageLen;
 18173  1770  085E               	movf	EEPROM_25AA040A_WriteBuffer@lastPageLen,w
 18174  1771  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18175  1772  085A               	movf	??_EEPROM_25AA040A_WriteBuffer,w
 18176  1773  00E3               	movwf	EEPROM_25AA040A_WriteBuffer@bytesOnPage
 18177  1774                     l6937:	
 18178                           
 18179                           ;25AA040A.c: 149: }
 18180                           ;25AA040A.c: 150: if (bytesOnPage > 0)
 18181  1774  0863               	movf	EEPROM_25AA040A_WriteBuffer@bytesOnPage,w
 18182  1775  1903               	btfsc	3,2
 18183  1776  2FF0               	goto	l6963
 18184                           
 18185                           ;25AA040A.c: 151: {
 18186                           ;25AA040A.c: 153: if(i > 0)
 18187  1777  0866               	movf	EEPROM_25AA040A_WriteBuffer@i,w
 18188  1778  1903               	btfsc	3,2
 18189  1779  2F87               	goto	l6943
 18190                           
 18191                           ;25AA040A.c: 154: {
 18192                           ;25AA040A.c: 155: _delay((unsigned long)((5 * 16)*(16000000/4000.0)));
 18193  177A  3002               	movlw	2
 18194  177B  00DC               	movwf	??_EEPROM_25AA040A_WriteBuffer+2
 18195  177C  30A0               	movlw	160
 18196  177D  00DB               	movwf	??_EEPROM_25AA040A_WriteBuffer+1
 18197  177E  3092               	movlw	146
 18198  177F  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18199  1780                     u10397:	
 18200  1780  0BDA               	decfsz	??_EEPROM_25AA040A_WriteBuffer,f
 18201  1781  2F80               	goto	u10397
 18202  1782  0BDB               	decfsz	??_EEPROM_25AA040A_WriteBuffer+1,f
 18203  1783  2F80               	goto	u10397
 18204  1784  0BDC               	decfsz	??_EEPROM_25AA040A_WriteBuffer+2,f
 18205  1785  2F80               	goto	u10397
 18206  1786  0000               	nop
 18207  1787                     l6943:	
 18208                           
 18209                           ;25AA040A.c: 156: }
 18210                           ;25AA040A.c: 158: uint16_t pageAddr = address + i * 16;
 18211  1787  0020               	movlb	0	; select bank0
 18212  1788  0866               	movf	EEPROM_25AA040A_WriteBuffer@i,w
 18213  1789  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18214  178A  01DB               	clrf	??_EEPROM_25AA040A_WriteBuffer+1
 18215  178B  0EDA               	swapf	??_EEPROM_25AA040A_WriteBuffer,f
 18216  178C  0EDB               	swapf	??_EEPROM_25AA040A_WriteBuffer+1,f
 18217  178D  30F0               	movlw	240
 18218  178E  05DB               	andwf	??_EEPROM_25AA040A_WriteBuffer+1,f
 18219  178F  085A               	movf	??_EEPROM_25AA040A_WriteBuffer,w
 18220  1790  390F               	andlw	15
 18221  1791  04DB               	iorwf	??_EEPROM_25AA040A_WriteBuffer+1,f
 18222  1792  30F0               	movlw	240
 18223  1793  05DA               	andwf	??_EEPROM_25AA040A_WriteBuffer,f
 18224  1794  0856               	movf	EEPROM_25AA040A_WriteBuffer@address,w
 18225  1795  075A               	addwf	??_EEPROM_25AA040A_WriteBuffer,w
 18226  1796  00E1               	movwf	EEPROM_25AA040A_WriteBuffer@pageAddr
 18227  1797  0857               	movf	EEPROM_25AA040A_WriteBuffer@address+1,w
 18228  1798  3D5B               	addwfc	??_EEPROM_25AA040A_WriteBuffer+1,w
 18229  1799  00E2               	movwf	EEPROM_25AA040A_WriteBuffer@pageAddr+1
 18230                           
 18231                           ;25AA040A.c: 166: uint8_t opcode = (EEPROM_WRITE) | ( ( (pageAddr) >> 9) << 3);
 18232  179A  0862               	movf	EEPROM_25AA040A_WriteBuffer@pageAddr+1,w
 18233  179B  00DB               	movwf	??_EEPROM_25AA040A_WriteBuffer+1
 18234  179C  0861               	movf	EEPROM_25AA040A_WriteBuffer@pageAddr,w
 18235  179D  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18236  179E  3009               	movlw	9
 18237  179F                     u8205:	
 18238  179F  36DB               	lsrf	??_EEPROM_25AA040A_WriteBuffer+1,f
 18239  17A0  0CDA               	rrf	??_EEPROM_25AA040A_WriteBuffer,f
 18240  17A1  0B89               	decfsz	9,f
 18241  17A2  2F9F               	goto	u8205
 18242  17A3  085A               	movf	??_EEPROM_25AA040A_WriteBuffer,w
 18243  17A4  00DC               	movwf	??_EEPROM_25AA040A_WriteBuffer+2
 18244  17A5  3002               	movlw	2
 18245  17A6                     u8215:	
 18246  17A6  35DC               	lslf	??_EEPROM_25AA040A_WriteBuffer+2,f
 18247  17A7  3EFF               	addlw	-1
 18248  17A8  1D03               	skipz
 18249  17A9  2FA6               	goto	u8215
 18250  17AA  355C               	lslf	??_EEPROM_25AA040A_WriteBuffer+2,w
 18251  17AB  3802               	iorlw	2
 18252  17AC  00DD               	movwf	??_EEPROM_25AA040A_WriteBuffer+3
 18253  17AD  085D               	movf	??_EEPROM_25AA040A_WriteBuffer+3,w
 18254  17AE  00DF               	movwf	EEPROM_25AA040A_WriteBuffer@opcode
 18255                           
 18256                           ;25AA040A.c: 167: bool WREN_Ok = _EEPROM_25AA040A_WriteEnable();
 18257  17AF  3190  2091  3197   	fcall	__EEPROM_25AA040A_WriteEnable
 18258  17B2  0020               	movlb	0	; select bank0
 18259  17B3  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18260  17B4  085A               	movf	??_EEPROM_25AA040A_WriteBuffer,w
 18261  17B5  00E0               	movwf	EEPROM_25AA040A_WriteBuffer@WREN_Ok
 18262                           
 18263                           ;25AA040A.c: 168: if (WREN_Ok)
 18264  17B6  0860               	movf	EEPROM_25AA040A_WriteBuffer@WREN_Ok,w
 18265  17B7  1903               	btfsc	3,2
 18266  17B8  2FE8               	goto	l6961
 18267                           
 18268                           ;25AA040A.c: 169: {
 18269                           ;25AA040A.c: 170: uint8_t j;
 18270                           ;25AA040A.c: 172: do { LATC1 = 0; } while(0);
 18271  17B9  0022               	movlb	2	; select bank2
 18272  17BA  108E               	bcf	14,1	;volatile
 18273                           
 18274                           ;25AA040A.c: 173: SPI_Exchange8bit(opcode);
 18275  17BB  0020               	movlb	0	; select bank0
 18276  17BC  085F               	movf	EEPROM_25AA040A_WriteBuffer@opcode,w
 18277  17BD  31A6  2628  3197   	fcall	_SPI_Exchange8bit
 18278                           
 18279                           ;25AA040A.c: 174: SPI_Exchange8bit((uint8_t) (pageAddr & 0xFF));
 18280  17C0  0020               	movlb	0	; select bank0
 18281  17C1  0861               	movf	EEPROM_25AA040A_WriteBuffer@pageAddr,w
 18282  17C2  31A6  2628  3197   	fcall	_SPI_Exchange8bit
 18283                           
 18284                           ;25AA040A.c: 175: for (j = 0; j < bytesOnPage; ++j)
 18285  17C5  0020               	movlb	0	; select bank0
 18286  17C6  01E4               	clrf	EEPROM_25AA040A_WriteBuffer@j
 18287  17C7                     l6959:	
 18288  17C7  0863               	movf	EEPROM_25AA040A_WriteBuffer@bytesOnPage,w
 18289  17C8  0264               	subwf	EEPROM_25AA040A_WriteBuffer@j,w
 18290  17C9  1803               	btfsc	3,0
 18291  17CA  2FE5               	goto	l196
 18292                           
 18293                           ;25AA040A.c: 176: {
 18294                           ;25AA040A.c: 177: SPI_Exchange8bit(*(data + i * 16 + j));
 18295  17CB  0866               	movf	EEPROM_25AA040A_WriteBuffer@i,w
 18296  17CC  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18297  17CD  3003               	movlw	3
 18298  17CE                     u8235:	
 18299  17CE  35DA               	lslf	??_EEPROM_25AA040A_WriteBuffer,f
 18300  17CF  3EFF               	addlw	-1
 18301  17D0  1D03               	skipz
 18302  17D1  2FCE               	goto	u8235
 18303  17D2  355A               	lslf	??_EEPROM_25AA040A_WriteBuffer,w
 18304  17D3  0758               	addwf	EEPROM_25AA040A_WriteBuffer@data,w
 18305  17D4  00DB               	movwf	??_EEPROM_25AA040A_WriteBuffer+1
 18306  17D5  0864               	movf	EEPROM_25AA040A_WriteBuffer@j,w
 18307  17D6  075B               	addwf	??_EEPROM_25AA040A_WriteBuffer+1,w
 18308  17D7  00DC               	movwf	??_EEPROM_25AA040A_WriteBuffer+2
 18309  17D8  085C               	movf	??_EEPROM_25AA040A_WriteBuffer+2,w
 18310  17D9  0086               	movwf	6
 18311  17DA  0187               	clrf	7
 18312  17DB  0801               	movf	1,w
 18313  17DC  31A6  2628  3197   	fcall	_SPI_Exchange8bit
 18314  17DF  3001               	movlw	1
 18315  17E0  0020               	movlb	0	; select bank0
 18316  17E1  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18317  17E2  085A               	movf	??_EEPROM_25AA040A_WriteBuffer,w
 18318  17E3  07E4               	addwf	EEPROM_25AA040A_WriteBuffer@j,f
 18319  17E4  2FC7               	goto	l6959
 18320  17E5                     l196:	
 18321                           ;25AA040A.c: 178: }
 18322                           ;25AA040A.c: 179: do { LATC1 = 1; } while(0);
 18323                           
 18324  17E5  0022               	movlb	2	; select bank2
 18325  17E6  148E               	bsf	14,1	;volatile
 18326                           
 18327                           ;25AA040A.c: 180: }
 18328  17E7  2FF0               	goto	l6963
 18329  17E8                     l6961:	
 18330                           
 18331                           ;25AA040A.c: 181: else
 18332                           ;25AA040A.c: 182: {
 18333                           ;25AA040A.c: 183: printf("EEPROM write failed\r\n");
 18334  17E8  302F               	movlw	low (STR_1| (0+32768))
 18335  17E9  0020               	movlb	0	; select bank0
 18336  17EA  00B0               	movwf	printf@f
 18337  17EB  3084               	movlw	high (STR_1| (0+32768))
 18338  17EC  00B1               	movwf	printf@f+1
 18339  17ED  3180  2096  3197   	fcall	_printf
 18340  17F0                     l6963:	
 18341  17F0  3001               	movlw	1
 18342  17F1  0020               	movlb	0	; select bank0
 18343  17F2  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18344  17F3  085A               	movf	??_EEPROM_25AA040A_WriteBuffer,w
 18345  17F4  07E6               	addwf	EEPROM_25AA040A_WriteBuffer@i,f
 18346  17F5  2F64               	goto	l6965
 18347  17F6                     l6967:	
 18348                           
 18349                           ;25AA040A.c: 184: }
 18350                           ;25AA040A.c: 185: }
 18351                           ;25AA040A.c: 186: }
 18352                           ;25AA040A.c: 187: _delay((unsigned long)((5)*(16000000/4000.0)));
 18353  17F6  301A               	movlw	26
 18354  17F7  00DB               	movwf	??_EEPROM_25AA040A_WriteBuffer+1
 18355  17F8  30F8               	movlw	248
 18356  17F9  00DA               	movwf	??_EEPROM_25AA040A_WriteBuffer
 18357  17FA                     u10407:	
 18358  17FA  0BDA               	decfsz	??_EEPROM_25AA040A_WriteBuffer,f
 18359  17FB  2FFA               	goto	u10407
 18360  17FC  0BDB               	decfsz	??_EEPROM_25AA040A_WriteBuffer+1,f
 18361  17FD  2FFA               	goto	u10407
 18362  17FE  0000               	nop
 18363  17FF  0008               	return
 18364  1800                     __end_of_EEPROM_25AA040A_WriteBuffer:	
 18365                           
 18366                           	psect	text61
 18367  1FAE                     __ptext61:	
 18368 ;; *************** function ___awdiv *****************
 18369 ;; Defined at:
 18370 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/awdiv.c"
 18371 ;; Parameters:    Size  Location     Type
 18372 ;;  divisor         2    2[COMMON] int 
 18373 ;;  dividend        2    4[COMMON] int 
 18374 ;; Auto vars:     Size  Location     Type
 18375 ;;  quotient        2    2[BANK0 ] int 
 18376 ;;  sign            1    1[BANK0 ] unsigned char 
 18377 ;;  counter         1    0[BANK0 ] unsigned char 
 18378 ;; Return value:  Size  Location     Type
 18379 ;;                  2    2[COMMON] int 
 18380 ;; Registers used:
 18381 ;;		wreg, status,2, status,0
 18382 ;; Tracked objects:
 18383 ;;		On entry : 0/0
 18384 ;;		On exit  : 0/0
 18385 ;;		Unchanged: 0/0
 18386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18388 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18390 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18391 ;;Total ram usage:        9 bytes
 18392 ;; Hardware stack levels used:    1
 18393 ;; Hardware stack levels required when called:    2
 18394 ;; This function calls:
 18395 ;;		Nothing
 18396 ;; This function is called by:
 18397 ;;		_LCDWriteInt
 18398 ;;		_EEPROM_25AA040A_WriteBuffer
 18399 ;;		_updateTemperature
 18400 ;; This function uses a non-reentrant model
 18401 ;;
 18402                           
 18403                           
 18404                           ;psect for function ___awdiv
 18405  1FAE                     ___awdiv:	
 18406                           
 18407                           ;incstack = 0
 18408                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 18409  1FAE  0020               	movlb	0	; select bank0
 18410  1FAF  01A1               	clrf	___awdiv@sign
 18411  1FB0  1FF3               	btfss	___awdiv@divisor+1,7
 18412  1FB1  2FB9               	goto	l6825
 18413  1FB2  09F2               	comf	___awdiv@divisor,f
 18414  1FB3  09F3               	comf	___awdiv@divisor+1,f
 18415  1FB4  0AF2               	incf	___awdiv@divisor,f
 18416  1FB5  1903               	skipnz
 18417  1FB6  0AF3               	incf	___awdiv@divisor+1,f
 18418  1FB7  01A1               	clrf	___awdiv@sign
 18419  1FB8  0AA1               	incf	___awdiv@sign,f
 18420  1FB9                     l6825:	
 18421  1FB9  1FF5               	btfss	___awdiv@dividend+1,7
 18422  1FBA  2FC4               	goto	l6831
 18423  1FBB  09F4               	comf	___awdiv@dividend,f
 18424  1FBC  09F5               	comf	___awdiv@dividend+1,f
 18425  1FBD  0AF4               	incf	___awdiv@dividend,f
 18426  1FBE  1903               	skipnz
 18427  1FBF  0AF5               	incf	___awdiv@dividend+1,f
 18428  1FC0  3001               	movlw	1
 18429  1FC1  00F6               	movwf	??___awdiv
 18430  1FC2  0876               	movf	??___awdiv,w
 18431  1FC3  06A1               	xorwf	___awdiv@sign,f
 18432  1FC4                     l6831:	
 18433  1FC4  01A2               	clrf	___awdiv@quotient
 18434  1FC5  01A3               	clrf	___awdiv@quotient+1
 18435  1FC6  0872               	movf	___awdiv@divisor,w
 18436  1FC7  0473               	iorwf	___awdiv@divisor+1,w
 18437  1FC8  1903               	btfsc	3,2
 18438  1FC9  2FF3               	goto	l6853
 18439  1FCA  01A0               	clrf	___awdiv@counter
 18440  1FCB  0AA0               	incf	___awdiv@counter,f
 18441  1FCC                     l6841:	
 18442  1FCC  1BF3               	btfsc	___awdiv@divisor+1,7
 18443  1FCD  2FD8               	goto	l6843
 18444  1FCE  3001               	movlw	1
 18445  1FCF                     u7975:	
 18446  1FCF  35F2               	lslf	___awdiv@divisor,f
 18447  1FD0  0DF3               	rlf	___awdiv@divisor+1,f
 18448  1FD1  0B89               	decfsz	9,f
 18449  1FD2  2FCF               	goto	u7975
 18450  1FD3  3001               	movlw	1
 18451  1FD4  00F6               	movwf	??___awdiv
 18452  1FD5  0876               	movf	??___awdiv,w
 18453  1FD6  07A0               	addwf	___awdiv@counter,f
 18454  1FD7  2FCC               	goto	l6841
 18455  1FD8                     l6843:	
 18456  1FD8  3001               	movlw	1
 18457  1FD9                     u7995:	
 18458  1FD9  35A2               	lslf	___awdiv@quotient,f
 18459  1FDA  0DA3               	rlf	___awdiv@quotient+1,f
 18460  1FDB  0B89               	decfsz	9,f
 18461  1FDC  2FD9               	goto	u7995
 18462  1FDD  0873               	movf	___awdiv@divisor+1,w
 18463  1FDE  0275               	subwf	___awdiv@dividend+1,w
 18464  1FDF  1D03               	skipz
 18465  1FE0  2FE3               	goto	u8005
 18466  1FE1  0872               	movf	___awdiv@divisor,w
 18467  1FE2  0274               	subwf	___awdiv@dividend,w
 18468  1FE3                     u8005:	
 18469  1FE3  1C03               	skipc
 18470  1FE4  2FEA               	goto	l6849
 18471  1FE5  0872               	movf	___awdiv@divisor,w
 18472  1FE6  02F4               	subwf	___awdiv@dividend,f
 18473  1FE7  0873               	movf	___awdiv@divisor+1,w
 18474  1FE8  3BF5               	subwfb	___awdiv@dividend+1,f
 18475  1FE9  1422               	bsf	___awdiv@quotient,0
 18476  1FEA                     l6849:	
 18477  1FEA  3001               	movlw	1
 18478  1FEB                     u8015:	
 18479  1FEB  36F3               	lsrf	___awdiv@divisor+1,f
 18480  1FEC  0CF2               	rrf	___awdiv@divisor,f
 18481  1FED  0B89               	decfsz	9,f
 18482  1FEE  2FEB               	goto	u8015
 18483  1FEF  3001               	movlw	1
 18484  1FF0  02A0               	subwf	___awdiv@counter,f
 18485  1FF1  1D03               	btfss	3,2
 18486  1FF2  2FD8               	goto	l6843
 18487  1FF3                     l6853:	
 18488  1FF3  0821               	movf	___awdiv@sign,w
 18489  1FF4  1903               	btfsc	3,2
 18490  1FF5  2FFB               	goto	l6857
 18491  1FF6  09A2               	comf	___awdiv@quotient,f
 18492  1FF7  09A3               	comf	___awdiv@quotient+1,f
 18493  1FF8  0AA2               	incf	___awdiv@quotient,f
 18494  1FF9  1903               	skipnz
 18495  1FFA  0AA3               	incf	___awdiv@quotient+1,f
 18496  1FFB                     l6857:	
 18497  1FFB  0823               	movf	___awdiv@quotient+1,w
 18498  1FFC  00F3               	movwf	?___awdiv+1
 18499  1FFD  0822               	movf	___awdiv@quotient,w
 18500  1FFE  00F2               	movwf	?___awdiv
 18501  1FFF  0008               	return
 18502  2000                     __end_of___awdiv:	
 18503                           
 18504                           	psect	text62
 18505  274C                     __ptext62:	
 18506 ;; *************** function __AlarmEvent_IncreaseSavedCounter *****************
 18507 ;; Defined at:
 18508 ;;		line 46 in file "alarm.c"
 18509 ;; Parameters:    Size  Location     Type
 18510 ;;		None
 18511 ;; Auto vars:     Size  Location     Type
 18512 ;;		None
 18513 ;; Return value:  Size  Location     Type
 18514 ;;		None               void
 18515 ;; Registers used:
 18516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18517 ;; Tracked objects:
 18518 ;;		On entry : 0/0
 18519 ;;		On exit  : 0/0
 18520 ;;		Unchanged: 0/0
 18521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18524 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18525 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18526 ;;Total ram usage:        1 bytes
 18527 ;; Hardware stack levels used:    1
 18528 ;; Hardware stack levels required when called:    6
 18529 ;; This function calls:
 18530 ;;		_EEPROM_25AA040A_WriteByte
 18531 ;; This function is called by:
 18532 ;;		__saveAlarmEvent
 18533 ;; This function uses a non-reentrant model
 18534 ;;
 18535                           
 18536                           
 18537                           ;psect for function __AlarmEvent_IncreaseSavedCounter
 18538  274C                     __AlarmEvent_IncreaseSavedCounter:	
 18539                           
 18540                           ;alarm.c: 48: SavedEventCounter += 1;
 18541                           
 18542                           ;incstack = 0
 18543                           ; Regs used in __AlarmEvent_IncreaseSavedCounter: [wreg-fsr1h+status,2+status,0+pclath+c
      +                          stack]
 18544  274C  3001               	movlw	1
 18545  274D  0020               	movlb	0	; select bank0
 18546  274E  00DF               	movwf	??__AlarmEvent_IncreaseSavedCounter
 18547  274F  085F               	movf	??__AlarmEvent_IncreaseSavedCounter,w
 18548  2750  0021               	movlb	1	; select bank1
 18549  2751  07E1               	addwf	_SavedEventCounter^(0+128),f
 18550                           
 18551                           ;alarm.c: 49: EEPROM_25AA040A_WriteByte(0x0F, SavedEventCounter);
 18552  2752  300F               	movlw	15
 18553  2753  0020               	movlb	0	; select bank0
 18554  2754  00D6               	movwf	EEPROM_25AA040A_WriteByte@address
 18555  2755  3000               	movlw	0
 18556  2756  00D7               	movwf	EEPROM_25AA040A_WriteByte@address+1
 18557  2757  0021               	movlb	1	; select bank1
 18558  2758  0861               	movf	_SavedEventCounter^(0+128),w
 18559  2759  0020               	movlb	0	; select bank0
 18560  275A  00DF               	movwf	??__AlarmEvent_IncreaseSavedCounter
 18561  275B  085F               	movf	??__AlarmEvent_IncreaseSavedCounter,w
 18562  275C  00D8               	movwf	EEPROM_25AA040A_WriteByte@data
 18563  275D  319B  23B0         	fcall	_EEPROM_25AA040A_WriteByte
 18564  275F  0008               	return
 18565  2760                     __end_of__AlarmEvent_IncreaseSavedCounter:	
 18566                           
 18567                           	psect	text63
 18568  1BB0                     __ptext63:	
 18569 ;; *************** function _EEPROM_25AA040A_WriteByte *****************
 18570 ;; Defined at:
 18571 ;;		line 105 in file "25AA040A.c"
 18572 ;; Parameters:    Size  Location     Type
 18573 ;;  address         2   54[BANK0 ] unsigned int 
 18574 ;;  data            1   56[BANK0 ] unsigned char 
 18575 ;; Auto vars:     Size  Location     Type
 18576 ;;  WREN_Ok         1   62[BANK0 ] unsigned char 
 18577 ;;  opcode          1   61[BANK0 ] unsigned char 
 18578 ;; Return value:  Size  Location     Type
 18579 ;;		None               void
 18580 ;; Registers used:
 18581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18582 ;; Tracked objects:
 18583 ;;		On entry : 0/0
 18584 ;;		On exit  : 0/0
 18585 ;;		Unchanged: 0/0
 18586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18587 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18588 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18589 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18590 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18591 ;;Total ram usage:        9 bytes
 18592 ;; Hardware stack levels used:    1
 18593 ;; Hardware stack levels required when called:    5
 18594 ;; This function calls:
 18595 ;;		_SPI_Exchange8bit
 18596 ;;		__EEPROM_25AA040A_WriteEnable
 18597 ;;		_printf
 18598 ;; This function is called by:
 18599 ;;		__AlarmEvent_IncreaseSavedCounter
 18600 ;;		_clearAllAlarmEvents
 18601 ;; This function uses a non-reentrant model
 18602 ;;
 18603                           
 18604                           
 18605                           ;psect for function _EEPROM_25AA040A_WriteByte
 18606  1BB0                     _EEPROM_25AA040A_WriteByte:	
 18607                           
 18608                           ;25AA040A.c: 107: uint8_t opcode = (EEPROM_WRITE) | ( ( (address) >> 9) << 3);
 18609                           
 18610                           ;incstack = 0
 18611                           ; Regs used in _EEPROM_25AA040A_WriteByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18612  1BB0  0020               	movlb	0	; select bank0
 18613  1BB1  0857               	movf	EEPROM_25AA040A_WriteByte@address+1,w
 18614  1BB2  00DA               	movwf	??_EEPROM_25AA040A_WriteByte+1
 18615  1BB3  0856               	movf	EEPROM_25AA040A_WriteByte@address,w
 18616  1BB4  00D9               	movwf	??_EEPROM_25AA040A_WriteByte
 18617  1BB5  3009               	movlw	9
 18618  1BB6                     u8295:	
 18619  1BB6  36DA               	lsrf	??_EEPROM_25AA040A_WriteByte+1,f
 18620  1BB7  0CD9               	rrf	??_EEPROM_25AA040A_WriteByte,f
 18621  1BB8  0B89               	decfsz	9,f
 18622  1BB9  2BB6               	goto	u8295
 18623  1BBA  0859               	movf	??_EEPROM_25AA040A_WriteByte,w
 18624  1BBB  00DB               	movwf	??_EEPROM_25AA040A_WriteByte+2
 18625  1BBC  3002               	movlw	2
 18626  1BBD                     u8305:	
 18627  1BBD  35DB               	lslf	??_EEPROM_25AA040A_WriteByte+2,f
 18628  1BBE  3EFF               	addlw	-1
 18629  1BBF  1D03               	skipz
 18630  1BC0  2BBD               	goto	u8305
 18631  1BC1  355B               	lslf	??_EEPROM_25AA040A_WriteByte+2,w
 18632  1BC2  3802               	iorlw	2
 18633  1BC3  00DC               	movwf	??_EEPROM_25AA040A_WriteByte+3
 18634  1BC4  085C               	movf	??_EEPROM_25AA040A_WriteByte+3,w
 18635  1BC5  00DD               	movwf	EEPROM_25AA040A_WriteByte@opcode
 18636                           
 18637                           ;25AA040A.c: 111: bool WREN_Ok = _EEPROM_25AA040A_WriteEnable();
 18638  1BC6  3190  2091  319B   	fcall	__EEPROM_25AA040A_WriteEnable
 18639  1BC9  0020               	movlb	0	; select bank0
 18640  1BCA  00D9               	movwf	??_EEPROM_25AA040A_WriteByte
 18641  1BCB  0859               	movf	??_EEPROM_25AA040A_WriteByte,w
 18642  1BCC  00DE               	movwf	EEPROM_25AA040A_WriteByte@WREN_Ok
 18643                           
 18644                           ;25AA040A.c: 112: if (WREN_Ok)
 18645  1BCD  085E               	movf	EEPROM_25AA040A_WriteByte@WREN_Ok,w
 18646  1BCE  1903               	btfsc	3,2
 18647  1BCF  2BE3               	goto	l6995
 18648                           
 18649                           ;25AA040A.c: 113: {
 18650                           ;25AA040A.c: 114: do { LATC1 = 0; } while(0);
 18651  1BD0  0022               	movlb	2	; select bank2
 18652  1BD1  108E               	bcf	14,1	;volatile
 18653                           
 18654                           ;25AA040A.c: 115: SPI_Exchange8bit(opcode);
 18655  1BD2  0020               	movlb	0	; select bank0
 18656  1BD3  085D               	movf	EEPROM_25AA040A_WriteByte@opcode,w
 18657  1BD4  31A6  2628  319B   	fcall	_SPI_Exchange8bit
 18658                           
 18659                           ;25AA040A.c: 116: SPI_Exchange8bit((uint8_t) (address & 0xFF));
 18660  1BD7  0020               	movlb	0	; select bank0
 18661  1BD8  0856               	movf	EEPROM_25AA040A_WriteByte@address,w
 18662  1BD9  31A6  2628  319B   	fcall	_SPI_Exchange8bit
 18663                           
 18664                           ;25AA040A.c: 117: SPI_Exchange8bit(data);
 18665  1BDC  0020               	movlb	0	; select bank0
 18666  1BDD  0858               	movf	EEPROM_25AA040A_WriteByte@data,w
 18667  1BDE  31A6  2628         	fcall	_SPI_Exchange8bit
 18668                           
 18669                           ;25AA040A.c: 118: do { LATC1 = 1; } while(0);
 18670  1BE0  0022               	movlb	2	; select bank2
 18671  1BE1  148E               	bsf	14,1	;volatile
 18672                           
 18673                           ;25AA040A.c: 119: }
 18674  1BE2  0008               	return
 18675  1BE3                     l6995:	
 18676                           
 18677                           ;25AA040A.c: 120: else
 18678                           ;25AA040A.c: 121: {
 18679                           ;25AA040A.c: 122: printf("EEPROM write failed\r\n");
 18680  1BE3  302F               	movlw	low (STR_1| (0+32768))
 18681  1BE4  0020               	movlb	0	; select bank0
 18682  1BE5  00B0               	movwf	printf@f
 18683  1BE6  3084               	movlw	high (STR_1| (0+32768))
 18684  1BE7  00B1               	movwf	printf@f+1
 18685  1BE8  3180  2096         	fcall	_printf
 18686  1BEA  0008               	return
 18687  1BEB                     __end_of_EEPROM_25AA040A_WriteByte:	
 18688                           
 18689                           	psect	text64
 18690  0096                     __ptext64:	
 18691 ;; *************** function _printf *****************
 18692 ;; Defined at:
 18693 ;;		line 464 in file "/opt/microchip/xc8/v1.35/sources/common/doprnt.c"
 18694 ;; Parameters:    Size  Location     Type
 18695 ;;  f               2   16[BANK0 ] PTR const unsigned char 
 18696 ;;		 -> STR_58(3), STR_55(5), STR_54(39), STR_53(21), 
 18697 ;;		 -> STR_52(18), STR_51(10), STR_49(12), STR_47(17), 
 18698 ;;		 -> STR_45(14), STR_44(27), STR_43(15), STR_28(19), 
 18699 ;;		 -> STR_27(17), STR_26(5), STR_25(14), STR_23(22), 
 18700 ;;		 -> STR_20(10), STR_19(15), STR_18(11), STR_17(10), 
 18701 ;;		 -> STR_16(14), STR_15(14), STR_14(10), STR_12(23), 
 18702 ;;		 -> STR_10(15), STR_8(33), STR_7(10), STR_6(11), 
 18703 ;;		 -> STR_5(8), STR_4(8), STR_3(22), STR_2(30), 
 18704 ;;		 -> STR_1(22), 
 18705 ;; Auto vars:     Size  Location     Type
 18706 ;;  idx             1   38[BANK0 ] unsigned char 
 18707 ;;  val             4   46[BANK0 ] unsigned long 
 18708 ;;  tmpval          4    0        struct .
 18709 ;;  width           2   51[BANK0 ] int 
 18710 ;;  len             2   43[BANK0 ] unsigned int 
 18711 ;;  cp              2   41[BANK0 ] PTR const unsigned char 
 18712 ;;		 -> STR_59(7), STR_57(17), STR_56(13), CurrentTemperatureRaw(2), 
 18713 ;;		 -> buf(16), 
 18714 ;;  prec            2   39[BANK0 ] int 
 18715 ;;  c               1   53[BANK0 ] char 
 18716 ;;  flag            1   50[BANK0 ] unsigned char 
 18717 ;;  ap              1   45[BANK0 ] PTR void [1]
 18718 ;;		 -> ?_printf(2), 
 18719 ;; Return value:  Size  Location     Type
 18720 ;;                  2   16[BANK0 ] int 
 18721 ;; Registers used:
 18722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18723 ;; Tracked objects:
 18724 ;;		On entry : 0/0
 18725 ;;		On exit  : 0/0
 18726 ;;		Unchanged: 0/0
 18727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18728 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18729 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18730 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18731 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18732 ;;Total ram usage:       38 bytes
 18733 ;; Hardware stack levels used:    1
 18734 ;; Hardware stack levels required when called:    4
 18735 ;; This function calls:
 18736 ;;		___lldiv
 18737 ;;		___llmod
 18738 ;;		___wmul
 18739 ;;		_isdigit
 18740 ;;		_putch
 18741 ;; This function is called by:
 18742 ;;		_EEPROM_25AA040A_WriteByte
 18743 ;;		_EEPROM_25AA040A_WriteBuffer
 18744 ;;		_EEPROM_25AA040A_Dump
 18745 ;;		_main
 18746 ;;		_processCommand
 18747 ;;		_TempSensor_Init
 18748 ;;		__saveAlarmEvent
 18749 ;;		_ACKAlarm
 18750 ;;		_checkAlarm
 18751 ;;		_printAllAlarmEvents
 18752 ;; This function uses a non-reentrant model
 18753 ;;
 18754                           
 18755                           
 18756                           ;psect for function _printf
 18757  0096                     _printf:	
 18758                           
 18759                           ;doprnt.c: 466: va_list ap;
 18760                           ;doprnt.c: 499: signed char c;
 18761                           ;doprnt.c: 501: int width;
 18762                           ;doprnt.c: 504: int prec;
 18763                           ;doprnt.c: 508: unsigned char flag;
 18764                           ;doprnt.c: 523: union {
 18765                           ;doprnt.c: 524: unsigned long vd;
 18766                           ;doprnt.c: 525: double integ;
 18767                           ;doprnt.c: 526: } tmpval;
 18768                           ;doprnt.c: 528: unsigned long val;
 18769                           ;doprnt.c: 529: unsigned len;
 18770                           ;doprnt.c: 530: const char * cp;
 18771                           ;doprnt.c: 533: *ap = __va_start();
 18772                           
 18773                           ;incstack = 0
 18774                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18775  0096  3032               	movlw	(low ((?_printf| 0+2)))& (0+255)
 18776  0097  0020               	movlb	0	; select bank0
 18777  0098  00C0               	movwf	??_printf
 18778  0099  0840               	movf	??_printf,w
 18779  009A  00CD               	movwf	printf@ap
 18780  009B                     l6815:	
 18781                           ;doprnt.c: 536: while(c = *f++) {
 18782                           
 18783  009B  0020               	movlb	0	; select bank0
 18784  009C  0831               	movf	printf@f+1,w
 18785  009D  00C1               	movwf	??_printf+1
 18786  009E  0830               	movf	printf@f,w
 18787  009F  00C0               	movwf	??_printf
 18788  00A0  0AB0               	incf	printf@f,f
 18789  00A1  1903               	skipnz
 18790  00A2  0AB1               	incf	printf@f+1,f
 18791  00A3  0840               	movf	??_printf,w
 18792  00A4  0084               	movwf	4
 18793  00A5  0841               	movf	??_printf+1,w
 18794  00A6  0085               	movwf	5
 18795  00A7  0800               	movf	0,w	;code access
 18796  00A8  00C2               	movwf	??_printf+2
 18797  00A9  0842               	movf	??_printf+2,w
 18798  00AA  00D5               	movwf	printf@c
 18799  00AB  0855               	movf	printf@c,w
 18800  00AC  1903               	btfsc	3,2
 18801  00AD  0008               	return
 18802                           
 18803                           ;doprnt.c: 538: if(c != '%')
 18804  00AE  3025               	movlw	37
 18805  00AF  0655               	xorwf	printf@c,w
 18806  00B0  1903               	btfsc	3,2
 18807  00B1  28B7               	goto	l6661
 18808                           
 18809                           ;doprnt.c: 540: {
 18810                           ;doprnt.c: 541: (putch(c) );
 18811  00B2  0855               	movf	printf@c,w
 18812  00B3  31A5  25FB  3180   	fcall	_putch
 18813                           
 18814                           ;doprnt.c: 542: continue;
 18815  00B6  289B               	goto	l6815
 18816  00B7                     l6661:	
 18817                           
 18818                           ;doprnt.c: 543: }
 18819                           ;doprnt.c: 546: width = 0;
 18820  00B7  0020               	movlb	0	; select bank0
 18821  00B8  01D3               	clrf	printf@width
 18822  00B9  01D4               	clrf	printf@width+1
 18823                           
 18824                           ;doprnt.c: 548: flag = 0;
 18825  00BA  01D2               	clrf	printf@flag
 18826                           
 18827                           ;doprnt.c: 551: switch(*f) {
 18828                           
 18829                           ;doprnt.c: 550: for(;;) {
 18830  00BB  28C1               	goto	l6667
 18831  00BC                     l1247:	
 18832                           ;doprnt.c: 579: case '0':
 18833                           
 18834                           
 18835                           ;doprnt.c: 580: flag |= 0x04;
 18836  00BC  1552               	bsf	printf@flag,2
 18837                           
 18838                           ;doprnt.c: 581: f++;
 18839  00BD  3001               	movlw	1
 18840  00BE  07B0               	addwf	printf@f,f
 18841  00BF  3000               	movlw	0
 18842  00C0  3DB1               	addwfc	printf@f+1,f
 18843  00C1                     l6667:	
 18844                           ;doprnt.c: 584: }
 18845                           
 18846                           ;doprnt.c: 582: continue;
 18847                           
 18848  00C1  0830               	movf	printf@f,w
 18849  00C2  0084               	movwf	4
 18850  00C3  0831               	movf	printf@f+1,w
 18851  00C4  0085               	movwf	5
 18852  00C5  0800               	movf	0,w	;code access
 18853                           
 18854                           ; Switch size 1, requested type "space"
 18855                           ; Number of cases is 1, Range of values is 48 to 48
 18856                           ; switch strategies available:
 18857                           ; Name         Instructions Cycles
 18858                           ; simple_byte            4     3 (average)
 18859                           ; direct_byte           11     9 (fixed)
 18860                           ; jumptable            263     9 (fixed)
 18861                           ;	Chosen strategy is simple_byte
 18862  00C6  3A30               	xorlw	48	; case 48
 18863  00C7  1903               	skipnz
 18864  00C8  28BC               	goto	l1247
 18865  00C9  28CA               	goto	l6669
 18866  00CA                     l6669:	
 18867                           ;doprnt.c: 586: }
 18868                           
 18869                           ;doprnt.c: 585: break;
 18870                           
 18871                           
 18872                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 18873  00CA  0830               	movf	printf@f,w
 18874  00CB  0084               	movwf	4
 18875  00CC  0831               	movf	printf@f+1,w
 18876  00CD  0085               	movwf	5
 18877  00CE  0800               	movf	0,w	;code access
 18878  00CF  31A6  26A7  3180   	fcall	_isdigit
 18879  00D2  1C03               	btfss	3,0
 18880  00D3  2968               	goto	l6715
 18881                           
 18882                           ;doprnt.c: 598: width = 0;
 18883  00D4  0020               	movlb	0	; select bank0
 18884  00D5  01D3               	clrf	printf@width
 18885  00D6  01D4               	clrf	printf@width+1
 18886  00D7                     l6673:	
 18887                           ;doprnt.c: 599: do {
 18888                           
 18889                           
 18890                           ;doprnt.c: 600: width *= 10;
 18891  00D7  300A               	movlw	10
 18892  00D8  0020               	movlb	0	; select bank0
 18893  00D9  00A0               	movwf	___wmul@multiplier
 18894  00DA  3000               	movlw	0
 18895  00DB  00A1               	movwf	___wmul@multiplier+1
 18896  00DC  0854               	movf	printf@width+1,w
 18897  00DD  00A3               	movwf	___wmul@multiplicand+1
 18898  00DE  0853               	movf	printf@width,w
 18899  00DF  00A2               	movwf	___wmul@multiplicand
 18900  00E0  3198  203A  3180   	fcall	___wmul
 18901  00E3  0020               	movlb	0	; select bank0
 18902  00E4  0821               	movf	?___wmul+1,w
 18903  00E5  00D4               	movwf	printf@width+1
 18904  00E6  0820               	movf	?___wmul,w
 18905  00E7  00D3               	movwf	printf@width
 18906                           
 18907                           ;doprnt.c: 601: width += *f++ - '0';
 18908  00E8  0830               	movf	printf@f,w
 18909  00E9  0084               	movwf	4
 18910  00EA  0831               	movf	printf@f+1,w
 18911  00EB  0085               	movwf	5
 18912  00EC  0800               	movf	0,w	;code access
 18913  00ED  3ED0               	addlw	208
 18914  00EE  00C0               	movwf	??_printf
 18915  00EF  30FF               	movlw	255
 18916  00F0  1803               	skipnc
 18917  00F1  3000               	movlw	0
 18918  00F2  00C1               	movwf	??_printf+1
 18919  00F3  0840               	movf	??_printf,w
 18920  00F4  07D3               	addwf	printf@width,f
 18921  00F5  0841               	movf	??_printf+1,w
 18922  00F6  3DD4               	addwfc	printf@width+1,f
 18923  00F7  3001               	movlw	1
 18924  00F8  07B0               	addwf	printf@f,f
 18925  00F9  3000               	movlw	0
 18926  00FA  3DB1               	addwfc	printf@f+1,f
 18927                           
 18928                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 18929  00FB  0830               	movf	printf@f,w
 18930  00FC  0084               	movwf	4
 18931  00FD  0831               	movf	printf@f+1,w
 18932  00FE  0085               	movwf	5
 18933  00FF  0800               	movf	0,w	;code access
 18934  0100  31A6  26A7  3180   	fcall	_isdigit
 18935  0103  1C03               	btfss	3,0
 18936  0104  2968               	goto	l6715
 18937  0105  28D7               	goto	l6673
 18938  0106                     l1258:	
 18939                           ;doprnt.c: 641: case 'l':
 18940                           
 18941                           ;doprnt.c: 638: goto alldone;
 18942                           
 18943                           ;doprnt.c: 637: case 0:
 18944                           
 18945                           ;doprnt.c: 635: switch(c = *f++) {
 18946                           
 18947                           ;doprnt.c: 608: }
 18948                           ;doprnt.c: 633: loop:
 18949                           
 18950                           
 18951                           ;doprnt.c: 643: flag |= 0x10;
 18952  0106  1652               	bsf	printf@flag,4
 18953                           
 18954                           ;doprnt.c: 644: goto loop;
 18955  0107  2968               	goto	l6715
 18956  0108                     l1262:	
 18957                           ;doprnt.c: 718: case 'x':
 18958                           
 18959                           ;doprnt.c: 698: case 'i':
 18960                           ;doprnt.c: 699: break;
 18961                           
 18962                           ;doprnt.c: 697: case 'd':
 18963                           
 18964                           
 18965                           ;doprnt.c: 721: flag |= 0x80;
 18966  0108  17D2               	bsf	printf@flag,7
 18967                           
 18968                           ;doprnt.c: 723: break;
 18969  0109  298C               	goto	l6717
 18970  010A                     l6681:	
 18971                           ;doprnt.c: 728: case 's':
 18972                           
 18973                           
 18974                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 18975  010A  084D               	movf	printf@ap,w
 18976  010B  0086               	movwf	6
 18977  010C  0187               	clrf	7
 18978  010D  3F40               	moviw [0]fsr1
 18979  010E  00C9               	movwf	printf@cp
 18980  010F  3F41               	moviw [1]fsr1
 18981  0110  00CA               	movwf	printf@cp+1
 18982  0111  3002               	movlw	2
 18983  0112  00C0               	movwf	??_printf
 18984  0113  0840               	movf	??_printf,w
 18985  0114  07CD               	addwf	printf@ap,f
 18986                           
 18987                           ;doprnt.c: 740: if(!cp)
 18988  0115  0849               	movf	printf@cp,w
 18989  0116  044A               	iorwf	printf@cp+1,w
 18990  0117  1D03               	btfss	3,2
 18991  0118  291D               	goto	l6689
 18992                           
 18993                           ;doprnt.c: 741: cp = "(null)";
 18994  0119  3099               	movlw	low (STR_59| (0+32768))
 18995  011A  00C9               	movwf	printf@cp
 18996  011B  3085               	movlw	high (STR_59| (0+32768))
 18997  011C  00CA               	movwf	printf@cp+1
 18998  011D                     l6689:	
 18999                           
 19000                           ;doprnt.c: 745: len = 0;
 19001  011D  01CB               	clrf	printf@len
 19002  011E  01CC               	clrf	printf@len+1
 19003  011F                     l6693:	
 19004                           ;doprnt.c: 746: while(cp[len])
 19005                           
 19006  011F  0849               	movf	printf@cp,w
 19007  0120  074B               	addwf	printf@len,w
 19008  0121  0084               	movwf	4
 19009  0122  084A               	movf	printf@cp+1,w
 19010  0123  3D4C               	addwfc	printf@len+1,w
 19011  0124  0085               	movwf	5
 19012  0125  0012               	moviw fsr0++
 19013  0126  1903               	btfsc	3,2
 19014  0127  292D               	goto	l6695
 19015                           
 19016                           ;doprnt.c: 747: len++;
 19017  0128  3001               	movlw	1
 19018  0129  07CB               	addwf	printf@len,f
 19019  012A  3000               	movlw	0
 19020  012B  3DCC               	addwfc	printf@len+1,f
 19021  012C  291F               	goto	l6693
 19022  012D                     l6695:	
 19023                           
 19024                           ;doprnt.c: 757: if(width > len)
 19025  012D  0854               	movf	printf@width+1,w
 19026  012E  024C               	subwf	printf@len+1,w
 19027  012F  1D03               	skipz
 19028  0130  2933               	goto	u7695
 19029  0131  0853               	movf	printf@width,w
 19030  0132  024B               	subwf	printf@len,w
 19031  0133                     u7695:	
 19032  0133  1803               	skipnc
 19033  0134  293A               	goto	l6699
 19034                           
 19035                           ;doprnt.c: 758: width -= len;
 19036  0135  084B               	movf	printf@len,w
 19037  0136  02D3               	subwf	printf@width,f
 19038  0137  084C               	movf	printf@len+1,w
 19039  0138  3BD4               	subwfb	printf@width+1,f
 19040  0139  293C               	goto	l6703
 19041  013A                     l6699:	
 19042                           
 19043                           ;doprnt.c: 759: else
 19044                           ;doprnt.c: 760: width = 0;
 19045  013A  01D3               	clrf	printf@width
 19046  013B  01D4               	clrf	printf@width+1
 19047  013C                     l6703:	
 19048                           ;doprnt.c: 764: while(width--)
 19049                           
 19050  013C  30FF               	movlw	255
 19051  013D  0020               	movlb	0	; select bank0
 19052  013E  07D3               	addwf	printf@width,f
 19053  013F  30FF               	movlw	255
 19054  0140  3DD4               	addwfc	printf@width+1,f
 19055  0141  0A53               	incf	printf@width,w
 19056  0142  1903               	btfsc	3,2
 19057  0143  0A54               	incf	printf@width+1,w
 19058  0144  1903               	btfsc	3,2
 19059  0145  2958               	goto	l6709
 19060                           
 19061                           ;doprnt.c: 765: (putch(' ') );
 19062  0146  3020               	movlw	32
 19063  0147  31A5  25FB  3180   	fcall	_putch
 19064  014A  293C               	goto	l6703
 19065  014B                     l6705:	
 19066                           ;doprnt.c: 767: while(len--)
 19067                           
 19068                           
 19069                           ;doprnt.c: 768: (putch(*cp++) );
 19070  014B  0849               	movf	printf@cp,w
 19071  014C  0084               	movwf	4
 19072  014D  084A               	movf	printf@cp+1,w
 19073  014E  0085               	movwf	5
 19074  014F  0800               	movf	0,w	;code access
 19075  0150  31A5  25FB  3180   	fcall	_putch
 19076  0153  3001               	movlw	1
 19077  0154  0020               	movlb	0	; select bank0
 19078  0155  07C9               	addwf	printf@cp,f
 19079  0156  3000               	movlw	0
 19080  0157  3DCA               	addwfc	printf@cp+1,f
 19081  0158                     l6709:	
 19082  0158  3001               	movlw	1
 19083  0159  02CB               	subwf	printf@len,f
 19084  015A  3000               	movlw	0
 19085  015B  3BCC               	subwfb	printf@len+1,f
 19086  015C  0A4B               	incf	printf@len,w
 19087  015D  1D03               	skipz
 19088  015E  294B               	goto	l6705
 19089  015F  0A4C               	incf	printf@len+1,w
 19090  0160  1903               	btfsc	3,2
 19091  0161  289B               	goto	l6815
 19092  0162  294B               	goto	l6705
 19093  0163                     l6711:	
 19094                           ;doprnt.c: 817: case 'u':
 19095                           
 19096                           ;doprnt.c: 813: continue;
 19097                           
 19098                           ;doprnt.c: 802: default:
 19099                           
 19100                           ;doprnt.c: 774: continue;
 19101                           
 19102                           
 19103                           ;doprnt.c: 818: flag |= 0xC0;
 19104  0163  30C0               	movlw	192
 19105  0164  00C0               	movwf	??_printf
 19106  0165  0840               	movf	??_printf,w
 19107  0166  04D2               	iorwf	printf@flag,f
 19108                           
 19109                           ;doprnt.c: 822: }
 19110                           
 19111                           ;doprnt.c: 819: break;
 19112  0167  298C               	goto	l6717
 19113  0168                     l6715:	
 19114  0168  0020               	movlb	0	; select bank0
 19115  0169  0831               	movf	printf@f+1,w
 19116  016A  00C1               	movwf	??_printf+1
 19117  016B  0830               	movf	printf@f,w
 19118  016C  00C0               	movwf	??_printf
 19119  016D  0AB0               	incf	printf@f,f
 19120  016E  1903               	skipnz
 19121  016F  0AB1               	incf	printf@f+1,f
 19122  0170  0840               	movf	??_printf,w
 19123  0171  0084               	movwf	4
 19124  0172  0841               	movf	??_printf+1,w
 19125  0173  0085               	movwf	5
 19126  0174  0800               	movf	0,w	;code access
 19127  0175  00D5               	movwf	printf@c
 19128                           
 19129                           ; Switch size 1, requested type "space"
 19130                           ; Number of cases is 7, Range of values is 0 to 120
 19131                           ; switch strategies available:
 19132                           ; Name         Instructions Cycles
 19133                           ; simple_byte           22    12 (average)
 19134                           ; direct_byte          248     6 (fixed)
 19135                           ; jumptable            260     6 (fixed)
 19136                           ;	Chosen strategy is simple_byte
 19137  0176  3A00               	xorlw	0	; case 0
 19138  0177  1903               	skipnz
 19139  0178  2B38               	goto	l1318
 19140  0179  3A64               	xorlw	100	; case 100
 19141  017A  1903               	skipnz
 19142  017B  298C               	goto	l6717
 19143  017C  3A0D               	xorlw	13	; case 105
 19144  017D  1903               	skipnz
 19145  017E  298C               	goto	l6717
 19146  017F  3A05               	xorlw	5	; case 108
 19147  0180  1903               	skipnz
 19148  0181  2906               	goto	l1258
 19149  0182  3A1F               	xorlw	31	; case 115
 19150  0183  1903               	skipnz
 19151  0184  290A               	goto	l6681
 19152  0185  3A06               	xorlw	6	; case 117
 19153  0186  1903               	skipnz
 19154  0187  2963               	goto	l6711
 19155  0188  3A0D               	xorlw	13	; case 120
 19156  0189  1903               	skipnz
 19157  018A  2908               	goto	l1262
 19158  018B  289B               	goto	l6815
 19159  018C                     l6717:	
 19160                           
 19161                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 19162  018C  0852               	movf	printf@flag,w
 19163  018D  39C0               	andlw	192
 19164  018E  1D03               	btfss	3,2
 19165  018F  29C5               	goto	l1278
 19166                           
 19167                           ;doprnt.c: 1253: {
 19168                           ;doprnt.c: 1255: if(flag & 0x10)
 19169  0190  1E52               	btfss	printf@flag,4
 19170  0191  299F               	goto	l6725
 19171                           
 19172                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 19173  0192  084D               	movf	printf@ap,w
 19174  0193  0086               	movwf	6
 19175  0194  0187               	clrf	7
 19176  0195  3F40               	moviw [0]fsr1
 19177  0196  00CE               	movwf	printf@val
 19178  0197  3F41               	moviw [1]fsr1
 19179  0198  00CF               	movwf	printf@val+1
 19180  0199  3F42               	moviw [2]fsr1
 19181  019A  00D0               	movwf	printf@val+2
 19182  019B  3F43               	moviw [3]fsr1
 19183  019C  00D1               	movwf	printf@val+3
 19184  019D  3004               	movlw	4
 19185  019E  29B0               	goto	L11
 19186  019F                     l6725:	
 19187                           
 19188                           ;doprnt.c: 1257: else
 19189                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 19190  019F  084D               	movf	printf@ap,w
 19191  01A0  0086               	movwf	6
 19192  01A1  0187               	clrf	7
 19193  01A2  3F40               	moviw [0]fsr1
 19194  01A3  00C0               	movwf	??_printf
 19195  01A4  3F41               	moviw [1]fsr1
 19196  01A5  00C1               	movwf	??_printf+1
 19197  01A6  0840               	movf	??_printf,w
 19198  01A7  00CE               	movwf	printf@val
 19199  01A8  0841               	movf	??_printf+1,w
 19200  01A9  00CF               	movwf	printf@val+1
 19201  01AA  0D89               	rlf	9,f
 19202  01AB  3B89               	subwfb	9,f
 19203  01AC  0989               	comf	9,f
 19204  01AD  00D0               	movwf	printf@val+2
 19205  01AE  00D1               	movwf	printf@val+3
 19206  01AF  3002               	movlw	2
 19207  01B0                     L11:	
 19208  01B0  00C0               	movwf	??_printf
 19209  01B1  0840               	movf	??_printf,w
 19210  01B2  07CD               	addwf	printf@ap,f
 19211                           
 19212                           ;doprnt.c: 1261: if((long)val < 0) {
 19213  01B3  1FD1               	btfss	printf@val+3,7
 19214  01B4  2A46               	goto	l6765
 19215                           
 19216                           ;doprnt.c: 1262: flag |= 0x03;
 19217  01B5  3003               	movlw	3
 19218  01B6  00C0               	movwf	??_printf
 19219  01B7  0840               	movf	??_printf,w
 19220  01B8  04D2               	iorwf	printf@flag,f
 19221                           
 19222                           ;doprnt.c: 1263: val = -val;
 19223  01B9  09CE               	comf	printf@val,f
 19224  01BA  09CF               	comf	printf@val+1,f
 19225  01BB  09D0               	comf	printf@val+2,f
 19226  01BC  09D1               	comf	printf@val+3,f
 19227  01BD  0ACE               	incf	printf@val,f
 19228  01BE  1903               	skipnz
 19229  01BF  0ACF               	incf	printf@val+1,f
 19230  01C0  1903               	skipnz
 19231  01C1  0AD0               	incf	printf@val+2,f
 19232  01C2  1903               	skipnz
 19233  01C3  0AD1               	incf	printf@val+3,f
 19234                           
 19235                           ;doprnt.c: 1264: }
 19236                           ;doprnt.c: 1266: }
 19237  01C4  2A46               	goto	l6765
 19238  01C5                     l1278:	
 19239                           
 19240                           ;doprnt.c: 1268: else
 19241                           ;doprnt.c: 1273: {
 19242                           ;doprnt.c: 1281: if(flag & 0x10)
 19243  01C5  1E52               	btfss	printf@flag,4
 19244  01C6  29D4               	goto	l6739
 19245                           
 19246                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 19247  01C7  084D               	movf	printf@ap,w
 19248  01C8  0086               	movwf	6
 19249  01C9  0187               	clrf	7
 19250  01CA  3F40               	moviw [0]fsr1
 19251  01CB  00CE               	movwf	printf@val
 19252  01CC  3F41               	moviw [1]fsr1
 19253  01CD  00CF               	movwf	printf@val+1
 19254  01CE  3F42               	moviw [2]fsr1
 19255  01CF  00D0               	movwf	printf@val+2
 19256  01D0  3F43               	moviw [3]fsr1
 19257  01D1  00D1               	movwf	printf@val+3
 19258  01D2  3004               	movlw	4
 19259  01D3  29E2               	goto	L12
 19260  01D4                     l6739:	
 19261                           
 19262                           ;doprnt.c: 1283: else
 19263                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 19264  01D4  084D               	movf	printf@ap,w
 19265  01D5  0086               	movwf	6
 19266  01D6  0187               	clrf	7
 19267  01D7  3F40               	moviw [0]fsr1
 19268  01D8  00C0               	movwf	??_printf
 19269  01D9  3F41               	moviw [1]fsr1
 19270  01DA  00C1               	movwf	??_printf+1
 19271  01DB  0840               	movf	??_printf,w
 19272  01DC  00CE               	movwf	printf@val
 19273  01DD  0841               	movf	??_printf+1,w
 19274  01DE  00CF               	movwf	printf@val+1
 19275  01DF  01D0               	clrf	printf@val+2
 19276  01E0  01D1               	clrf	printf@val+3
 19277  01E1  3002               	movlw	2
 19278  01E2                     L12:	
 19279  01E2  00C0               	movwf	??_printf
 19280  01E3  0840               	movf	??_printf,w
 19281  01E4  07CD               	addwf	printf@ap,f
 19282                           
 19283                           ;doprnt.c: 1287: }
 19284                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 19285  01E5  2A46               	goto	l6765
 19286  01E6                     l1287:	
 19287                           ;doprnt.c: 1299: case 0x00:
 19288                           
 19289                           
 19290                           ;doprnt.c: 1302: case 0xC0:
 19291                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 19292  01E6  01D5               	clrf	printf@c
 19293  01E7  0AD5               	incf	printf@c,f
 19294  01E8                     L14:	
 19295  01E8  300A               	movlw	10
 19296  01E9  0655               	xorwf	printf@c,w
 19297  01EA  1903               	btfsc	3,2
 19298  01EB  2A52               	goto	l6767
 19299                           
 19300                           ;doprnt.c: 1306: if(val < dpowers[c])
 19301  01EC  0855               	movf	printf@c,w
 19302  01ED  00C0               	movwf	??_printf
 19303  01EE  01C1               	clrf	??_printf+1
 19304  01EF  35C0               	lslf	??_printf,f
 19305  01F0  0DC1               	rlf	??_printf+1,f
 19306  01F1  35C0               	lslf	??_printf,f
 19307  01F2  0DC1               	rlf	??_printf+1,f
 19308  01F3  3039               	movlw	low (_dpowers| (0+32768))
 19309  01F4  0740               	addwf	??_printf,w
 19310  01F5  0084               	movwf	4
 19311  01F6  3083               	movlw	high (_dpowers| (0+32768))
 19312  01F7  3D41               	addwfc	??_printf+1,w
 19313  01F8  0085               	movwf	5
 19314  01F9  3F00               	moviw [0]fsr0
 19315  01FA  00C2               	movwf	??_printf+2
 19316  01FB  3F01               	moviw [1]fsr0
 19317  01FC  00C3               	movwf	??_printf+3
 19318  01FD  3F02               	moviw [2]fsr0
 19319  01FE  00C4               	movwf	??_printf+4
 19320  01FF  3F03               	moviw [3]fsr0
 19321  0200  00C5               	movwf	??_printf+5
 19322  0201  0845               	movf	??_printf+5,w
 19323  0202  0251               	subwf	printf@val+3,w
 19324  0203  1D03               	skipz
 19325  0204  2A0F               	goto	u7775
 19326  0205  0844               	movf	??_printf+4,w
 19327  0206  0250               	subwf	printf@val+2,w
 19328  0207  1D03               	skipz
 19329  0208  2A0F               	goto	u7775
 19330  0209  0843               	movf	??_printf+3,w
 19331  020A  024F               	subwf	printf@val+1,w
 19332  020B  1D03               	skipz
 19333  020C  2A0F               	goto	u7775
 19334  020D  0842               	movf	??_printf+2,w
 19335  020E  024E               	subwf	printf@val,w
 19336  020F                     u7775:	
 19337  020F  1C03               	btfss	3,0
 19338  0210  2A52               	goto	l6767
 19339                           
 19340                           ;doprnt.c: 1307: break;
 19341  0211  3001               	movlw	1
 19342  0212  00C0               	movwf	??_printf
 19343  0213  0840               	movf	??_printf,w
 19344  0214  07D5               	addwf	printf@c,f
 19345  0215  29E8               	goto	L14
 19346  0216                     l1292:	
 19347                           ;doprnt.c: 1314: case 0x80:
 19348                           
 19349                           ;doprnt.c: 1309: break;
 19350                           
 19351                           
 19352                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 19353  0216  01D5               	clrf	printf@c
 19354  0217  0AD5               	incf	printf@c,f
 19355  0218                     L15:	
 19356  0218  3008               	movlw	8
 19357  0219  0655               	xorwf	printf@c,w
 19358  021A  1903               	btfsc	3,2
 19359  021B  2A52               	goto	l6767
 19360                           
 19361                           ;doprnt.c: 1317: if(val < hexpowers[c])
 19362  021C  0855               	movf	printf@c,w
 19363  021D  00C0               	movwf	??_printf
 19364  021E  01C1               	clrf	??_printf+1
 19365  021F  35C0               	lslf	??_printf,f
 19366  0220  0DC1               	rlf	??_printf+1,f
 19367  0221  35C0               	lslf	??_printf,f
 19368  0222  0DC1               	rlf	??_printf+1,f
 19369  0223  3061               	movlw	low (_hexpowers| (0+32768))
 19370  0224  0740               	addwf	??_printf,w
 19371  0225  0084               	movwf	4
 19372  0226  3083               	movlw	high (_hexpowers| (0+32768))
 19373  0227  3D41               	addwfc	??_printf+1,w
 19374  0228  0085               	movwf	5
 19375  0229  3F00               	moviw [0]fsr0
 19376  022A  00C2               	movwf	??_printf+2
 19377  022B  3F01               	moviw [1]fsr0
 19378  022C  00C3               	movwf	??_printf+3
 19379  022D  3F02               	moviw [2]fsr0
 19380  022E  00C4               	movwf	??_printf+4
 19381  022F  3F03               	moviw [3]fsr0
 19382  0230  00C5               	movwf	??_printf+5
 19383  0231  0845               	movf	??_printf+5,w
 19384  0232  0251               	subwf	printf@val+3,w
 19385  0233  1D03               	skipz
 19386  0234  2A3F               	goto	u7805
 19387  0235  0844               	movf	??_printf+4,w
 19388  0236  0250               	subwf	printf@val+2,w
 19389  0237  1D03               	skipz
 19390  0238  2A3F               	goto	u7805
 19391  0239  0843               	movf	??_printf+3,w
 19392  023A  024F               	subwf	printf@val+1,w
 19393  023B  1D03               	skipz
 19394  023C  2A3F               	goto	u7805
 19395  023D  0842               	movf	??_printf+2,w
 19396  023E  024E               	subwf	printf@val,w
 19397  023F                     u7805:	
 19398  023F  1C03               	btfss	3,0
 19399  0240  2A52               	goto	l6767
 19400                           
 19401                           ;doprnt.c: 1318: break;
 19402  0241  3001               	movlw	1
 19403  0242  00C0               	movwf	??_printf
 19404  0243  0840               	movf	??_printf,w
 19405  0244  07D5               	addwf	printf@c,f
 19406  0245  2A18               	goto	L15
 19407  0246                     l6765:	
 19408                           ;doprnt.c: 1336: }
 19409                           
 19410                           ;doprnt.c: 1320: break;
 19411                           
 19412  0246  0852               	movf	printf@flag,w
 19413  0247  39C0               	andlw	192
 19414                           
 19415                           ; Switch size 1, requested type "space"
 19416                           ; Number of cases is 3, Range of values is 0 to 192
 19417                           ; switch strategies available:
 19418                           ; Name         Instructions Cycles
 19419                           ; simple_byte           10     6 (average)
 19420                           ; jumptable            260     6 (fixed)
 19421                           ;	Chosen strategy is simple_byte
 19422  0248  3A00               	xorlw	0	; case 0
 19423  0249  1903               	skipnz
 19424  024A  29E6               	goto	l1287
 19425  024B  3A80               	xorlw	128	; case 128
 19426  024C  1903               	skipnz
 19427  024D  2A16               	goto	l1292
 19428  024E  3A40               	xorlw	64	; case 192
 19429  024F  1903               	skipnz
 19430  0250  29E6               	goto	l1287
 19431  0251  2A52               	goto	l6767
 19432  0252                     l6767:	
 19433                           
 19434                           ;doprnt.c: 1345: if(width && flag & 0x03)
 19435  0252  0853               	movf	printf@width,w
 19436  0253  0454               	iorwf	printf@width+1,w
 19437  0254  1903               	btfsc	3,2
 19438  0255  2A5E               	goto	l1296
 19439  0256  0852               	movf	printf@flag,w
 19440  0257  3903               	andlw	3
 19441  0258  1903               	btfsc	3,2
 19442  0259  2A5E               	goto	l1296
 19443                           
 19444                           ;doprnt.c: 1346: width--;
 19445  025A  30FF               	movlw	255
 19446  025B  07D3               	addwf	printf@width,f
 19447  025C  30FF               	movlw	255
 19448  025D  3DD4               	addwfc	printf@width+1,f
 19449  025E                     l1296:	
 19450                           
 19451                           ;doprnt.c: 1381: if(width > c)
 19452  025E  0855               	movf	printf@c,w
 19453  025F  00C0               	movwf	??_printf
 19454  0260  01C1               	clrf	??_printf+1
 19455  0261  1BC0               	btfsc	??_printf,7
 19456  0262  03C1               	decf	??_printf+1,f
 19457  0263  0841               	movf	??_printf+1,w
 19458  0264  3A80               	xorlw	128
 19459  0265  00C2               	movwf	??_printf+2
 19460  0266  0854               	movf	printf@width+1,w
 19461  0267  3A80               	xorlw	128
 19462  0268  0242               	subwf	??_printf+2,w
 19463  0269  1D03               	skipz
 19464  026A  2A6D               	goto	u7845
 19465  026B  0853               	movf	printf@width,w
 19466  026C  0240               	subwf	??_printf,w
 19467  026D                     u7845:	
 19468  026D  1803               	skipnc
 19469  026E  2A7A               	goto	l6775
 19470                           
 19471                           ;doprnt.c: 1382: width -= c;
 19472  026F  0020               	movlb	0	; select bank0
 19473  0270  0855               	movf	printf@c,w
 19474  0271  00C0               	movwf	??_printf
 19475  0272  01C1               	clrf	??_printf+1
 19476  0273  1BC0               	btfsc	??_printf,7
 19477  0274  03C1               	decf	??_printf+1,f
 19478  0275  0840               	movf	??_printf,w
 19479  0276  02D3               	subwf	printf@width,f
 19480  0277  0841               	movf	??_printf+1,w
 19481  0278  3BD4               	subwfb	printf@width+1,f
 19482  0279  2A7D               	goto	l6777
 19483  027A                     l6775:	
 19484                           
 19485                           ;doprnt.c: 1383: else
 19486                           ;doprnt.c: 1384: width = 0;
 19487  027A  0020               	movlb	0	; select bank0
 19488  027B  01D3               	clrf	printf@width
 19489  027C  01D4               	clrf	printf@width+1
 19490  027D                     l6777:	
 19491                           
 19492                           ;doprnt.c: 1387: if(flag & 0x04) {
 19493  027D  1D52               	btfss	printf@flag,2
 19494  027E  2A96               	goto	l6789
 19495                           
 19496                           ;doprnt.c: 1392: if(flag & 0x03)
 19497  027F  0852               	movf	printf@flag,w
 19498  0280  3903               	andlw	3
 19499  0281  1903               	btfsc	3,2
 19500  0282  2A87               	goto	l6783
 19501                           
 19502                           ;doprnt.c: 1393: (putch('-') );
 19503  0283  302D               	movlw	45
 19504  0284  31A5  25FB  3180   	fcall	_putch
 19505  0287                     l6783:	
 19506                           
 19507                           ;doprnt.c: 1415: if(width)
 19508  0287  0020               	movlb	0	; select bank0
 19509  0288                     L16:	
 19510  0288  0853               	movf	printf@width,w
 19511  0289  0454               	iorwf	printf@width+1,w
 19512  028A  1903               	btfsc	3,2
 19513  028B  2AAF               	goto	l6799
 19514                           
 19515                           ;doprnt.c: 1417: (putch('0') );
 19516                           
 19517                           ;doprnt.c: 1416: do
 19518  028C  3030               	movlw	48
 19519  028D  31A5  25FB  3180   	fcall	_putch
 19520                           
 19521                           ;doprnt.c: 1418: while(--width);
 19522  0290  30FF               	movlw	255
 19523  0291  0020               	movlb	0	; select bank0
 19524  0292  07D3               	addwf	printf@width,f
 19525  0293  30FF               	movlw	255
 19526  0294  3DD4               	addwfc	printf@width+1,f
 19527  0295  2A88               	goto	L16
 19528  0296                     l6789:	
 19529                           ;doprnt.c: 1420: } else
 19530                           
 19531                           
 19532                           ;doprnt.c: 1422: {
 19533                           ;doprnt.c: 1424: if(width
 19534                           ;doprnt.c: 1428: )
 19535  0296  0853               	movf	printf@width,w
 19536  0297  0454               	iorwf	printf@width+1,w
 19537  0298  1903               	btfsc	3,2
 19538  0299  2AA7               	goto	l6795
 19539  029A                     l6791:	
 19540                           ;doprnt.c: 1429: do
 19541                           
 19542                           
 19543                           ;doprnt.c: 1430: (putch(' ') );
 19544  029A  3020               	movlw	32
 19545  029B  31A5  25FB  3180   	fcall	_putch
 19546                           
 19547                           ;doprnt.c: 1431: while(--width);
 19548  029E  30FF               	movlw	255
 19549  029F  0020               	movlb	0	; select bank0
 19550  02A0  07D3               	addwf	printf@width,f
 19551  02A1  30FF               	movlw	255
 19552  02A2  3DD4               	addwfc	printf@width+1,f
 19553  02A3  0853               	movf	printf@width,w
 19554  02A4  0454               	iorwf	printf@width+1,w
 19555  02A5  1D03               	btfss	3,2
 19556  02A6  2A9A               	goto	l6791
 19557  02A7                     l6795:	
 19558                           
 19559                           ;doprnt.c: 1438: if(flag & 0x03)
 19560  02A7  0852               	movf	printf@flag,w
 19561  02A8  3903               	andlw	3
 19562  02A9  1903               	btfsc	3,2
 19563  02AA  2AAF               	goto	l6799
 19564                           
 19565                           ;doprnt.c: 1439: (putch('-') );
 19566  02AB  302D               	movlw	45
 19567  02AC  31A5  25FB  3180   	fcall	_putch
 19568  02AF                     l6799:	
 19569                           
 19570                           ;doprnt.c: 1469: }
 19571                           ;doprnt.c: 1472: prec = c;
 19572  02AF  0020               	movlb	0	; select bank0
 19573  02B0  0855               	movf	printf@c,w
 19574  02B1  00C7               	movwf	printf@prec
 19575  02B2  01C8               	clrf	printf@prec+1
 19576  02B3  1BC7               	btfsc	printf@prec,7
 19577  02B4  03C8               	decf	printf@prec+1,f
 19578                           
 19579                           ;doprnt.c: 1474: while(prec--) {
 19580  02B5  2B21               	goto	l6813
 19581  02B6                     l6801:	
 19582                           ;doprnt.c: 1478: {
 19583                           ;doprnt.c: 1483: case 0x00:
 19584                           
 19585                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
 19586                           
 19587                           
 19588                           ;doprnt.c: 1486: case 0xC0:
 19589                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 19590  02B6  3000               	movlw	0
 19591  02B7  00A9               	movwf	___llmod@divisor+3
 19592  02B8  3000               	movlw	0
 19593  02B9  00A8               	movwf	___llmod@divisor+2
 19594  02BA  3000               	movlw	0
 19595  02BB  00A7               	movwf	___llmod@divisor+1
 19596  02BC  300A               	movlw	10
 19597  02BD  00A6               	movwf	___llmod@divisor
 19598  02BE  0848               	movf	printf@prec+1,w
 19599  02BF  0085               	movwf	5
 19600  02C0  0847               	movf	printf@prec,w
 19601  02C1  0084               	movwf	4
 19602  02C2  3584               	lslf	4,f
 19603  02C3  0D85               	rlf	5,f
 19604  02C4  3584               	lslf	4,f
 19605  02C5  0D85               	rlf	5,f
 19606  02C6  3039               	movlw	low (_dpowers| (0+32768))
 19607  02C7  0784               	addwf	4,f
 19608  02C8  3083               	movlw	high (_dpowers| (0+32768))
 19609  02C9  3D85               	addwfc	5,f
 19610  02CA  3F00               	moviw [0]fsr0
 19611  02CB  00F2               	movwf	___lldiv@divisor
 19612  02CC  3F01               	moviw [1]fsr0
 19613  02CD  00F3               	movwf	___lldiv@divisor+1
 19614  02CE  3F02               	moviw [2]fsr0
 19615  02CF  00F4               	movwf	___lldiv@divisor+2
 19616  02D0  3F03               	moviw [3]fsr0
 19617  02D1  00F5               	movwf	___lldiv@divisor+3
 19618  02D2  0851               	movf	printf@val+3,w
 19619  02D3  00F9               	movwf	___lldiv@dividend+3
 19620  02D4  0850               	movf	printf@val+2,w
 19621  02D5  00F8               	movwf	___lldiv@dividend+2
 19622  02D6  084F               	movf	printf@val+1,w
 19623  02D7  00F7               	movwf	___lldiv@dividend+1
 19624  02D8  084E               	movf	printf@val,w
 19625  02D9  00F6               	movwf	___lldiv@dividend
 19626  02DA  3190  203E  3180   	fcall	___lldiv
 19627  02DD  0875               	movf	?___lldiv+3,w
 19628  02DE  0020               	movlb	0	; select bank0
 19629  02DF  00AD               	movwf	___llmod@dividend+3
 19630  02E0  0874               	movf	?___lldiv+2,w
 19631  02E1  00AC               	movwf	___llmod@dividend+2
 19632  02E2  0873               	movf	?___lldiv+1,w
 19633  02E3  00AB               	movwf	___llmod@dividend+1
 19634  02E4  0872               	movf	?___lldiv,w
 19635  02E5  00AA               	movwf	___llmod@dividend
 19636  02E6  319C  24E5  3180   	fcall	___llmod
 19637  02E9  0020               	movlb	0	; select bank0
 19638  02EA  0826               	movf	?___llmod,w
 19639  02EB  3E30               	addlw	48
 19640  02EC  2B1A               	goto	L13
 19641  02ED                     l6803:	
 19642                           ;doprnt.c: 1497: case 0x80:
 19643                           
 19644                           ;doprnt.c: 1491: break;
 19645                           
 19646                           
 19647                           ;doprnt.c: 1499: {
 19648                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 19649  02ED  0848               	movf	printf@prec+1,w
 19650  02EE  0085               	movwf	5
 19651  02EF  0847               	movf	printf@prec,w
 19652  02F0  0084               	movwf	4
 19653  02F1  3584               	lslf	4,f
 19654  02F2  0D85               	rlf	5,f
 19655  02F3  3584               	lslf	4,f
 19656  02F4  0D85               	rlf	5,f
 19657  02F5  3061               	movlw	low (_hexpowers| (0+32768))
 19658  02F6  0784               	addwf	4,f
 19659  02F7  3083               	movlw	high (_hexpowers| (0+32768))
 19660  02F8  3D85               	addwfc	5,f
 19661  02F9  3F00               	moviw [0]fsr0
 19662  02FA  00F2               	movwf	___lldiv@divisor
 19663  02FB  3F01               	moviw [1]fsr0
 19664  02FC  00F3               	movwf	___lldiv@divisor+1
 19665  02FD  3F02               	moviw [2]fsr0
 19666  02FE  00F4               	movwf	___lldiv@divisor+2
 19667  02FF  3F03               	moviw [3]fsr0
 19668  0300  00F5               	movwf	___lldiv@divisor+3
 19669  0301  0851               	movf	printf@val+3,w
 19670  0302  00F9               	movwf	___lldiv@dividend+3
 19671  0303  0850               	movf	printf@val+2,w
 19672  0304  00F8               	movwf	___lldiv@dividend+2
 19673  0305  084F               	movf	printf@val+1,w
 19674  0306  00F7               	movwf	___lldiv@dividend+1
 19675  0307  084E               	movf	printf@val,w
 19676  0308  00F6               	movwf	___lldiv@dividend
 19677  0309  3190  203E  3180   	fcall	___lldiv
 19678  030C  0872               	movf	?___lldiv,w
 19679  030D  390F               	andlw	15
 19680  030E  0020               	movlb	0	; select bank0
 19681  030F  00C0               	movwf	??_printf
 19682  0310  0840               	movf	??_printf,w
 19683  0311  00C6               	movwf	printf@idx
 19684                           
 19685                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 19686  0312  0846               	movf	printf@idx,w
 19687  0313  3E7F               	addlw	low (STR_60| (0+32768))
 19688  0314  0084               	movwf	4
 19689  0315  3084               	movlw	high (STR_60| (0+32768))
 19690  0316  1803               	skipnc
 19691  0317  3E01               	addlw	1
 19692  0318  0085               	movwf	5
 19693  0319  0800               	movf	0,w	;code access
 19694  031A                     L13:	
 19695  031A  00C0               	movwf	??_printf
 19696  031B  0840               	movf	??_printf,w
 19697  031C  00D5               	movwf	printf@c
 19698  031D                     l6811:	
 19699                           ;doprnt.c: 1523: }
 19700                           
 19701                           ;doprnt.c: 1508: }
 19702                           ;doprnt.c: 1510: break;
 19703                           
 19704                           
 19705                           ;doprnt.c: 1524: (putch(c) );
 19706  031D  0855               	movf	printf@c,w
 19707  031E  31A5  25FB  3180   	fcall	_putch
 19708  0321                     l6813:	
 19709  0321  30FF               	movlw	255
 19710  0322  0020               	movlb	0	; select bank0
 19711  0323  07C7               	addwf	printf@prec,f
 19712  0324  30FF               	movlw	255
 19713  0325  3DC8               	addwfc	printf@prec+1,f
 19714  0326  0A47               	incf	printf@prec,w
 19715  0327  1903               	btfsc	3,2
 19716  0328  0A48               	incf	printf@prec+1,w
 19717  0329  1903               	btfsc	3,2
 19718  032A  289B               	goto	l6815
 19719  032B  0852               	movf	printf@flag,w
 19720  032C  39C0               	andlw	192
 19721                           
 19722                           ; Switch size 1, requested type "space"
 19723                           ; Number of cases is 3, Range of values is 0 to 192
 19724                           ; switch strategies available:
 19725                           ; Name         Instructions Cycles
 19726                           ; simple_byte           10     6 (average)
 19727                           ; jumptable            260     6 (fixed)
 19728                           ;	Chosen strategy is simple_byte
 19729  032D  3A00               	xorlw	0	; case 0
 19730  032E  1903               	skipnz
 19731  032F  2AB6               	goto	l6801
 19732  0330  3A80               	xorlw	128	; case 128
 19733  0331  1903               	skipnz
 19734  0332  2AED               	goto	l6803
 19735  0333  3A40               	xorlw	64	; case 192
 19736  0334  1903               	skipnz
 19737  0335  2AB6               	goto	l6801
 19738  0336  2B1D               	goto	l6811
 19739  0337  2B1D               	goto	l6811
 19740  0338                     l1318:	
 19741                           ;doprnt.c: 1540: return 0;
 19742                           ;	Return value of _printf is never used
 19743                           
 19744                           ;doprnt.c: 1525: }
 19745                           ;doprnt.c: 1533: }
 19746                           ;doprnt.c: 1535: alldone:
 19747                           
 19748  0338  0008               	return
 19749  0339                     __end_of_printf:	
 19750                           
 19751                           	psect	text65
 19752  25FB                     __ptext65:	
 19753 ;; *************** function _putch *****************
 19754 ;; Defined at:
 19755 ;;		line 162 in file "mcc_generated_files/eusart.c"
 19756 ;; Parameters:    Size  Location     Type
 19757 ;;  txData          1    wreg     unsigned char 
 19758 ;; Auto vars:     Size  Location     Type
 19759 ;;  txData          1    4[COMMON] unsigned char 
 19760 ;; Return value:  Size  Location     Type
 19761 ;;		None               void
 19762 ;; Registers used:
 19763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19764 ;; Tracked objects:
 19765 ;;		On entry : 0/0
 19766 ;;		On exit  : 0/0
 19767 ;;		Unchanged: 0/0
 19768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19773 ;;Total ram usage:        1 bytes
 19774 ;; Hardware stack levels used:    1
 19775 ;; Hardware stack levels required when called:    3
 19776 ;; This function calls:
 19777 ;;		_EUSART_Write
 19778 ;; This function is called by:
 19779 ;;		_handleUARTInput
 19780 ;;		_printf
 19781 ;; This function uses a non-reentrant model
 19782 ;;
 19783                           
 19784                           
 19785                           ;psect for function _putch
 19786  25FB                     _putch:	
 19787                           
 19788                           ;incstack = 0
 19789                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19790                           ;putch@txData stored from wreg
 19791  25FB  00F4               	movwf	putch@txData
 19792                           
 19793                           ;eusart.c: 164: EUSART_Write(txData);
 19794  25FC  0874               	movf	putch@txData,w
 19795  25FD  3199  212F         	fcall	_EUSART_Write
 19796  25FF  0008               	return
 19797  2600                     __end_of_putch:	
 19798                           
 19799                           	psect	text66
 19800  192F                     __ptext66:	
 19801 ;; *************** function _EUSART_Write *****************
 19802 ;; Defined at:
 19803 ;;		line 134 in file "mcc_generated_files/eusart.c"
 19804 ;; Parameters:    Size  Location     Type
 19805 ;;  txData          1    wreg     unsigned char 
 19806 ;; Auto vars:     Size  Location     Type
 19807 ;;  txData          1    3[COMMON] unsigned char 
 19808 ;; Return value:  Size  Location     Type
 19809 ;;		None               void
 19810 ;; Registers used:
 19811 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19812 ;; Tracked objects:
 19813 ;;		On entry : 0/0
 19814 ;;		On exit  : 0/0
 19815 ;;		Unchanged: 0/0
 19816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19819 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19821 ;;Total ram usage:        2 bytes
 19822 ;; Hardware stack levels used:    1
 19823 ;; Hardware stack levels required when called:    2
 19824 ;; This function calls:
 19825 ;;		Nothing
 19826 ;; This function is called by:
 19827 ;;		_putch
 19828 ;; This function uses a non-reentrant model
 19829 ;;
 19830                           
 19831                           
 19832                           ;psect for function _EUSART_Write
 19833  192F                     _EUSART_Write:	
 19834                           
 19835                           ;incstack = 0
 19836                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 19837                           ;EUSART_Write@txData stored from wreg
 19838  192F  00F3               	movwf	EUSART_Write@txData
 19839  1930                     l6463:	
 19840                           ;eusart.c: 137: {
 19841                           
 19842                           ;eusart.c: 136: while (0 == eusartTxBufferRemaining)
 19843                           
 19844  1930  0022               	movlb	2	; select bank2
 19845  1931  086E               	movf	_eusartTxBufferRemaining^(0+256),w	;volatile
 19846  1932  1903               	btfsc	3,2
 19847  1933  2930               	goto	l6463
 19848                           
 19849                           ;eusart.c: 138: }
 19850                           ;eusart.c: 140: if (0 == PIE1bits.TXIE)
 19851  1934  0021               	movlb	1	; select bank1
 19852  1935  1A11               	btfsc	17,4	;volatile
 19853  1936  293B               	goto	l526
 19854                           
 19855                           ;eusart.c: 141: {
 19856                           ;eusart.c: 142: TX1REG = txData;
 19857  1937  0873               	movf	EUSART_Write@txData,w
 19858  1938  0023               	movlb	3	; select bank3
 19859  1939  009A               	movwf	26	;volatile
 19860                           
 19861                           ;eusart.c: 143: }
 19862  193A  2950               	goto	l6477
 19863  193B                     l526:	
 19864                           
 19865                           ;eusart.c: 144: else
 19866                           ;eusart.c: 145: {
 19867                           ;eusart.c: 146: PIE1bits.TXIE = 0;
 19868  193B  1211               	bcf	17,4	;volatile
 19869                           
 19870                           ;eusart.c: 147: eusartTxBuffer[eusartTxHead++] = txData;
 19871  193C  0873               	movf	EUSART_Write@txData,w
 19872  193D  00F2               	movwf	??_EUSART_Write
 19873  193E  0022               	movlb	2	; select bank2
 19874  193F  0850               	movf	_eusartTxHead^(0+256),w
 19875  1940  3E30               	addlw	(low (_eusartTxBuffer| (0+512)))& (0+255)
 19876  1941  0086               	movwf	6
 19877  1942  3002               	movlw	2	; select bank4/5
 19878  1943  0087               	movwf	7
 19879  1944  0872               	movf	??_EUSART_Write,w
 19880  1945  0081               	movwf	1
 19881  1946  3001               	movlw	1
 19882  1947  00F2               	movwf	??_EUSART_Write
 19883  1948  0872               	movf	??_EUSART_Write,w
 19884  1949  07D0               	addwf	_eusartTxHead^(0+256),f
 19885                           
 19886                           ;eusart.c: 148: if (sizeof (eusartTxBuffer) <= eusartTxHead)
 19887  194A  3010               	movlw	16
 19888  194B  0250               	subwf	_eusartTxHead^(0+256),w
 19889  194C  1803               	btfsc	3,0
 19890                           
 19891                           ;eusart.c: 149: {
 19892                           ;eusart.c: 150: eusartTxHead = 0;
 19893  194D  01D0               	clrf	_eusartTxHead^(0+256)
 19894                           
 19895                           ;eusart.c: 151: }
 19896                           ;eusart.c: 152: eusartTxBufferRemaining--;
 19897  194E  3001               	movlw	1
 19898  194F  02EE               	subwf	_eusartTxBufferRemaining^(0+256),f	;volatile
 19899  1950                     l6477:	
 19900                           
 19901                           ;eusart.c: 153: }
 19902                           ;eusart.c: 154: PIE1bits.TXIE = 1;
 19903  1950  0021               	movlb	1	; select bank1
 19904  1951  1611               	bsf	17,4	;volatile
 19905  1952  0008               	return
 19906  1953                     __end_of_EUSART_Write:	
 19907                           
 19908                           	psect	text67
 19909  26A7                     __ptext67:	
 19910 ;; *************** function _isdigit *****************
 19911 ;; Defined at:
 19912 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/isdigit.c"
 19913 ;; Parameters:    Size  Location     Type
 19914 ;;  c               1    wreg     unsigned char 
 19915 ;; Auto vars:     Size  Location     Type
 19916 ;;  c               1    3[COMMON] unsigned char 
 19917 ;; Return value:  Size  Location     Type
 19918 ;;		None               void
 19919 ;; Registers used:
 19920 ;;		wreg, status,2, status,0
 19921 ;; Tracked objects:
 19922 ;;		On entry : 0/0
 19923 ;;		On exit  : 0/0
 19924 ;;		Unchanged: 0/0
 19925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19930 ;;Total ram usage:        2 bytes
 19931 ;; Hardware stack levels used:    1
 19932 ;; Hardware stack levels required when called:    2
 19933 ;; This function calls:
 19934 ;;		Nothing
 19935 ;; This function is called by:
 19936 ;;		_printf
 19937 ;;		_strtol
 19938 ;; This function uses a non-reentrant model
 19939 ;;
 19940                           
 19941                           
 19942                           ;psect for function _isdigit
 19943  26A7                     _isdigit:	
 19944                           
 19945                           ;incstack = 0
 19946                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 19947                           ;isdigit@c stored from wreg
 19948  26A7  00F3               	movwf	isdigit@c
 19949  26A8  01F2               	clrf	_isdigit$1778
 19950  26A9  303A               	movlw	58
 19951  26AA  0273               	subwf	isdigit@c,w
 19952  26AB  1803               	skipnc
 19953  26AC  2EB3               	goto	l6531
 19954  26AD  3030               	movlw	48
 19955  26AE  0273               	subwf	isdigit@c,w
 19956  26AF  1C03               	skipc
 19957  26B0  2EB3               	goto	l6531
 19958  26B1  01F2               	clrf	_isdigit$1778
 19959  26B2  0AF2               	incf	_isdigit$1778,f
 19960  26B3                     l6531:	
 19961  26B3  0C72               	rrf	_isdigit$1778,w
 19962  26B4  0008               	return
 19963  26B5                     __end_of_isdigit:	
 19964                           
 19965                           	psect	text68
 19966  1CE5                     __ptext68:	
 19967 ;; *************** function ___llmod *****************
 19968 ;; Defined at:
 19969 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/llmod.c"
 19970 ;; Parameters:    Size  Location     Type
 19971 ;;  divisor         4    6[BANK0 ] unsigned long 
 19972 ;;  dividend        4   10[BANK0 ] unsigned long 
 19973 ;; Auto vars:     Size  Location     Type
 19974 ;;  counter         1   15[BANK0 ] unsigned char 
 19975 ;; Return value:  Size  Location     Type
 19976 ;;                  4    6[BANK0 ] unsigned long 
 19977 ;; Registers used:
 19978 ;;		wreg, status,2, status,0
 19979 ;; Tracked objects:
 19980 ;;		On entry : 0/0
 19981 ;;		On exit  : 0/0
 19982 ;;		Unchanged: 0/0
 19983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19984 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19986 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19987 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19988 ;;Total ram usage:       10 bytes
 19989 ;; Hardware stack levels used:    1
 19990 ;; Hardware stack levels required when called:    2
 19991 ;; This function calls:
 19992 ;;		Nothing
 19993 ;; This function is called by:
 19994 ;;		_printf
 19995 ;; This function uses a non-reentrant model
 19996 ;;
 19997                           
 19998                           
 19999                           ;psect for function ___llmod
 20000  1CE5                     ___llmod:	
 20001                           
 20002                           ;incstack = 0
 20003                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 20004  1CE5  0020               	movlb	0	; select bank0
 20005  1CE6  0829               	movf	___llmod@divisor+3,w
 20006  1CE7  0428               	iorwf	___llmod@divisor+2,w
 20007  1CE8  0427               	iorwf	___llmod@divisor+1,w
 20008  1CE9  0426               	iorwf	___llmod@divisor,w
 20009  1CEA  1903               	skipnz
 20010  1CEB  2D1F               	goto	l6589
 20011  1CEC  01AF               	clrf	___llmod@counter
 20012  1CED  0AAF               	incf	___llmod@counter,f
 20013  1CEE                     l6579:	
 20014  1CEE  1BA9               	btfsc	___llmod@divisor+3,7
 20015  1CEF  2CFC               	goto	l6581
 20016  1CF0  3001               	movlw	1
 20017  1CF1                     u7485:	
 20018  1CF1  35A6               	lslf	___llmod@divisor,f
 20019  1CF2  0DA7               	rlf	___llmod@divisor+1,f
 20020  1CF3  0DA8               	rlf	___llmod@divisor+2,f
 20021  1CF4  0DA9               	rlf	___llmod@divisor+3,f
 20022  1CF5  0B89               	decfsz	9,f
 20023  1CF6  2CF1               	goto	u7485
 20024  1CF7  3001               	movlw	1
 20025  1CF8  00AE               	movwf	??___llmod
 20026  1CF9  082E               	movf	??___llmod,w
 20027  1CFA  07AF               	addwf	___llmod@counter,f
 20028  1CFB  2CEE               	goto	l6579
 20029  1CFC                     l6581:	
 20030  1CFC  0829               	movf	___llmod@divisor+3,w
 20031  1CFD  022D               	subwf	___llmod@dividend+3,w
 20032  1CFE  1D03               	skipz
 20033  1CFF  2D0A               	goto	u7505
 20034  1D00  0828               	movf	___llmod@divisor+2,w
 20035  1D01  022C               	subwf	___llmod@dividend+2,w
 20036  1D02  1D03               	skipz
 20037  1D03  2D0A               	goto	u7505
 20038  1D04  0827               	movf	___llmod@divisor+1,w
 20039  1D05  022B               	subwf	___llmod@dividend+1,w
 20040  1D06  1D03               	skipz
 20041  1D07  2D0A               	goto	u7505
 20042  1D08  0826               	movf	___llmod@divisor,w
 20043  1D09  022A               	subwf	___llmod@dividend,w
 20044  1D0A                     u7505:	
 20045  1D0A  1C03               	skipc
 20046  1D0B  2D14               	goto	l6585
 20047  1D0C  0826               	movf	___llmod@divisor,w
 20048  1D0D  02AA               	subwf	___llmod@dividend,f
 20049  1D0E  0827               	movf	___llmod@divisor+1,w
 20050  1D0F  3BAB               	subwfb	___llmod@dividend+1,f
 20051  1D10  0828               	movf	___llmod@divisor+2,w
 20052  1D11  3BAC               	subwfb	___llmod@dividend+2,f
 20053  1D12  0829               	movf	___llmod@divisor+3,w
 20054  1D13  3BAD               	subwfb	___llmod@dividend+3,f
 20055  1D14                     l6585:	
 20056  1D14  3001               	movlw	1
 20057  1D15                     u7515:	
 20058  1D15  36A9               	lsrf	___llmod@divisor+3,f
 20059  1D16  0CA8               	rrf	___llmod@divisor+2,f
 20060  1D17  0CA7               	rrf	___llmod@divisor+1,f
 20061  1D18  0CA6               	rrf	___llmod@divisor,f
 20062  1D19  0B89               	decfsz	9,f
 20063  1D1A  2D15               	goto	u7515
 20064  1D1B  3001               	movlw	1
 20065  1D1C  02AF               	subwf	___llmod@counter,f
 20066  1D1D  1D03               	btfss	3,2
 20067  1D1E  2CFC               	goto	l6581
 20068  1D1F                     l6589:	
 20069  1D1F  082D               	movf	___llmod@dividend+3,w
 20070  1D20  00A9               	movwf	?___llmod+3
 20071  1D21  082C               	movf	___llmod@dividend+2,w
 20072  1D22  00A8               	movwf	?___llmod+2
 20073  1D23  082B               	movf	___llmod@dividend+1,w
 20074  1D24  00A7               	movwf	?___llmod+1
 20075  1D25  082A               	movf	___llmod@dividend,w
 20076  1D26  00A6               	movwf	?___llmod
 20077  1D27  0008               	return
 20078  1D28                     __end_of___llmod:	
 20079                           
 20080                           	psect	text69
 20081  103E                     __ptext69:	
 20082 ;; *************** function ___lldiv *****************
 20083 ;; Defined at:
 20084 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/lldiv.c"
 20085 ;; Parameters:    Size  Location     Type
 20086 ;;  divisor         4    2[COMMON] unsigned long 
 20087 ;;  dividend        4    6[COMMON] unsigned long 
 20088 ;; Auto vars:     Size  Location     Type
 20089 ;;  quotient        4    1[BANK0 ] unsigned long 
 20090 ;;  counter         1    5[BANK0 ] unsigned char 
 20091 ;; Return value:  Size  Location     Type
 20092 ;;                  4    2[COMMON] unsigned long 
 20093 ;; Registers used:
 20094 ;;		wreg, status,2, status,0
 20095 ;; Tracked objects:
 20096 ;;		On entry : 0/0
 20097 ;;		On exit  : 0/0
 20098 ;;		Unchanged: 0/0
 20099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20100 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20101 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20102 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20103 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20104 ;;Total ram usage:       14 bytes
 20105 ;; Hardware stack levels used:    1
 20106 ;; Hardware stack levels required when called:    2
 20107 ;; This function calls:
 20108 ;;		Nothing
 20109 ;; This function is called by:
 20110 ;;		_printf
 20111 ;;		_SysTime_Diff
 20112 ;; This function uses a non-reentrant model
 20113 ;;
 20114                           
 20115                           
 20116                           ;psect for function ___lldiv
 20117  103E                     ___lldiv:	
 20118                           
 20119                           ;incstack = 0
 20120                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 20121  103E  3000               	movlw	0
 20122  103F  0020               	movlb	0	; select bank0
 20123  1040  00A4               	movwf	___lldiv@quotient+3
 20124  1041  3000               	movlw	0
 20125  1042  00A3               	movwf	___lldiv@quotient+2
 20126  1043  3000               	movlw	0
 20127  1044  00A2               	movwf	___lldiv@quotient+1
 20128  1045  3000               	movlw	0
 20129  1046  00A1               	movwf	___lldiv@quotient
 20130  1047  0875               	movf	___lldiv@divisor+3,w
 20131  1048  0474               	iorwf	___lldiv@divisor+2,w
 20132  1049  0473               	iorwf	___lldiv@divisor+1,w
 20133  104A  0472               	iorwf	___lldiv@divisor,w
 20134  104B  1903               	skipnz
 20135  104C  2888               	goto	l6569
 20136  104D  01A5               	clrf	___lldiv@counter
 20137  104E  0AA5               	incf	___lldiv@counter,f
 20138  104F                     l6555:	
 20139  104F  1BF5               	btfsc	___lldiv@divisor+3,7
 20140  1050  285D               	goto	l6557
 20141  1051  3001               	movlw	1
 20142  1052                     u7415:	
 20143  1052  35F2               	lslf	___lldiv@divisor,f
 20144  1053  0DF3               	rlf	___lldiv@divisor+1,f
 20145  1054  0DF4               	rlf	___lldiv@divisor+2,f
 20146  1055  0DF5               	rlf	___lldiv@divisor+3,f
 20147  1056  0B89               	decfsz	9,f
 20148  1057  2852               	goto	u7415
 20149  1058  3001               	movlw	1
 20150  1059  00A0               	movwf	??___lldiv
 20151  105A  0820               	movf	??___lldiv,w
 20152  105B  07A5               	addwf	___lldiv@counter,f
 20153  105C  284F               	goto	l6555
 20154  105D                     l6557:	
 20155  105D  3001               	movlw	1
 20156  105E                     u7435:	
 20157  105E  35A1               	lslf	___lldiv@quotient,f
 20158  105F  0DA2               	rlf	___lldiv@quotient+1,f
 20159  1060  0DA3               	rlf	___lldiv@quotient+2,f
 20160  1061  0DA4               	rlf	___lldiv@quotient+3,f
 20161  1062  0B89               	decfsz	9,f
 20162  1063  285E               	goto	u7435
 20163  1064  0875               	movf	___lldiv@divisor+3,w
 20164  1065  0279               	subwf	___lldiv@dividend+3,w
 20165  1066  1D03               	skipz
 20166  1067  2872               	goto	u7445
 20167  1068  0874               	movf	___lldiv@divisor+2,w
 20168  1069  0278               	subwf	___lldiv@dividend+2,w
 20169  106A  1D03               	skipz
 20170  106B  2872               	goto	u7445
 20171  106C  0873               	movf	___lldiv@divisor+1,w
 20172  106D  0277               	subwf	___lldiv@dividend+1,w
 20173  106E  1D03               	skipz
 20174  106F  2872               	goto	u7445
 20175  1070  0872               	movf	___lldiv@divisor,w
 20176  1071  0276               	subwf	___lldiv@dividend,w
 20177  1072                     u7445:	
 20178  1072  1C03               	skipc
 20179  1073  287D               	goto	l6565
 20180  1074  0872               	movf	___lldiv@divisor,w
 20181  1075  02F6               	subwf	___lldiv@dividend,f
 20182  1076  0873               	movf	___lldiv@divisor+1,w
 20183  1077  3BF7               	subwfb	___lldiv@dividend+1,f
 20184  1078  0874               	movf	___lldiv@divisor+2,w
 20185  1079  3BF8               	subwfb	___lldiv@dividend+2,f
 20186  107A  0875               	movf	___lldiv@divisor+3,w
 20187  107B  3BF9               	subwfb	___lldiv@dividend+3,f
 20188  107C  1421               	bsf	___lldiv@quotient,0
 20189  107D                     l6565:	
 20190  107D  3001               	movlw	1
 20191  107E                     u7455:	
 20192  107E  36F5               	lsrf	___lldiv@divisor+3,f
 20193  107F  0CF4               	rrf	___lldiv@divisor+2,f
 20194  1080  0CF3               	rrf	___lldiv@divisor+1,f
 20195  1081  0CF2               	rrf	___lldiv@divisor,f
 20196  1082  0B89               	decfsz	9,f
 20197  1083  287E               	goto	u7455
 20198  1084  3001               	movlw	1
 20199  1085  02A5               	subwf	___lldiv@counter,f
 20200  1086  1D03               	btfss	3,2
 20201  1087  285D               	goto	l6557
 20202  1088                     l6569:	
 20203  1088  0824               	movf	___lldiv@quotient+3,w
 20204  1089  00F5               	movwf	?___lldiv+3
 20205  108A  0823               	movf	___lldiv@quotient+2,w
 20206  108B  00F4               	movwf	?___lldiv+2
 20207  108C  0822               	movf	___lldiv@quotient+1,w
 20208  108D  00F3               	movwf	?___lldiv+1
 20209  108E  0821               	movf	___lldiv@quotient,w
 20210  108F  00F2               	movwf	?___lldiv
 20211  1090  0008               	return
 20212  1091                     __end_of___lldiv:	
 20213                           
 20214                           	psect	text70
 20215  1091                     __ptext70:	
 20216 ;; *************** function __EEPROM_25AA040A_WriteEnable *****************
 20217 ;; Defined at:
 20218 ;;		line 35 in file "25AA040A.c"
 20219 ;; Parameters:    Size  Location     Type
 20220 ;;		None
 20221 ;; Auto vars:     Size  Location     Type
 20222 ;;  curTime         6   41[BANK0 ] volatile struct _SysTime
 20223 ;;  start           6   35[BANK0 ] volatile struct _SysTime
 20224 ;;  statusOk        1   34[BANK0 ] unsigned char 
 20225 ;;  statusReg       1   33[BANK0 ] unsigned char 
 20226 ;; Return value:  Size  Location     Type
 20227 ;;                  1    wreg      unsigned char 
 20228 ;; Registers used:
 20229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20230 ;; Tracked objects:
 20231 ;;		On entry : 0/0
 20232 ;;		On exit  : 0/0
 20233 ;;		Unchanged: 0/0
 20234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20236 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20237 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20238 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20239 ;;Total ram usage:       15 bytes
 20240 ;; Hardware stack levels used:    1
 20241 ;; Hardware stack levels required when called:    4
 20242 ;; This function calls:
 20243 ;;		_SPI_Exchange8bit
 20244 ;;		_SysTime_DiffMs
 20245 ;;		_SysTime_GetNow
 20246 ;;		__EEPROM_25AA040A_ReadStatus
 20247 ;; This function is called by:
 20248 ;;		_EEPROM_25AA040A_WriteByte
 20249 ;;		_EEPROM_25AA040A_WriteBuffer
 20250 ;; This function uses a non-reentrant model
 20251 ;;
 20252                           
 20253                           
 20254                           ;psect for function __EEPROM_25AA040A_WriteEnable
 20255  1091                     __EEPROM_25AA040A_WriteEnable:	
 20256                           
 20257                           ;25AA040A.c: 37: bool statusOk = 0;
 20258                           
 20259                           ;incstack = 0
 20260                           ; Regs used in __EEPROM_25AA040A_WriteEnable: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 20261  1091  0020               	movlb	0	; select bank0
 20262  1092  01C2               	clrf	__EEPROM_25AA040A_WriteEnable@statusOk
 20263                           
 20264                           ;25AA040A.c: 38: uint8_t statusReg = 0;
 20265  1093  01C1               	clrf	__EEPROM_25AA040A_WriteEnable@statusReg
 20266                           
 20267                           ;25AA040A.c: 39: do { LATC1 = 0; } while(0);
 20268  1094  0022               	movlb	2	; select bank2
 20269  1095  108E               	bcf	14,1	;volatile
 20270                           
 20271                           ;25AA040A.c: 40: SPI_Exchange8bit(EEPROM_WREN);
 20272  1096  3006               	movlw	6
 20273  1097  31A6  2628  3190   	fcall	_SPI_Exchange8bit
 20274                           
 20275                           ;25AA040A.c: 41: do { LATC1 = 1; } while(0);
 20276  109A  0022               	movlb	2	; select bank2
 20277  109B  148E               	bsf	14,1	;volatile
 20278                           
 20279                           ;25AA040A.c: 42: SysTime start = SysTime_GetNow();
 20280  109C  3198  20E8  3190   	fcall	_SysTime_GetNow
 20281  109F  0020               	movlb	0	; select bank0
 20282  10A0  3020               	movlw	low ?_SysTime_GetNow
 20283  10A1  0086               	movwf	6
 20284  10A2  3000               	movlw	high ?_SysTime_GetNow
 20285  10A3  0087               	movwf	7
 20286  10A4  3043               	movlw	low __EEPROM_25AA040A_WriteEnable@start
 20287  10A5  0084               	movwf	4
 20288  10A6  3000               	movlw	high __EEPROM_25AA040A_WriteEnable@start
 20289  10A7  0085               	movwf	5
 20290  10A8  3006               	movlw	6
 20291  10A9  00C0               	movwf	??__EEPROM_25AA040A_WriteEnable
 20292  10AA                     u7580:	
 20293  10AA  0016               	moviw fsr1++
 20294  10AB  001A               	movwi fsr0++
 20295  10AC  0BC0               	decfsz	??__EEPROM_25AA040A_WriteEnable,f
 20296  10AD  28AA               	goto	u7580
 20297  10AE                     l6641:	
 20298                           ;25AA040A.c: 43: SysTime curTime;
 20299                           ;25AA040A.c: 44: do
 20300                           
 20301                           
 20302                           ;25AA040A.c: 45: {
 20303                           ;25AA040A.c: 46: statusReg = _EEPROM_25AA040A_ReadStatus();
 20304  10AE  31A6  26D2  3190   	fcall	__EEPROM_25AA040A_ReadStatus
 20305  10B1  0020               	movlb	0	; select bank0
 20306  10B2  00C0               	movwf	??__EEPROM_25AA040A_WriteEnable
 20307  10B3  0840               	movf	??__EEPROM_25AA040A_WriteEnable,w
 20308  10B4  00C1               	movwf	__EEPROM_25AA040A_WriteEnable@statusReg
 20309                           
 20310                           ;25AA040A.c: 47: statusOk = !!(statusReg & 0x02);
 20311  10B5  1CC1               	btfss	__EEPROM_25AA040A_WriteEnable@statusReg,1
 20312  10B6  28B9               	goto	u7590
 20313  10B7  3001               	movlw	1
 20314  10B8  28BA               	goto	u7600
 20315  10B9                     u7590:	
 20316  10B9  3000               	movlw	0
 20317  10BA                     u7600:	
 20318  10BA  00C0               	movwf	??__EEPROM_25AA040A_WriteEnable
 20319  10BB  0840               	movf	??__EEPROM_25AA040A_WriteEnable,w
 20320  10BC  00C2               	movwf	__EEPROM_25AA040A_WriteEnable@statusOk
 20321                           
 20322                           ;25AA040A.c: 48: curTime = SysTime_GetNow();
 20323  10BD  3198  20E8  3190   	fcall	_SysTime_GetNow
 20324  10C0  0020               	movlb	0	; select bank0
 20325  10C1  3020               	movlw	low ?_SysTime_GetNow
 20326  10C2  0086               	movwf	6
 20327  10C3  3000               	movlw	high ?_SysTime_GetNow
 20328  10C4  0087               	movwf	7
 20329  10C5  3049               	movlw	low __EEPROM_25AA040A_WriteEnable@curTime
 20330  10C6  0084               	movwf	4
 20331  10C7  3000               	movlw	high __EEPROM_25AA040A_WriteEnable@curTime
 20332  10C8  0085               	movwf	5
 20333  10C9  3006               	movlw	6
 20334  10CA  00C0               	movwf	??__EEPROM_25AA040A_WriteEnable
 20335  10CB                     u7610:	
 20336  10CB  0016               	moviw fsr1++
 20337  10CC  001A               	movwi fsr0++
 20338  10CD  0BC0               	decfsz	??__EEPROM_25AA040A_WriteEnable,f
 20339  10CE  28CB               	goto	u7610
 20340                           
 20341                           ;25AA040A.c: 49: }
 20342                           ;25AA040A.c: 50: while (!statusOk && SysTime_DiffMs(&start, &curTime) < 100);
 20343  10CF  0842               	movf	__EEPROM_25AA040A_WriteEnable@statusOk,w
 20344  10D0  1D03               	btfss	3,2
 20345  10D1  28EB               	goto	l6651
 20346  10D2  3043               	movlw	low __EEPROM_25AA040A_WriteEnable@start
 20347  10D3  00A4               	movwf	SysTime_DiffMs@firstTime
 20348  10D4  3000               	movlw	high __EEPROM_25AA040A_WriteEnable@start
 20349  10D5  00A5               	movwf	SysTime_DiffMs@firstTime+1
 20350  10D6  3049               	movlw	(low (__EEPROM_25AA040A_WriteEnable@curTime| 0))& (0+255)
 20351  10D7  00C0               	movwf	??__EEPROM_25AA040A_WriteEnable
 20352  10D8  0840               	movf	??__EEPROM_25AA040A_WriteEnable,w
 20353  10D9  00A6               	movwf	SysTime_DiffMs@secondTime
 20354  10DA  3194  242D  3190   	fcall	_SysTime_DiffMs
 20355  10DD  0020               	movlb	0	; select bank0
 20356  10DE  0827               	movf	?_SysTime_DiffMs+3,w
 20357  10DF  1D03               	btfss	3,2
 20358  10E0  28EB               	goto	l6651
 20359  10E1  0826               	movf	?_SysTime_DiffMs+2,w
 20360  10E2  1D03               	btfss	3,2
 20361  10E3  28EB               	goto	l6651
 20362  10E4  0825               	movf	?_SysTime_DiffMs+1,w
 20363  10E5  1D03               	btfss	3,2
 20364  10E6  28EB               	goto	l6651
 20365  10E7  3064               	movlw	100
 20366  10E8  0224               	subwf	?_SysTime_DiffMs,w
 20367  10E9  1C03               	btfss	3,0
 20368  10EA  28AE               	goto	l6641
 20369  10EB                     l6651:	
 20370                           
 20371                           ;25AA040A.c: 52: return statusOk;
 20372  10EB  0842               	movf	__EEPROM_25AA040A_WriteEnable@statusOk,w
 20373  10EC  0008               	return
 20374  10ED                     __end_of__EEPROM_25AA040A_WriteEnable:	
 20375                           
 20376                           	psect	text71
 20377  26D2                     __ptext71:	
 20378 ;; *************** function __EEPROM_25AA040A_ReadStatus *****************
 20379 ;; Defined at:
 20380 ;;		line 22 in file "25AA040A.c"
 20381 ;; Parameters:    Size  Location     Type
 20382 ;;		None
 20383 ;; Auto vars:     Size  Location     Type
 20384 ;;  regVal          1    4[COMMON] unsigned char 
 20385 ;; Return value:  Size  Location     Type
 20386 ;;                  1    wreg      unsigned char 
 20387 ;; Registers used:
 20388 ;;		wreg, status,2, status,0, pclath, cstack
 20389 ;; Tracked objects:
 20390 ;;		On entry : 0/0
 20391 ;;		On exit  : 0/0
 20392 ;;		Unchanged: 0/0
 20393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20395 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20396 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20398 ;;Total ram usage:        2 bytes
 20399 ;; Hardware stack levels used:    1
 20400 ;; Hardware stack levels required when called:    3
 20401 ;; This function calls:
 20402 ;;		_SPI_Exchange8bit
 20403 ;; This function is called by:
 20404 ;;		__EEPROM_25AA040A_WriteEnable
 20405 ;; This function uses a non-reentrant model
 20406 ;;
 20407                           
 20408                           
 20409                           ;psect for function __EEPROM_25AA040A_ReadStatus
 20410  26D2                     __EEPROM_25AA040A_ReadStatus:	
 20411                           
 20412                           ;incstack = 0
 20413                           ; Regs used in __EEPROM_25AA040A_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
 20414                           ;25AA040A.c: 24: uint8_t regVal;
 20415                           ;25AA040A.c: 25: do { LATC1 = 0; } while(0);
 20416  26D2  0022               	movlb	2	; select bank2
 20417  26D3  108E               	bcf	14,1	;volatile
 20418                           
 20419                           ;25AA040A.c: 26: SPI_Exchange8bit(EEPROM_RDSR);
 20420  26D4  3005               	movlw	5
 20421  26D5  31A6  2628  31A6   	fcall	_SPI_Exchange8bit
 20422                           
 20423                           ;25AA040A.c: 27: regVal = SPI_Exchange8bit(0);
 20424  26D8  3000               	movlw	0
 20425  26D9  31A6  2628         	fcall	_SPI_Exchange8bit
 20426  26DB  00F3               	movwf	??__EEPROM_25AA040A_ReadStatus
 20427  26DC  0873               	movf	??__EEPROM_25AA040A_ReadStatus,w
 20428  26DD  00F4               	movwf	__EEPROM_25AA040A_ReadStatus@regVal
 20429                           
 20430                           ;25AA040A.c: 28: do { LATC1 = 1; } while(0);
 20431  26DE  0022               	movlb	2	; select bank2
 20432  26DF  148E               	bsf	14,1	;volatile
 20433                           
 20434                           ;25AA040A.c: 29: return regVal;
 20435  26E0  0874               	movf	__EEPROM_25AA040A_ReadStatus@regVal,w
 20436  26E1  0008               	return
 20437  26E2                     __end_of__EEPROM_25AA040A_ReadStatus:	
 20438                           
 20439                           	psect	text72
 20440  18E8                     __ptext72:	
 20441 ;; *************** function _SysTime_GetNow *****************
 20442 ;; Defined at:
 20443 ;;		line 8 in file "systime.c"
 20444 ;; Parameters:    Size  Location     Type
 20445 ;;		None
 20446 ;; Auto vars:     Size  Location     Type
 20447 ;;  result          6    6[BANK0 ] volatile struct _SysTime
 20448 ;; Return value:  Size  Location     Type
 20449 ;;                  6    0[BANK0 ] struct _SysTime
 20450 ;; Registers used:
 20451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20452 ;; Tracked objects:
 20453 ;;		On entry : 0/0
 20454 ;;		On exit  : 0/0
 20455 ;;		Unchanged: 0/0
 20456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20457 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20458 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20460 ;;      Totals:         1      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20461 ;;Total ram usage:       13 bytes
 20462 ;; Hardware stack levels used:    1
 20463 ;; Hardware stack levels required when called:    3
 20464 ;; This function calls:
 20465 ;;		_TMR4_GetMs
 20466 ;;		_TMR4_GetSec
 20467 ;; This function is called by:
 20468 ;;		__EEPROM_25AA040A_WriteEnable
 20469 ;;		_handleButtons
 20470 ;;		_main
 20471 ;;		_checkAlarm
 20472 ;; This function uses a non-reentrant model
 20473 ;;
 20474                           
 20475                           
 20476                           ;psect for function _SysTime_GetNow
 20477  18E8                     _SysTime_GetNow:	
 20478                           
 20479                           ;systime.c: 10: SysTime result;
 20480                           ;systime.c: 11: result.Sec = TMR4_GetSec();
 20481                           
 20482                           ;incstack = 0
 20483                           ; Regs used in _SysTime_GetNow: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20484  18E8  31A6  2631  3198   	fcall	_TMR4_GetSec
 20485  18EB  0875               	movf	?_TMR4_GetSec+3,w
 20486  18EC  0020               	movlb	0	; select bank0
 20487  18ED  00A9               	movwf	SysTime_GetNow@result+3	;volatile
 20488  18EE  0874               	movf	?_TMR4_GetSec+2,w
 20489  18EF  00A8               	movwf	SysTime_GetNow@result+2	;volatile
 20490  18F0  0873               	movf	?_TMR4_GetSec+1,w
 20491  18F1  00A7               	movwf	SysTime_GetNow@result+1	;volatile
 20492  18F2  0872               	movf	?_TMR4_GetSec,w
 20493  18F3  00A6               	movwf	SysTime_GetNow@result	;volatile
 20494                           
 20495                           ;systime.c: 12: result.Ms = TMR4_GetMs();
 20496  18F4  31A6  2616  3198   	fcall	_TMR4_GetMs
 20497  18F7  0873               	movf	?_TMR4_GetMs+1,w
 20498  18F8  0020               	movlb	0	; select bank0
 20499  18F9  00AB               	movwf	SysTime_GetNow@result+5	;volatile
 20500  18FA  0872               	movf	?_TMR4_GetMs,w
 20501  18FB  00AA               	movwf	SysTime_GetNow@result+4	;volatile
 20502                           
 20503                           ;systime.c: 14: return result;
 20504  18FC  3026               	movlw	low SysTime_GetNow@result
 20505  18FD  0086               	movwf	6
 20506  18FE  3000               	movlw	high SysTime_GetNow@result
 20507  18FF  0087               	movwf	7
 20508  1900  3020               	movlw	low ?_SysTime_GetNow
 20509  1901  0084               	movwf	4
 20510  1902  3000               	movlw	high ?_SysTime_GetNow
 20511  1903  0085               	movwf	5
 20512  1904  3006               	movlw	6
 20513  1905  00F6               	movwf	??_SysTime_GetNow
 20514  1906                     u7330:	
 20515  1906  0016               	moviw fsr1++
 20516  1907  001A               	movwi fsr0++
 20517  1908  0BF6               	decfsz	??_SysTime_GetNow,f
 20518  1909  2906               	goto	u7330
 20519  190A  0008               	return
 20520  190B                     __end_of_SysTime_GetNow:	
 20521                           
 20522                           	psect	text73
 20523  2631                     __ptext73:	
 20524 ;; *************** function _TMR4_GetSec *****************
 20525 ;; Defined at:
 20526 ;;		line 122 in file "mcc_generated_files/tmr4.c"
 20527 ;; Parameters:    Size  Location     Type
 20528 ;;		None
 20529 ;; Auto vars:     Size  Location     Type
 20530 ;;		None
 20531 ;; Return value:  Size  Location     Type
 20532 ;;                  4    2[COMMON] unsigned long 
 20533 ;; Registers used:
 20534 ;;		wreg
 20535 ;; Tracked objects:
 20536 ;;		On entry : 0/0
 20537 ;;		On exit  : 0/0
 20538 ;;		Unchanged: 0/0
 20539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20544 ;;Total ram usage:        4 bytes
 20545 ;; Hardware stack levels used:    1
 20546 ;; Hardware stack levels required when called:    2
 20547 ;; This function calls:
 20548 ;;		Nothing
 20549 ;; This function is called by:
 20550 ;;		_updateTemperature
 20551 ;;		_SysTime_GetNow
 20552 ;; This function uses a non-reentrant model
 20553 ;;
 20554                           
 20555                           
 20556                           ;psect for function _TMR4_GetSec
 20557  2631                     _TMR4_GetSec:	
 20558                           
 20559                           ;tmr4.c: 124: return TMR4_SecCntr;
 20560                           
 20561                           ;incstack = 0
 20562                           ; Regs used in _TMR4_GetSec: [wreg]
 20563  2631  0022               	movlb	2	; select bank2
 20564  2632  0823               	movf	(_TMR4_SecCntr+3)^(0+256),w	;volatile
 20565  2633  00F5               	movwf	?_TMR4_GetSec+3
 20566  2634  0822               	movf	(_TMR4_SecCntr+2)^(0+256),w	;volatile
 20567  2635  00F4               	movwf	?_TMR4_GetSec+2
 20568  2636  0821               	movf	(_TMR4_SecCntr+1)^(0+256),w	;volatile
 20569  2637  00F3               	movwf	?_TMR4_GetSec+1
 20570  2638  0820               	movf	_TMR4_SecCntr^(0+256),w	;volatile
 20571  2639  00F2               	movwf	?_TMR4_GetSec
 20572  263A  0008               	return
 20573  263B                     __end_of_TMR4_GetSec:	
 20574                           
 20575                           	psect	text74
 20576  2616                     __ptext74:	
 20577 ;; *************** function _TMR4_GetMs *****************
 20578 ;; Defined at:
 20579 ;;		line 117 in file "mcc_generated_files/tmr4.c"
 20580 ;; Parameters:    Size  Location     Type
 20581 ;;		None
 20582 ;; Auto vars:     Size  Location     Type
 20583 ;;		None
 20584 ;; Return value:  Size  Location     Type
 20585 ;;                  2    2[COMMON] unsigned int 
 20586 ;; Registers used:
 20587 ;;		wreg
 20588 ;; Tracked objects:
 20589 ;;		On entry : 0/0
 20590 ;;		On exit  : 0/0
 20591 ;;		Unchanged: 0/0
 20592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20597 ;;Total ram usage:        2 bytes
 20598 ;; Hardware stack levels used:    1
 20599 ;; Hardware stack levels required when called:    2
 20600 ;; This function calls:
 20601 ;;		Nothing
 20602 ;; This function is called by:
 20603 ;;		_updateTemperature
 20604 ;;		_SysTime_GetNow
 20605 ;; This function uses a non-reentrant model
 20606 ;;
 20607                           
 20608                           
 20609                           ;psect for function _TMR4_GetMs
 20610  2616                     _TMR4_GetMs:	
 20611                           
 20612                           ;tmr4.c: 119: return TMR4_MsCntr;
 20613                           
 20614                           ;incstack = 0
 20615                           ; Regs used in _TMR4_GetMs: [wreg]
 20616  2616  0022               	movlb	2	; select bank2
 20617  2617  0837               	movf	(_TMR4_MsCntr+1)^(0+256),w	;volatile
 20618  2618  00F3               	movwf	?_TMR4_GetMs+1
 20619  2619  0836               	movf	_TMR4_MsCntr^(0+256),w	;volatile
 20620  261A  00F2               	movwf	?_TMR4_GetMs
 20621  261B  0008               	return
 20622  261C                     __end_of_TMR4_GetMs:	
 20623                           
 20624                           	psect	text75
 20625  142D                     __ptext75:	
 20626 ;; *************** function _SysTime_DiffMs *****************
 20627 ;; Defined at:
 20628 ;;		line 19 in file "systime.c"
 20629 ;; Parameters:    Size  Location     Type
 20630 ;;  firstTime       2    4[BANK0 ] PTR  struct _SysTime
 20631 ;;		 -> lastBuzStartTime(6), main@prevTime(6), _ButtonSet_LastChangeTime(6), _ButtonDown_LastChangeTime(6), 
 20632 ;;		 -> _ButtonUp_LastChangeTime(6), _EEPROM_25AA040A_WriteEnable@start(6), 
 20633 ;;  secondTime      1    6[BANK0 ] PTR  struct _SysTime
 20634 ;;		 -> checkAlarm@curTime(6), main@curTime(6), handleButtons@now(6), _EEPROM_25AA040A_WriteEnable@curTime(6), 
 20635 ;; Auto vars:     Size  Location     Type
 20636 ;;		None
 20637 ;; Return value:  Size  Location     Type
 20638 ;;                  4    4[BANK0 ] unsigned long 
 20639 ;; Registers used:
 20640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20641 ;; Tracked objects:
 20642 ;;		On entry : 0/0
 20643 ;;		On exit  : 0/0
 20644 ;;		Unchanged: 0/0
 20645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20646 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20648 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20649 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20650 ;;Total ram usage:       28 bytes
 20651 ;; Hardware stack levels used:    1
 20652 ;; Hardware stack levels required when called:    3
 20653 ;; This function calls:
 20654 ;;		___lmul
 20655 ;; This function is called by:
 20656 ;;		__EEPROM_25AA040A_WriteEnable
 20657 ;;		_handleButtons
 20658 ;;		_main
 20659 ;;		_checkAlarm
 20660 ;;		_SysTime_Diff
 20661 ;; This function uses a non-reentrant model
 20662 ;;
 20663                           
 20664                           
 20665                           ;psect for function _SysTime_DiffMs
 20666  142D                     _SysTime_DiffMs:	
 20667                           
 20668                           ;systime.c: 21: return ((uint32_t)secondTime->Ms - (uint32_t)firstTime->Ms) + (secondTim
      +                          e->Sec - firstTime->Sec) * 1000;
 20669                           
 20670                           ;incstack = 0
 20671                           ; Regs used in _SysTime_DiffMs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20672  142D  0020               	movlb	0	; select bank0
 20673  142E  0825               	movf	SysTime_DiffMs@firstTime+1,w
 20674  142F  00A9               	movwf	??_SysTime_DiffMs+1
 20675  1430  0824               	movf	SysTime_DiffMs@firstTime,w
 20676  1431  00A8               	movwf	??_SysTime_DiffMs
 20677  1432  3004               	movlw	4
 20678  1433  0728               	addwf	??_SysTime_DiffMs,w
 20679  1434  0084               	movwf	4
 20680  1435  0829               	movf	??_SysTime_DiffMs+1,w
 20681  1436  1803               	skipnc
 20682  1437  0A29               	incf	??_SysTime_DiffMs+1,w
 20683  1438  0085               	movwf	5
 20684  1439  3F00               	moviw [0]fsr0
 20685  143A  00AA               	movwf	??_SysTime_DiffMs+2
 20686  143B  3F01               	moviw [1]fsr0
 20687  143C  00AB               	movwf	??_SysTime_DiffMs+3
 20688  143D  01AC               	clrf	??_SysTime_DiffMs+4
 20689  143E  01AD               	clrf	??_SysTime_DiffMs+5
 20690  143F  09AA               	comf	??_SysTime_DiffMs+2,f
 20691  1440  09AB               	comf	??_SysTime_DiffMs+3,f
 20692  1441  09AC               	comf	??_SysTime_DiffMs+4,f
 20693  1442  09AD               	comf	??_SysTime_DiffMs+5,f
 20694  1443  0AAA               	incf	??_SysTime_DiffMs+2,f
 20695  1444  1903               	skipnz
 20696  1445  0AAB               	incf	??_SysTime_DiffMs+3,f
 20697  1446  1903               	skipnz
 20698  1447  0AAC               	incf	??_SysTime_DiffMs+4,f
 20699  1448  1903               	skipnz
 20700  1449  0AAD               	incf	??_SysTime_DiffMs+5,f
 20701  144A  0826               	movf	SysTime_DiffMs@secondTime,w
 20702  144B  0086               	movwf	6
 20703  144C  0187               	clrf	7
 20704  144D  3F40               	moviw [0]fsr1
 20705  144E  00AE               	movwf	??_SysTime_DiffMs+6
 20706  144F  3F41               	moviw [1]fsr1
 20707  1450  00AF               	movwf	??_SysTime_DiffMs+7
 20708  1451  3F42               	moviw [2]fsr1
 20709  1452  00B0               	movwf	??_SysTime_DiffMs+8
 20710  1453  3F43               	moviw [3]fsr1
 20711  1454  00B1               	movwf	??_SysTime_DiffMs+9
 20712  1455  0824               	movf	SysTime_DiffMs@firstTime,w
 20713  1456  0086               	movwf	6
 20714  1457  0825               	movf	SysTime_DiffMs@firstTime+1,w
 20715  1458  0087               	movwf	7
 20716  1459  3F40               	moviw [0]fsr1
 20717  145A  00B2               	movwf	??_SysTime_DiffMs+10
 20718  145B  3F41               	moviw [1]fsr1
 20719  145C  00B3               	movwf	??_SysTime_DiffMs+11
 20720  145D  3F42               	moviw [2]fsr1
 20721  145E  00B4               	movwf	??_SysTime_DiffMs+12
 20722  145F  3F43               	moviw [3]fsr1
 20723  1460  00B5               	movwf	??_SysTime_DiffMs+13
 20724  1461  09B2               	comf	??_SysTime_DiffMs+10,f
 20725  1462  09B3               	comf	??_SysTime_DiffMs+11,f
 20726  1463  09B4               	comf	??_SysTime_DiffMs+12,f
 20727  1464  09B5               	comf	??_SysTime_DiffMs+13,f
 20728  1465  0AB2               	incf	??_SysTime_DiffMs+10,f
 20729  1466  1903               	skipnz
 20730  1467  0AB3               	incf	??_SysTime_DiffMs+11,f
 20731  1468  1903               	skipnz
 20732  1469  0AB4               	incf	??_SysTime_DiffMs+12,f
 20733  146A  1903               	skipnz
 20734  146B  0AB5               	incf	??_SysTime_DiffMs+13,f
 20735  146C  0832               	movf	??_SysTime_DiffMs+10,w
 20736  146D  07AE               	addwf	??_SysTime_DiffMs+6,f
 20737  146E  0833               	movf	??_SysTime_DiffMs+11,w
 20738  146F  3DAF               	addwfc	??_SysTime_DiffMs+7,f
 20739  1470  0834               	movf	??_SysTime_DiffMs+12,w
 20740  1471  3DB0               	addwfc	??_SysTime_DiffMs+8,f
 20741  1472  0835               	movf	??_SysTime_DiffMs+13,w
 20742  1473  3DB1               	addwfc	??_SysTime_DiffMs+9,f
 20743  1474  0831               	movf	??_SysTime_DiffMs+9,w
 20744  1475  00F5               	movwf	___lmul@multiplier+3
 20745  1476  0830               	movf	??_SysTime_DiffMs+8,w
 20746  1477  00F4               	movwf	___lmul@multiplier+2
 20747  1478  082F               	movf	??_SysTime_DiffMs+7,w
 20748  1479  00F3               	movwf	___lmul@multiplier+1
 20749  147A  082E               	movf	??_SysTime_DiffMs+6,w
 20750  147B  00F2               	movwf	___lmul@multiplier
 20751  147C  3000               	movlw	0
 20752  147D  00F9               	movwf	___lmul@multiplicand+3
 20753  147E  3000               	movlw	0
 20754  147F  00F8               	movwf	___lmul@multiplicand+2
 20755  1480  3003               	movlw	3
 20756  1481  00F7               	movwf	___lmul@multiplicand+1
 20757  1482  30E8               	movlw	232
 20758  1483  00F6               	movwf	___lmul@multiplicand
 20759  1484  319A  226E  3194   	fcall	___lmul
 20760  1487  0872               	movf	?___lmul,w
 20761  1488  0020               	movlb	0	; select bank0
 20762  1489  00B6               	movwf	??_SysTime_DiffMs+14
 20763  148A  0873               	movf	?___lmul+1,w
 20764  148B  00B7               	movwf	??_SysTime_DiffMs+15
 20765  148C  0874               	movf	?___lmul+2,w
 20766  148D  00B8               	movwf	??_SysTime_DiffMs+16
 20767  148E  0875               	movf	?___lmul+3,w
 20768  148F  00B9               	movwf	??_SysTime_DiffMs+17
 20769  1490  0826               	movf	SysTime_DiffMs@secondTime,w
 20770  1491  3E04               	addlw	4
 20771  1492  0086               	movwf	6
 20772  1493  0187               	clrf	7
 20773  1494  3F40               	moviw [0]fsr1
 20774  1495  00BA               	movwf	??_SysTime_DiffMs+18
 20775  1496  3F41               	moviw [1]fsr1
 20776  1497  00BB               	movwf	??_SysTime_DiffMs+19
 20777  1498  083A               	movf	??_SysTime_DiffMs+18,w
 20778  1499  00BC               	movwf	??_SysTime_DiffMs+20
 20779  149A  083B               	movf	??_SysTime_DiffMs+19,w
 20780  149B  00BD               	movwf	??_SysTime_DiffMs+21
 20781  149C  01BE               	clrf	??_SysTime_DiffMs+22
 20782  149D  01BF               	clrf	??_SysTime_DiffMs+23
 20783  149E  083C               	movf	??_SysTime_DiffMs+20,w
 20784  149F  07B6               	addwf	??_SysTime_DiffMs+14,f
 20785  14A0  083D               	movf	??_SysTime_DiffMs+21,w
 20786  14A1  3DB7               	addwfc	??_SysTime_DiffMs+15,f
 20787  14A2  083E               	movf	??_SysTime_DiffMs+22,w
 20788  14A3  3DB8               	addwfc	??_SysTime_DiffMs+16,f
 20789  14A4  083F               	movf	??_SysTime_DiffMs+23,w
 20790  14A5  3DB9               	addwfc	??_SysTime_DiffMs+17,f
 20791  14A6  0836               	movf	??_SysTime_DiffMs+14,w
 20792  14A7  07AA               	addwf	??_SysTime_DiffMs+2,f
 20793  14A8  0837               	movf	??_SysTime_DiffMs+15,w
 20794  14A9  3DAB               	addwfc	??_SysTime_DiffMs+3,f
 20795  14AA  0838               	movf	??_SysTime_DiffMs+16,w
 20796  14AB  3DAC               	addwfc	??_SysTime_DiffMs+4,f
 20797  14AC  0839               	movf	??_SysTime_DiffMs+17,w
 20798  14AD  3DAD               	addwfc	??_SysTime_DiffMs+5,f
 20799  14AE  082D               	movf	??_SysTime_DiffMs+5,w
 20800  14AF  00A7               	movwf	?_SysTime_DiffMs+3
 20801  14B0  082C               	movf	??_SysTime_DiffMs+4,w
 20802  14B1  00A6               	movwf	?_SysTime_DiffMs+2
 20803  14B2  082B               	movf	??_SysTime_DiffMs+3,w
 20804  14B3  00A5               	movwf	?_SysTime_DiffMs+1
 20805  14B4  082A               	movf	??_SysTime_DiffMs+2,w
 20806  14B5  00A4               	movwf	?_SysTime_DiffMs
 20807  14B6  0008               	return
 20808  14B7                     __end_of_SysTime_DiffMs:	
 20809                           
 20810                           	psect	text76
 20811  1A6E                     __ptext76:	
 20812 ;; *************** function ___lmul *****************
 20813 ;; Defined at:
 20814 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/Umul32.c"
 20815 ;; Parameters:    Size  Location     Type
 20816 ;;  multiplier      4    2[COMMON] unsigned long 
 20817 ;;  multiplicand    4    6[COMMON] unsigned long 
 20818 ;; Auto vars:     Size  Location     Type
 20819 ;;  product         4    0[BANK0 ] unsigned long 
 20820 ;; Return value:  Size  Location     Type
 20821 ;;                  4    2[COMMON] unsigned long 
 20822 ;; Registers used:
 20823 ;;		wreg, status,2, status,0
 20824 ;; Tracked objects:
 20825 ;;		On entry : 0/0
 20826 ;;		On exit  : 0/0
 20827 ;;		Unchanged: 0/0
 20828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20829 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20830 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20832 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20833 ;;Total ram usage:       12 bytes
 20834 ;; Hardware stack levels used:    1
 20835 ;; Hardware stack levels required when called:    2
 20836 ;; This function calls:
 20837 ;;		Nothing
 20838 ;; This function is called by:
 20839 ;;		_SysTime_DiffMs
 20840 ;;		_strtol
 20841 ;; This function uses a non-reentrant model
 20842 ;;
 20843                           
 20844                           
 20845                           ;psect for function ___lmul
 20846  1A6E                     ___lmul:	
 20847                           
 20848                           ;incstack = 0
 20849                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 20850  1A6E  3000               	movlw	0
 20851  1A6F  0020               	movlb	0	; select bank0
 20852  1A70  00A3               	movwf	___lmul@product+3
 20853  1A71  3000               	movlw	0
 20854  1A72  00A2               	movwf	___lmul@product+2
 20855  1A73  3000               	movlw	0
 20856  1A74  00A1               	movwf	___lmul@product+1
 20857  1A75  3000               	movlw	0
 20858  1A76  00A0               	movwf	___lmul@product
 20859  1A77                     l6489:	
 20860  1A77  1C72               	btfss	___lmul@multiplier,0
 20861  1A78  2A82               	goto	l6493
 20862  1A79  0876               	movf	___lmul@multiplicand,w
 20863  1A7A  0020               	movlb	0	; select bank0
 20864  1A7B  07A0               	addwf	___lmul@product,f
 20865  1A7C  0877               	movf	___lmul@multiplicand+1,w
 20866  1A7D  3DA1               	addwfc	___lmul@product+1,f
 20867  1A7E  0878               	movf	___lmul@multiplicand+2,w
 20868  1A7F  3DA2               	addwfc	___lmul@product+2,f
 20869  1A80  0879               	movf	___lmul@multiplicand+3,w
 20870  1A81  3DA3               	addwfc	___lmul@product+3,f
 20871  1A82                     l6493:	
 20872  1A82  3001               	movlw	1
 20873  1A83                     u7305:	
 20874  1A83  35F6               	lslf	___lmul@multiplicand,f
 20875  1A84  0DF7               	rlf	___lmul@multiplicand+1,f
 20876  1A85  0DF8               	rlf	___lmul@multiplicand+2,f
 20877  1A86  0DF9               	rlf	___lmul@multiplicand+3,f
 20878  1A87  0B89               	decfsz	9,f
 20879  1A88  2A83               	goto	u7305
 20880  1A89  3001               	movlw	1
 20881  1A8A                     u7315:	
 20882  1A8A  36F5               	lsrf	___lmul@multiplier+3,f
 20883  1A8B  0CF4               	rrf	___lmul@multiplier+2,f
 20884  1A8C  0CF3               	rrf	___lmul@multiplier+1,f
 20885  1A8D  0CF2               	rrf	___lmul@multiplier,f
 20886  1A8E  0B89               	decfsz	9,f
 20887  1A8F  2A8A               	goto	u7315
 20888  1A90  0875               	movf	___lmul@multiplier+3,w
 20889  1A91  0474               	iorwf	___lmul@multiplier+2,w
 20890  1A92  0473               	iorwf	___lmul@multiplier+1,w
 20891  1A93  0472               	iorwf	___lmul@multiplier,w
 20892  1A94  1D03               	skipz
 20893  1A95  2A77               	goto	l6489
 20894  1A96  0020               	movlb	0	; select bank0
 20895  1A97  0823               	movf	___lmul@product+3,w
 20896  1A98  00F5               	movwf	?___lmul+3
 20897  1A99  0822               	movf	___lmul@product+2,w
 20898  1A9A  00F4               	movwf	?___lmul+2
 20899  1A9B  0821               	movf	___lmul@product+1,w
 20900  1A9C  00F3               	movwf	?___lmul+1
 20901  1A9D  0820               	movf	___lmul@product,w
 20902  1A9E  00F2               	movwf	?___lmul
 20903  1A9F  0008               	return
 20904  1AA0                     __end_of___lmul:	
 20905                           
 20906                           	psect	text77
 20907  1C65                     __ptext77:	
 20908 ;; *************** function _LCDWriteString *****************
 20909 ;; Defined at:
 20910 ;;		line 270 in file "liblcd/lcd.c"
 20911 ;; Parameters:    Size  Location     Type
 20912 ;;  msg             2    6[BANK0 ] PTR const unsigned char 
 20913 ;;		 -> STR_50(6), STR_48(6), STR_46(6), STR_42(2), 
 20914 ;;		 -> STR_41(2), STR_40(2), STR_39(2), MenuScreen_Clear@allSpace(9), 
 20915 ;;		 -> MainMenu(120), STR_38(2), STR_37(2), STR_36(2), 
 20916 ;;		 -> STR_35(2), STR_34(2), STR_33(2), STR_32(3), 
 20917 ;;		 -> STR_31(3), STR_30(2), STR_29(2), 
 20918 ;; Auto vars:     Size  Location     Type
 20919 ;;  cc              1    9[BANK0 ] char 
 20920 ;; Return value:  Size  Location     Type
 20921 ;;		None               void
 20922 ;; Registers used:
 20923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20924 ;; Tracked objects:
 20925 ;;		On entry : 0/0
 20926 ;;		On exit  : 0/0
 20927 ;;		Unchanged: 0/0
 20928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20929 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20930 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20931 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20932 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20933 ;;Total ram usage:        4 bytes
 20934 ;; Hardware stack levels used:    1
 20935 ;; Hardware stack levels required when called:    4
 20936 ;; This function calls:
 20937 ;;		_LCDByte
 20938 ;; This function is called by:
 20939 ;;		_updateTemperature
 20940 ;;		_SettingsScreen_Display
 20941 ;;		_MenuScreen_Clear
 20942 ;;		_MenuScreen_Display
 20943 ;;		_ACKAlarm
 20944 ;;		_checkAlarm
 20945 ;; This function uses a non-reentrant model
 20946 ;;
 20947                           
 20948                           
 20949                           ;psect for function _LCDWriteString
 20950  1C65                     _LCDWriteString:	
 20951  1C65                     l6615:	
 20952                           ;lcd.c: 300: while (*msg != '\0')
 20953                           
 20954                           ;incstack = 0
 20955                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20956                           
 20957  1C65  0020               	movlb	0	; select bank0
 20958  1C66  0826               	movf	LCDWriteString@msg,w
 20959  1C67  0084               	movwf	4
 20960  1C68  0827               	movf	LCDWriteString@msg+1,w
 20961  1C69  0085               	movwf	5
 20962  1C6A  0012               	moviw fsr0++
 20963  1C6B  1903               	btfsc	3,2
 20964  1C6C  0008               	return
 20965                           
 20966                           ;lcd.c: 301: {
 20967                           ;lcd.c: 303: if (*msg == '%')
 20968  1C6D  0020               	movlb	0	; select bank0
 20969  1C6E  0826               	movf	LCDWriteString@msg,w
 20970  1C6F  0084               	movwf	4
 20971  1C70  0827               	movf	LCDWriteString@msg+1,w
 20972  1C71  0085               	movwf	5
 20973  1C72  0012               	moviw fsr0++
 20974  1C73  3A25               	xorlw	37
 20975  1C74  1D03               	btfss	3,2
 20976  1C75  2C94               	goto	l6611
 20977                           
 20978                           ;lcd.c: 304: {
 20979                           ;lcd.c: 305: msg++;
 20980  1C76  3001               	movlw	1
 20981  1C77  07A6               	addwf	LCDWriteString@msg,f
 20982  1C78  3000               	movlw	0
 20983  1C79  3DA7               	addwfc	LCDWriteString@msg+1,f
 20984                           
 20985                           ;lcd.c: 306: int8_t cc = *msg - '0';
 20986  1C7A  0826               	movf	LCDWriteString@msg,w
 20987  1C7B  0084               	movwf	4
 20988  1C7C  0827               	movf	LCDWriteString@msg+1,w
 20989  1C7D  0085               	movwf	5
 20990  1C7E  0800               	movf	0,w	;code access
 20991  1C7F  3ED0               	addlw	-48
 20992  1C80  00A8               	movwf	??_LCDWriteString
 20993  1C81  0828               	movf	??_LCDWriteString,w
 20994  1C82  00A9               	movwf	LCDWriteString@cc
 20995                           
 20996                           ;lcd.c: 308: if (cc >= 0 && cc <= 7)
 20997  1C83  1BA9               	btfsc	LCDWriteString@cc,7
 20998  1C84  2C8E               	goto	l6607
 20999  1C85  0829               	movf	LCDWriteString@cc,w
 21000  1C86  3A80               	xorlw	128
 21001  1C87  3E78               	addlw	-136
 21002  1C88  1803               	skipnc
 21003  1C89  2C8E               	goto	l6607
 21004                           
 21005                           ;lcd.c: 309: {
 21006                           ;lcd.c: 310: (LCDByte(cc,1));
 21007  1C8A  01F7               	clrf	LCDByte@isdata
 21008  1C8B  0AF7               	incf	LCDByte@isdata,f
 21009  1C8C  0829               	movf	LCDWriteString@cc,w
 21010  1C8D  2C9C               	goto	L17
 21011  1C8E                     l6607:	
 21012                           ;lcd.c: 311: }
 21013                           
 21014                           
 21015                           ;lcd.c: 312: else
 21016                           ;lcd.c: 313: {
 21017                           ;lcd.c: 314: (LCDByte('%',1));
 21018  1C8E  01F7               	clrf	LCDByte@isdata
 21019  1C8F  0AF7               	incf	LCDByte@isdata,f
 21020  1C90  3025               	movlw	37
 21021  1C91  319B  2375  319C   	fcall	_LCDByte
 21022  1C94                     l6611:	
 21023                           ;lcd.c: 316: }
 21024                           ;lcd.c: 317: }
 21025                           
 21026                           ;lcd.c: 315: (LCDByte(*msg,1));
 21027                           
 21028                           
 21029                           ;lcd.c: 318: else
 21030                           ;lcd.c: 319: {
 21031                           ;lcd.c: 320: (LCDByte(*msg,1));
 21032  1C94  01F7               	clrf	LCDByte@isdata
 21033  1C95  0AF7               	incf	LCDByte@isdata,f
 21034  1C96  0020               	movlb	0	; select bank0
 21035  1C97  0826               	movf	LCDWriteString@msg,w
 21036  1C98  0084               	movwf	4
 21037  1C99  0827               	movf	LCDWriteString@msg+1,w
 21038  1C9A  0085               	movwf	5
 21039  1C9B  0800               	movf	0,w	;code access
 21040  1C9C                     L17:	
 21041  1C9C  319B  2375  319C   	fcall	_LCDByte
 21042                           
 21043                           ;lcd.c: 321: }
 21044                           ;lcd.c: 322: msg++;
 21045  1C9F  3001               	movlw	1
 21046  1CA0  0020               	movlb	0	; select bank0
 21047  1CA1  07A6               	addwf	LCDWriteString@msg,f
 21048  1CA2  3000               	movlw	0
 21049  1CA3  3DA7               	addwfc	LCDWriteString@msg+1,f
 21050  1CA4  2C65               	goto	l6615
 21051  1CA5                     __end_of_LCDWriteString:	
 21052                           
 21053                           	psect	text78
 21054  190B                     __ptext78:	
 21055 ;; *************** function _LCDGotoXY *****************
 21056 ;; Defined at:
 21057 ;;		line 372 in file "liblcd/lcd.c"
 21058 ;; Parameters:    Size  Location     Type
 21059 ;;  x               1    wreg     unsigned char 
 21060 ;;  y               1    4[BANK0 ] unsigned char 
 21061 ;; Auto vars:     Size  Location     Type
 21062 ;;  x               1    6[BANK0 ] unsigned char 
 21063 ;; Return value:  Size  Location     Type
 21064 ;;		None               void
 21065 ;; Registers used:
 21066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21067 ;; Tracked objects:
 21068 ;;		On entry : 0/0
 21069 ;;		On exit  : 0/0
 21070 ;;		Unchanged: 0/0
 21071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21072 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21074 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21075 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21076 ;;Total ram usage:        3 bytes
 21077 ;; Hardware stack levels used:    1
 21078 ;; Hardware stack levels required when called:    4
 21079 ;; This function calls:
 21080 ;;		_LCDByte
 21081 ;; This function is called by:
 21082 ;;		_updateTemperature
 21083 ;;		_SettingsScreen_Display
 21084 ;;		_MenuScreen_Clear
 21085 ;;		_MenuScreen_Display
 21086 ;;		_ACKAlarm
 21087 ;;		_checkAlarm
 21088 ;; This function uses a non-reentrant model
 21089 ;;
 21090                           
 21091                           
 21092                           ;psect for function _LCDGotoXY
 21093  190B                     _LCDGotoXY:	
 21094                           
 21095                           ;incstack = 0
 21096                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21097                           ;LCDGotoXY@x stored from wreg
 21098  190B  0020               	movlb	0	; select bank0
 21099  190C  00A6               	movwf	LCDGotoXY@x
 21100                           
 21101                           ;lcd.c: 374: if (x >= 20) return;
 21102  190D  3014               	movlw	20
 21103  190E  0226               	subwf	LCDGotoXY@x,w
 21104  190F  1803               	btfsc	3,0
 21105  1910  0008               	return
 21106  1911  291B               	goto	l6627
 21107  1912                     l121:	
 21108                           ;lcd.c: 382: case 1:
 21109                           
 21110                           ;lcd.c: 381: break;
 21111                           
 21112                           ;lcd.c: 379: {
 21113                           ;lcd.c: 380: case 0:
 21114                           
 21115                           ;lcd.c: 378: switch (y)
 21116                           
 21117                           
 21118                           ;lcd.c: 383: x |= 0b01000000;
 21119  1912  1726               	bsf	LCDGotoXY@x,6
 21120                           
 21121                           ;lcd.c: 384: break;
 21122  1913  2929               	goto	l120
 21123  1914                     l6621:	
 21124                           ;lcd.c: 385: case 2:
 21125                           
 21126                           
 21127                           ;lcd.c: 386: x += 0x14;
 21128  1914  3014               	movlw	20
 21129  1915  2917               	goto	L18
 21130  1916                     l6623:	
 21131                           ;lcd.c: 388: case 3:
 21132                           
 21133                           ;lcd.c: 387: break;
 21134                           
 21135                           
 21136                           ;lcd.c: 389: x += 0x54;
 21137  1916  3054               	movlw	84
 21138  1917                     L18:	
 21139  1917  00A5               	movwf	??_LCDGotoXY
 21140  1918  0825               	movf	??_LCDGotoXY,w
 21141  1919  07A6               	addwf	LCDGotoXY@x,f
 21142                           
 21143                           ;lcd.c: 391: }
 21144                           
 21145                           ;lcd.c: 390: break;
 21146  191A  2929               	goto	l120
 21147  191B                     l6627:	
 21148  191B  0824               	movf	LCDGotoXY@y,w
 21149                           
 21150                           ; Switch size 1, requested type "space"
 21151                           ; Number of cases is 4, Range of values is 0 to 3
 21152                           ; switch strategies available:
 21153                           ; Name         Instructions Cycles
 21154                           ; simple_byte           13     7 (average)
 21155                           ; direct_byte           14     6 (fixed)
 21156                           ; jumptable            260     6 (fixed)
 21157                           ;	Chosen strategy is simple_byte
 21158  191C  3A00               	xorlw	0	; case 0
 21159  191D  1903               	skipnz
 21160  191E  2929               	goto	l120
 21161  191F  3A01               	xorlw	1	; case 1
 21162  1920  1903               	skipnz
 21163  1921  2912               	goto	l121
 21164  1922  3A03               	xorlw	3	; case 2
 21165  1923  1903               	skipnz
 21166  1924  2914               	goto	l6621
 21167  1925  3A01               	xorlw	1	; case 3
 21168  1926  1903               	skipnz
 21169  1927  2916               	goto	l6623
 21170  1928  2929               	goto	l120
 21171  1929                     l120:	
 21172                           
 21173                           ;lcd.c: 413: x |= 0b10000000;
 21174  1929  17A6               	bsf	LCDGotoXY@x,7
 21175                           
 21176                           ;lcd.c: 414: (LCDByte(x,0));
 21177  192A  01F7               	clrf	LCDByte@isdata
 21178  192B  0826               	movf	LCDGotoXY@x,w
 21179  192C  319B  2375         	fcall	_LCDByte
 21180  192E  0008               	return
 21181  192F                     __end_of_LCDGotoXY:	
 21182                           
 21183                           	psect	text79
 21184  1B75                     __ptext79:	
 21185 ;; *************** function _LCDByte *****************
 21186 ;; Defined at:
 21187 ;;		line 96 in file "liblcd/lcd.c"
 21188 ;; Parameters:    Size  Location     Type
 21189 ;;  c               1    wreg     unsigned char 
 21190 ;;  isdata          1    7[COMMON] unsigned char 
 21191 ;; Auto vars:     Size  Location     Type
 21192 ;;  c               1    2[BANK0 ] unsigned char 
 21193 ;;  temp            1    3[BANK0 ] unsigned char 
 21194 ;;  ln              1    1[BANK0 ] unsigned char 
 21195 ;;  hn              1    0[BANK0 ] unsigned char 
 21196 ;; Return value:  Size  Location     Type
 21197 ;;		None               void
 21198 ;; Registers used:
 21199 ;;		wreg, status,2, status,0, pclath, cstack
 21200 ;; Tracked objects:
 21201 ;;		On entry : 0/0
 21202 ;;		On exit  : 0/0
 21203 ;;		Unchanged: 0/0
 21204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21205 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21206 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21207 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21208 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21209 ;;Total ram usage:        7 bytes
 21210 ;; Hardware stack levels used:    1
 21211 ;; Hardware stack levels required when called:    3
 21212 ;; This function calls:
 21213 ;;		_LCDBusyLoop
 21214 ;; This function is called by:
 21215 ;;		_LCDInit
 21216 ;;		_LCDWriteString
 21217 ;;		_LCDWriteInt
 21218 ;;		_LCDGotoXY
 21219 ;;		_initDrivers
 21220 ;;		_updateTemperature
 21221 ;; This function uses a non-reentrant model
 21222 ;;
 21223                           
 21224                           
 21225                           ;psect for function _LCDByte
 21226  1B75                     _LCDByte:	
 21227                           
 21228                           ;incstack = 0
 21229                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
 21230                           ;LCDByte@c stored from wreg
 21231  1B75  0020               	movlb	0	; select bank0
 21232  1B76  00A2               	movwf	LCDByte@c
 21233                           
 21234                           ;lcd.c: 105: uint8_t hn, ln;
 21235                           ;lcd.c: 106: uint8_t temp;
 21236                           ;lcd.c: 108: hn = c >> 4;
 21237  1B77  0822               	movf	LCDByte@c,w
 21238  1B78  00F8               	movwf	??_LCDByte
 21239  1B79  3004               	movlw	4
 21240  1B7A                     u3735:	
 21241  1B7A  36F8               	lsrf	??_LCDByte,f
 21242  1B7B  0B89               	decfsz	9,f
 21243  1B7C  2B7A               	goto	u3735
 21244  1B7D  0878               	movf	??_LCDByte,w
 21245  1B7E  00F9               	movwf	??_LCDByte+1
 21246  1B7F  0879               	movf	??_LCDByte+1,w
 21247  1B80  00A0               	movwf	LCDByte@hn
 21248                           
 21249                           ;lcd.c: 109: ln = (c & 0x0F);
 21250  1B81  0822               	movf	LCDByte@c,w
 21251  1B82  390F               	andlw	15
 21252  1B83  00F8               	movwf	??_LCDByte
 21253  1B84  0878               	movf	??_LCDByte,w
 21254  1B85  00A1               	movwf	LCDByte@ln
 21255                           
 21256                           ;lcd.c: 111: if (isdata == 0)
 21257  1B86  0877               	movf	LCDByte@isdata,w
 21258  1B87  1D03               	btfss	3,2
 21259  1B88  2B8B               	goto	l75
 21260                           
 21261                           ;lcd.c: 112: (RB3=0);
 21262  1B89  118D               	bcf	13,3	;volatile
 21263  1B8A  2B8C               	goto	l76
 21264  1B8B                     l75:	
 21265                           
 21266                           ;lcd.c: 113: else
 21267                           ;lcd.c: 114: (RB3=1);
 21268  1B8B  158D               	bsf	13,3	;volatile
 21269  1B8C                     l76:	
 21270                           
 21271                           ;lcd.c: 116: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
 21272  1B8C  3200               	nop2	;2 cycle nop
 21273                           
 21274                           ;lcd.c: 118: (RA4=1);
 21275  1B8D  0020               	movlb	0	; select bank0
 21276  1B8E  160C               	bsf	12,4	;volatile
 21277                           
 21278                           ;lcd.c: 122: temp = (PORTA & (~(0x0F << 0))) | ((hn << 0));
 21279  1B8F  080C               	movf	12,w	;volatile
 21280  1B90  39F0               	andlw	240
 21281  1B91  0420               	iorwf	LCDByte@hn,w
 21282  1B92  00F8               	movwf	??_LCDByte
 21283  1B93  0878               	movf	??_LCDByte,w
 21284  1B94  00A3               	movwf	LCDByte@temp
 21285                           
 21286                           ;lcd.c: 123: PORTA = temp;
 21287  1B95  0823               	movf	LCDByte@temp,w
 21288  1B96  008C               	movwf	12	;volatile
 21289                           
 21290                           ;lcd.c: 125: _delay((unsigned long)((1)*(16000000/4000000.0)));
 21291  1B97  3200               	nop2	;2 cycle nop
 21292  1B98  3200               	nop2	;2 cycle nop
 21293                           
 21294                           ;lcd.c: 129: (RA4=0);
 21295  1B99  0020               	movlb	0	; select bank0
 21296  1B9A  120C               	bcf	12,4	;volatile
 21297                           
 21298                           ;lcd.c: 131: _delay((unsigned long)((1)*(16000000/4000000.0)));
 21299  1B9B  3200               	nop2	;2 cycle nop
 21300  1B9C  3200               	nop2	;2 cycle nop
 21301                           
 21302                           ;lcd.c: 134: (RA4=1);
 21303  1B9D  0020               	movlb	0	; select bank0
 21304  1B9E  160C               	bsf	12,4	;volatile
 21305                           
 21306                           ;lcd.c: 136: temp = (PORTA & (~(0x0F << 0))) | ((ln << 0));
 21307  1B9F  080C               	movf	12,w	;volatile
 21308  1BA0  39F0               	andlw	240
 21309  1BA1  0421               	iorwf	LCDByte@ln,w
 21310  1BA2  00F8               	movwf	??_LCDByte
 21311  1BA3  0878               	movf	??_LCDByte,w
 21312  1BA4  00A3               	movwf	LCDByte@temp
 21313                           
 21314                           ;lcd.c: 138: PORTA = temp;
 21315  1BA5  0823               	movf	LCDByte@temp,w
 21316  1BA6  008C               	movwf	12	;volatile
 21317                           
 21318                           ;lcd.c: 140: _delay((unsigned long)((1)*(16000000/4000000.0)));
 21319  1BA7  3200               	nop2	;2 cycle nop
 21320  1BA8  3200               	nop2	;2 cycle nop
 21321                           
 21322                           ;lcd.c: 144: (RA4=0);
 21323  1BA9  0020               	movlb	0	; select bank0
 21324  1BAA  120C               	bcf	12,4	;volatile
 21325                           
 21326                           ;lcd.c: 146: _delay((unsigned long)((1)*(16000000/4000000.0)));
 21327  1BAB  3200               	nop2	;2 cycle nop
 21328  1BAC  3200               	nop2	;2 cycle nop
 21329                           
 21330                           ;lcd.c: 148: LCDBusyLoop();
 21331  1BAD  319E  26C6         	fcall	_LCDBusyLoop
 21332  1BAF  0008               	return
 21333  1BB0                     __end_of_LCDByte:	
 21334                           
 21335                           	psect	text80
 21336  1EC6                     __ptext80:	
 21337 ;; *************** function _LCDBusyLoop *****************
 21338 ;; Defined at:
 21339 ;;		line 151 in file "liblcd/lcd.c"
 21340 ;; Parameters:    Size  Location     Type
 21341 ;;		None
 21342 ;; Auto vars:     Size  Location     Type
 21343 ;;  status          1    6[COMMON] unsigned char 
 21344 ;;  temp            1    5[COMMON] unsigned char 
 21345 ;;  busy            1    4[COMMON] unsigned char 
 21346 ;; Return value:  Size  Location     Type
 21347 ;;		None               void
 21348 ;; Registers used:
 21349 ;;		wreg, status,2, status,0
 21350 ;; Tracked objects:
 21351 ;;		On entry : 0/0
 21352 ;;		On exit  : 0/0
 21353 ;;		Unchanged: 0/0
 21354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21356 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21358 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21359 ;;Total ram usage:        5 bytes
 21360 ;; Hardware stack levels used:    1
 21361 ;; Hardware stack levels required when called:    2
 21362 ;; This function calls:
 21363 ;;		Nothing
 21364 ;; This function is called by:
 21365 ;;		_LCDByte
 21366 ;;		_LCDInit
 21367 ;; This function uses a non-reentrant model
 21368 ;;
 21369                           
 21370                           
 21371                           ;psect for function _LCDBusyLoop
 21372  1EC6                     _LCDBusyLoop:	
 21373                           
 21374                           ;lcd.c: 156: uint8_t busy, status = 0x00, temp;
 21375                           
 21376                           ;incstack = 0
 21377                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
 21378  1EC6  01F6               	clrf	LCDBusyLoop@status
 21379                           
 21380                           ;lcd.c: 159: TRISA |= (0x0f << 0);
 21381  1EC7  300F               	movlw	15
 21382  1EC8  00F2               	movwf	??_LCDBusyLoop
 21383  1EC9  0872               	movf	??_LCDBusyLoop,w
 21384  1ECA  0021               	movlb	1	; select bank1
 21385  1ECB  048C               	iorwf	12,f	;volatile
 21386                           
 21387                           ;lcd.c: 162: (RB2=1);
 21388  1ECC  0020               	movlb	0	; select bank0
 21389  1ECD  150D               	bsf	13,2	;volatile
 21390                           
 21391                           ;lcd.c: 163: (RB3=0);
 21392  1ECE  118D               	bcf	13,3	;volatile
 21393                           
 21394                           ;lcd.c: 167: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
 21395  1ECF  3200               	nop2	;2 cycle nop
 21396  1ED0                     l4189:	
 21397                           ;lcd.c: 170: do
 21398                           
 21399                           
 21400                           ;lcd.c: 171: {
 21401                           ;lcd.c: 173: (RA4=1);
 21402  1ED0  0020               	movlb	0	; select bank0
 21403  1ED1  160C               	bsf	12,4	;volatile
 21404                           
 21405                           ;lcd.c: 176: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
 21406  1ED2  3200               	nop2	;2 cycle nop
 21407                           
 21408                           ;lcd.c: 178: status = (PORTA >> 0);
 21409  1ED3  0020               	movlb	0	; select bank0
 21410  1ED4  080C               	movf	12,w	;volatile
 21411  1ED5  00F2               	movwf	??_LCDBusyLoop
 21412  1ED6  0872               	movf	??_LCDBusyLoop,w
 21413  1ED7  00F6               	movwf	LCDBusyLoop@status
 21414                           
 21415                           ;lcd.c: 179: status = status << 4;
 21416  1ED8  0876               	movf	LCDBusyLoop@status,w
 21417  1ED9  00F2               	movwf	??_LCDBusyLoop
 21418  1EDA  3003               	movlw	3
 21419  1EDB                     u3635:	
 21420  1EDB  35F2               	lslf	??_LCDBusyLoop,f
 21421  1EDC  3EFF               	addlw	-1
 21422  1EDD  1D03               	skipz
 21423  1EDE  2EDB               	goto	u3635
 21424  1EDF  3572               	lslf	??_LCDBusyLoop,w
 21425  1EE0  00F3               	movwf	??_LCDBusyLoop+1
 21426  1EE1  0873               	movf	??_LCDBusyLoop+1,w
 21427  1EE2  00F6               	movwf	LCDBusyLoop@status
 21428                           
 21429                           ;lcd.c: 181: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
 21430  1EE3  3200               	nop2	;2 cycle nop
 21431                           
 21432                           ;lcd.c: 184: (RA4=0);
 21433  1EE4  0020               	movlb	0	; select bank0
 21434  1EE5  120C               	bcf	12,4	;volatile
 21435                           
 21436                           ;lcd.c: 185: _delay((unsigned long)((1)*(16000000/4000000.0)));
 21437  1EE6  3200               	nop2	;2 cycle nop
 21438  1EE7  3200               	nop2	;2 cycle nop
 21439                           
 21440                           ;lcd.c: 187: (RA4=1);
 21441  1EE8  0020               	movlb	0	; select bank0
 21442  1EE9  160C               	bsf	12,4	;volatile
 21443                           
 21444                           ;lcd.c: 188: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
 21445  1EEA  3200               	nop2	;2 cycle nop
 21446                           
 21447                           ;lcd.c: 190: temp = (PORTA >> 0);
 21448  1EEB  0020               	movlb	0	; select bank0
 21449  1EEC  080C               	movf	12,w	;volatile
 21450  1EED  00F2               	movwf	??_LCDBusyLoop
 21451  1EEE  0872               	movf	??_LCDBusyLoop,w
 21452  1EEF  00F5               	movwf	LCDBusyLoop@temp
 21453                           
 21454                           ;lcd.c: 191: temp &= 0x0F;
 21455  1EF0  300F               	movlw	15
 21456  1EF1  00F2               	movwf	??_LCDBusyLoop
 21457  1EF2  0872               	movf	??_LCDBusyLoop,w
 21458  1EF3  05F5               	andwf	LCDBusyLoop@temp,f
 21459                           
 21460                           ;lcd.c: 193: status = status | temp;
 21461  1EF4  0876               	movf	LCDBusyLoop@status,w
 21462  1EF5  0475               	iorwf	LCDBusyLoop@temp,w
 21463  1EF6  00F2               	movwf	??_LCDBusyLoop
 21464  1EF7  0872               	movf	??_LCDBusyLoop,w
 21465  1EF8  00F6               	movwf	LCDBusyLoop@status
 21466                           
 21467                           ;lcd.c: 195: busy = status & 0b10000000;
 21468  1EF9  0876               	movf	LCDBusyLoop@status,w
 21469  1EFA  3980               	andlw	128
 21470  1EFB  00F2               	movwf	??_LCDBusyLoop
 21471  1EFC  0872               	movf	??_LCDBusyLoop,w
 21472  1EFD  00F4               	movwf	LCDBusyLoop@busy
 21473                           
 21474                           ;lcd.c: 197: _delay((unsigned long)((0.5)*(16000000/4000000.0)));
 21475  1EFE  3200               	nop2	;2 cycle nop
 21476                           
 21477                           ;lcd.c: 199: (RA4=0);
 21478  1EFF  0020               	movlb	0	; select bank0
 21479  1F00  120C               	bcf	12,4	;volatile
 21480                           
 21481                           ;lcd.c: 200: _delay((unsigned long)((1)*(16000000/4000000.0)));
 21482  1F01  3200               	nop2	;2 cycle nop
 21483  1F02  3200               	nop2	;2 cycle nop
 21484                           
 21485                           ;lcd.c: 201: }
 21486                           ;lcd.c: 202: while (busy);
 21487  1F03  0874               	movf	LCDBusyLoop@busy,w
 21488  1F04  1D03               	btfss	3,2
 21489  1F05  2ED0               	goto	l4189
 21490                           
 21491                           ;lcd.c: 204: (RB2=0);
 21492  1F06  0020               	movlb	0	; select bank0
 21493  1F07  110D               	bcf	13,2	;volatile
 21494                           
 21495                           ;lcd.c: 207: TRISA &= (~(0x0F << 0));
 21496  1F08  30F0               	movlw	240
 21497  1F09  00F2               	movwf	??_LCDBusyLoop
 21498  1F0A  0872               	movf	??_LCDBusyLoop,w
 21499  1F0B  0021               	movlb	1	; select bank1
 21500  1F0C  058C               	andwf	12,f	;volatile
 21501  1F0D  0008               	return
 21502  1F0E                     __end_of_LCDBusyLoop:	
 21503                           
 21504                           	psect	text81
 21505  2789                     __ptext81:	
 21506 ;; *************** function _SYSTEM_Initialize *****************
 21507 ;; Defined at:
 21508 ;;		line 72 in file "mcc_generated_files/mcc.c"
 21509 ;; Parameters:    Size  Location     Type
 21510 ;;		None
 21511 ;; Auto vars:     Size  Location     Type
 21512 ;;		None
 21513 ;; Return value:  Size  Location     Type
 21514 ;;		None               void
 21515 ;; Registers used:
 21516 ;;		wreg, status,2, status,0, pclath, cstack
 21517 ;; Tracked objects:
 21518 ;;		On entry : 0/0
 21519 ;;		On exit  : 0/0
 21520 ;;		Unchanged: 0/0
 21521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21526 ;;Total ram usage:        0 bytes
 21527 ;; Hardware stack levels used:    1
 21528 ;; Hardware stack levels required when called:    4
 21529 ;; This function calls:
 21530 ;;		_EUSART_Initialize
 21531 ;;		_OSCILLATOR_Initialize
 21532 ;;		_PIN_MANAGER_Initialize
 21533 ;;		_PWM3_Initialize
 21534 ;;		_SPI_Initialize
 21535 ;;		_TMR2_Initialize
 21536 ;;		_TMR4_Initialize
 21537 ;; This function is called by:
 21538 ;;		_main
 21539 ;; This function uses a non-reentrant model
 21540 ;;
 21541                           
 21542                           
 21543                           ;psect for function _SYSTEM_Initialize
 21544  2789                     _SYSTEM_Initialize:	
 21545                           
 21546                           ;mcc.c: 74: OSCILLATOR_Initialize();
 21547                           
 21548                           ;incstack = 0
 21549                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21550  2789  31A6  260A  31A7   	fcall	_OSCILLATOR_Initialize
 21551                           
 21552                           ;mcc.c: 75: PIN_MANAGER_Initialize();
 21553  278C  3190  20ED  31A7   	fcall	_PIN_MANAGER_Initialize
 21554                           
 21555                           ;mcc.c: 76: TMR2_Initialize();
 21556  278F  31A6  2651  31A7   	fcall	_TMR2_Initialize
 21557                           
 21558                           ;mcc.c: 77: PWM3_Initialize();
 21559  2792  31A6  2646  31A7   	fcall	_PWM3_Initialize
 21560                           
 21561                           ;mcc.c: 78: EUSART_Initialize();
 21562  2795  3198  2004  31A7   	fcall	_EUSART_Initialize
 21563                           
 21564                           ;mcc.c: 79: SPI_Initialize();
 21565  2798  31A6  2610  31A7   	fcall	_SPI_Initialize
 21566                           
 21567                           ;mcc.c: 80: TMR4_Initialize();
 21568  279B  31A6  2680         	fcall	_TMR4_Initialize
 21569  279D  0008               	return
 21570  279E                     __end_of_SYSTEM_Initialize:	
 21571                           
 21572                           	psect	text82
 21573  2680                     __ptext82:	
 21574 ;; *************** function _TMR4_Initialize *****************
 21575 ;; Defined at:
 21576 ;;		line 62 in file "mcc_generated_files/tmr4.c"
 21577 ;; Parameters:    Size  Location     Type
 21578 ;;		None
 21579 ;; Auto vars:     Size  Location     Type
 21580 ;;		None
 21581 ;; Return value:  Size  Location     Type
 21582 ;;		None               void
 21583 ;; Registers used:
 21584 ;;		wreg, status,2, status,0, pclath, cstack
 21585 ;; Tracked objects:
 21586 ;;		On entry : 0/0
 21587 ;;		On exit  : 0/0
 21588 ;;		Unchanged: 0/0
 21589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21594 ;;Total ram usage:        0 bytes
 21595 ;; Hardware stack levels used:    1
 21596 ;; Hardware stack levels required when called:    3
 21597 ;; This function calls:
 21598 ;;		_TMR4_StartTimer
 21599 ;; This function is called by:
 21600 ;;		_SYSTEM_Initialize
 21601 ;; This function uses a non-reentrant model
 21602 ;;
 21603                           
 21604                           
 21605                           ;psect for function _TMR4_Initialize
 21606  2680                     _TMR4_Initialize:	
 21607                           
 21608                           ;tmr4.c: 67: T4CON = 0x78;
 21609                           
 21610                           ;incstack = 0
 21611                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21612  2680  3078               	movlw	120
 21613  2681  0028               	movlb	8	; select bank8
 21614  2682  0097               	movwf	23	;volatile
 21615                           
 21616                           ;tmr4.c: 70: PR4 = 0xF9;
 21617  2683  30F9               	movlw	249
 21618  2684  0096               	movwf	22	;volatile
 21619                           
 21620                           ;tmr4.c: 73: TMR4 = 0x00;
 21621  2685  0195               	clrf	21	;volatile
 21622                           
 21623                           ;tmr4.c: 76: PIR2bits.TMR4IF = 0;
 21624  2686  0020               	movlb	0	; select bank0
 21625  2687  1092               	bcf	18,1	;volatile
 21626                           
 21627                           ;tmr4.c: 79: PIE2bits.TMR4IE = 1;
 21628  2688  0021               	movlb	1	; select bank1
 21629  2689  1492               	bsf	18,1	;volatile
 21630                           
 21631                           ;tmr4.c: 82: TMR4_StartTimer();
 21632  268A  31A5  25F8         	fcall	_TMR4_StartTimer
 21633  268C  0008               	return
 21634  268D                     __end_of_TMR4_Initialize:	
 21635                           
 21636                           	psect	text83
 21637  25F8                     __ptext83:	
 21638 ;; *************** function _TMR4_StartTimer *****************
 21639 ;; Defined at:
 21640 ;;		line 85 in file "mcc_generated_files/tmr4.c"
 21641 ;; Parameters:    Size  Location     Type
 21642 ;;		None
 21643 ;; Auto vars:     Size  Location     Type
 21644 ;;		None
 21645 ;; Return value:  Size  Location     Type
 21646 ;;		None               void
 21647 ;; Registers used:
 21648 ;;		None
 21649 ;; Tracked objects:
 21650 ;;		On entry : 0/0
 21651 ;;		On exit  : 0/0
 21652 ;;		Unchanged: 0/0
 21653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21658 ;;Total ram usage:        0 bytes
 21659 ;; Hardware stack levels used:    1
 21660 ;; Hardware stack levels required when called:    2
 21661 ;; This function calls:
 21662 ;;		Nothing
 21663 ;; This function is called by:
 21664 ;;		_TMR4_Initialize
 21665 ;; This function uses a non-reentrant model
 21666 ;;
 21667                           
 21668                           
 21669                           ;psect for function _TMR4_StartTimer
 21670  25F8                     _TMR4_StartTimer:	
 21671                           
 21672                           ;tmr4.c: 88: T4CONbits.TMR4ON = 1;
 21673                           
 21674                           ;incstack = 0
 21675                           ; Regs used in _TMR4_StartTimer: []
 21676  25F8  0028               	movlb	8	; select bank8
 21677  25F9  1517               	bsf	23,2	;volatile
 21678  25FA  0008               	return
 21679  25FB                     __end_of_TMR4_StartTimer:	
 21680                           
 21681                           	psect	text84
 21682  2651                     __ptext84:	
 21683 ;; *************** function _TMR2_Initialize *****************
 21684 ;; Defined at:
 21685 ;;		line 58 in file "mcc_generated_files/tmr2.c"
 21686 ;; Parameters:    Size  Location     Type
 21687 ;;		None
 21688 ;; Auto vars:     Size  Location     Type
 21689 ;;		None
 21690 ;; Return value:  Size  Location     Type
 21691 ;;		None               void
 21692 ;; Registers used:
 21693 ;;		wreg, status,2, status,0, pclath, cstack
 21694 ;; Tracked objects:
 21695 ;;		On entry : 0/0
 21696 ;;		On exit  : 0/0
 21697 ;;		Unchanged: 0/0
 21698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21703 ;;Total ram usage:        0 bytes
 21704 ;; Hardware stack levels used:    1
 21705 ;; Hardware stack levels required when called:    3
 21706 ;; This function calls:
 21707 ;;		_TMR2_StartTimer
 21708 ;; This function is called by:
 21709 ;;		_SYSTEM_Initialize
 21710 ;; This function uses a non-reentrant model
 21711 ;;
 21712                           
 21713                           
 21714                           ;psect for function _TMR2_Initialize
 21715  2651                     _TMR2_Initialize:	
 21716                           
 21717                           ;tmr2.c: 62: T2CON = 0x00;
 21718                           
 21719                           ;incstack = 0
 21720                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21721  2651  0020               	movlb	0	; select bank0
 21722  2652  019C               	clrf	28	;volatile
 21723                           
 21724                           ;tmr2.c: 65: PR2 = 0xFF;
 21725  2653  30FF               	movlw	255
 21726  2654  009B               	movwf	27	;volatile
 21727                           
 21728                           ;tmr2.c: 68: TMR2 = 0x00;
 21729  2655  019A               	clrf	26	;volatile
 21730                           
 21731                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 21732  2656  1091               	bcf	17,1	;volatile
 21733                           
 21734                           ;tmr2.c: 74: PIE1bits.TMR2IE = 1;
 21735  2657  0021               	movlb	1	; select bank1
 21736  2658  1491               	bsf	17,1	;volatile
 21737                           
 21738                           ;tmr2.c: 77: TMR2_StartTimer();
 21739  2659  31A5  25F5         	fcall	_TMR2_StartTimer
 21740  265B  0008               	return
 21741  265C                     __end_of_TMR2_Initialize:	
 21742                           
 21743                           	psect	text85
 21744  25F5                     __ptext85:	
 21745 ;; *************** function _TMR2_StartTimer *****************
 21746 ;; Defined at:
 21747 ;;		line 80 in file "mcc_generated_files/tmr2.c"
 21748 ;; Parameters:    Size  Location     Type
 21749 ;;		None
 21750 ;; Auto vars:     Size  Location     Type
 21751 ;;		None
 21752 ;; Return value:  Size  Location     Type
 21753 ;;		None               void
 21754 ;; Registers used:
 21755 ;;		None
 21756 ;; Tracked objects:
 21757 ;;		On entry : 0/0
 21758 ;;		On exit  : 0/0
 21759 ;;		Unchanged: 0/0
 21760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21765 ;;Total ram usage:        0 bytes
 21766 ;; Hardware stack levels used:    1
 21767 ;; Hardware stack levels required when called:    2
 21768 ;; This function calls:
 21769 ;;		Nothing
 21770 ;; This function is called by:
 21771 ;;		_TMR2_Initialize
 21772 ;; This function uses a non-reentrant model
 21773 ;;
 21774                           
 21775                           
 21776                           ;psect for function _TMR2_StartTimer
 21777  25F5                     _TMR2_StartTimer:	
 21778                           
 21779                           ;tmr2.c: 82: T2CONbits.TMR2ON = 1;
 21780                           
 21781                           ;incstack = 0
 21782                           ; Regs used in _TMR2_StartTimer: []
 21783  25F5  0020               	movlb	0	; select bank0
 21784  25F6  151C               	bsf	28,2	;volatile
 21785  25F7  0008               	return
 21786  25F8                     __end_of_TMR2_StartTimer:	
 21787                           
 21788                           	psect	text86
 21789  2610                     __ptext86:	
 21790 ;; *************** function _SPI_Initialize *****************
 21791 ;; Defined at:
 21792 ;;		line 64 in file "mcc_generated_files/spi.c"
 21793 ;; Parameters:    Size  Location     Type
 21794 ;;		None
 21795 ;; Auto vars:     Size  Location     Type
 21796 ;;		None
 21797 ;; Return value:  Size  Location     Type
 21798 ;;		None               void
 21799 ;; Registers used:
 21800 ;;		wreg, status,2
 21801 ;; Tracked objects:
 21802 ;;		On entry : 0/0
 21803 ;;		On exit  : 0/0
 21804 ;;		Unchanged: 0/0
 21805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21810 ;;Total ram usage:        0 bytes
 21811 ;; Hardware stack levels used:    1
 21812 ;; Hardware stack levels required when called:    2
 21813 ;; This function calls:
 21814 ;;		Nothing
 21815 ;; This function is called by:
 21816 ;;		_SYSTEM_Initialize
 21817 ;; This function uses a non-reentrant model
 21818 ;;
 21819                           
 21820                           
 21821                           ;psect for function _SPI_Initialize
 21822  2610                     _SPI_Initialize:	
 21823                           
 21824                           ;spi.c: 69: SSP1STAT = 0x00;
 21825                           
 21826                           ;incstack = 0
 21827                           ; Regs used in _SPI_Initialize: [wreg+status,2]
 21828  2610  0024               	movlb	4	; select bank4
 21829  2611  0194               	clrf	20	;volatile
 21830                           
 21831                           ;spi.c: 72: SSP1CON1 = 0x30;
 21832  2612  3030               	movlw	48
 21833  2613  0095               	movwf	21	;volatile
 21834                           
 21835                           ;spi.c: 75: SSP1ADD = 0x00;
 21836  2614  0192               	clrf	18	;volatile
 21837  2615  0008               	return
 21838  2616                     __end_of_SPI_Initialize:	
 21839                           
 21840                           	psect	text87
 21841  2646                     __ptext87:	
 21842 ;; *************** function _PWM3_Initialize *****************
 21843 ;; Defined at:
 21844 ;;		line 57 in file "mcc_generated_files/pwm3.c"
 21845 ;; Parameters:    Size  Location     Type
 21846 ;;		None
 21847 ;; Auto vars:     Size  Location     Type
 21848 ;;		None
 21849 ;; Return value:  Size  Location     Type
 21850 ;;		None               void
 21851 ;; Registers used:
 21852 ;;		wreg, status,2, status,0
 21853 ;; Tracked objects:
 21854 ;;		On entry : 0/0
 21855 ;;		On exit  : 0/0
 21856 ;;		Unchanged: 0/0
 21857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21862 ;;Total ram usage:        0 bytes
 21863 ;; Hardware stack levels used:    1
 21864 ;; Hardware stack levels required when called:    2
 21865 ;; This function calls:
 21866 ;;		Nothing
 21867 ;; This function is called by:
 21868 ;;		_SYSTEM_Initialize
 21869 ;; This function uses a non-reentrant model
 21870 ;;
 21871                           
 21872                           
 21873                           ;psect for function _PWM3_Initialize
 21874  2646                     _PWM3_Initialize:	
 21875                           
 21876                           ;pwm3.c: 61: PWM3CON = 0x80;
 21877                           
 21878                           ;incstack = 0
 21879                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 21880  2646  3080               	movlw	128
 21881  2647  002C               	movlb	12	; select bank12
 21882  2648  0099               	movwf	25	;volatile
 21883                           
 21884                           ;pwm3.c: 64: PWM3DCH = 0x7F;
 21885  2649  307F               	movlw	127
 21886  264A  0098               	movwf	24	;volatile
 21887                           
 21888                           ;pwm3.c: 67: PWM3DCL = 0xC0;
 21889  264B  30C0               	movlw	192
 21890  264C  0097               	movwf	23	;volatile
 21891                           
 21892                           ;pwm3.c: 71: CCPTMRSbits.P3TSEL = 0x0;
 21893  264D  30CF               	movlw	-49
 21894  264E  0025               	movlb	5	; select bank5
 21895  264F  059E               	andwf	30,f	;volatile
 21896  2650  0008               	return
 21897  2651                     __end_of_PWM3_Initialize:	
 21898                           
 21899                           	psect	text88
 21900  10ED                     __ptext88:	
 21901 ;; *************** function _PIN_MANAGER_Initialize *****************
 21902 ;; Defined at:
 21903 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 21904 ;; Parameters:    Size  Location     Type
 21905 ;;		None
 21906 ;; Auto vars:     Size  Location     Type
 21907 ;;  state           1    2[COMMON] unsigned char 
 21908 ;; Return value:  Size  Location     Type
 21909 ;;		None               void
 21910 ;; Registers used:
 21911 ;;		wreg, status,2, status,0
 21912 ;; Tracked objects:
 21913 ;;		On entry : 0/0
 21914 ;;		On exit  : 0/0
 21915 ;;		Unchanged: 0/0
 21916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21921 ;;Total ram usage:        1 bytes
 21922 ;; Hardware stack levels used:    1
 21923 ;; Hardware stack levels required when called:    2
 21924 ;; This function calls:
 21925 ;;		Nothing
 21926 ;; This function is called by:
 21927 ;;		_SYSTEM_Initialize
 21928 ;; This function uses a non-reentrant model
 21929 ;;
 21930                           
 21931                           
 21932                           ;psect for function _PIN_MANAGER_Initialize
 21933  10ED                     _PIN_MANAGER_Initialize:	
 21934                           
 21935                           ;pin_manager.c: 53: LATA = 0x00;
 21936                           
 21937                           ;incstack = 0
 21938                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 21939  10ED  0022               	movlb	2	; select bank2
 21940  10EE  018C               	clrf	12	;volatile
 21941                           
 21942                           ;pin_manager.c: 54: TRISA = 0xE0;
 21943  10EF  30E0               	movlw	224
 21944  10F0  0021               	movlb	1	; select bank1
 21945  10F1  008C               	movwf	12	;volatile
 21946                           
 21947                           ;pin_manager.c: 55: ANSELA = 0x00;
 21948  10F2  0023               	movlb	3	; select bank3
 21949  10F3  018C               	clrf	12	;volatile
 21950                           
 21951                           ;pin_manager.c: 56: WPUA = 0x00;
 21952  10F4  0024               	movlb	4	; select bank4
 21953  10F5  018C               	clrf	12	;volatile
 21954                           
 21955                           ;pin_manager.c: 58: LATB = 0x00;
 21956  10F6  0022               	movlb	2	; select bank2
 21957  10F7  018D               	clrf	13	;volatile
 21958                           
 21959                           ;pin_manager.c: 59: TRISB = 0xE1;
 21960  10F8  30E1               	movlw	225
 21961  10F9  0021               	movlb	1	; select bank1
 21962  10FA  008D               	movwf	13	;volatile
 21963                           
 21964                           ;pin_manager.c: 60: ANSELB = 0x00;
 21965  10FB  0023               	movlb	3	; select bank3
 21966  10FC  018D               	clrf	13	;volatile
 21967                           
 21968                           ;pin_manager.c: 61: WPUB = 0x21;
 21969  10FD  3021               	movlw	33
 21970  10FE  0024               	movlb	4	; select bank4
 21971  10FF  008D               	movwf	13	;volatile
 21972                           
 21973                           ;pin_manager.c: 63: LATC = 0x02;
 21974  1100  3002               	movlw	2
 21975  1101  0022               	movlb	2	; select bank2
 21976  1102  008E               	movwf	14	;volatile
 21977                           
 21978                           ;pin_manager.c: 64: TRISC = 0xD4;
 21979  1103  30D4               	movlw	212
 21980  1104  0021               	movlb	1	; select bank1
 21981  1105  008E               	movwf	14	;volatile
 21982                           
 21983                           ;pin_manager.c: 65: ANSELC = 0x00;
 21984  1106  0023               	movlb	3	; select bank3
 21985  1107  018E               	clrf	14	;volatile
 21986                           
 21987                           ;pin_manager.c: 66: WPUC = 0x04;
 21988  1108  3004               	movlw	4
 21989  1109  0024               	movlb	4	; select bank4
 21990  110A  008E               	movwf	14	;volatile
 21991                           
 21992                           ;pin_manager.c: 68: TRISE = 0x08;
 21993  110B  3008               	movlw	8
 21994  110C  0021               	movlb	1	; select bank1
 21995  110D  0090               	movwf	16	;volatile
 21996                           
 21997                           ;pin_manager.c: 69: WPUE = 0x00;
 21998  110E  0024               	movlb	4	; select bank4
 21999  110F  0190               	clrf	16	;volatile
 22000                           
 22001                           ;pin_manager.c: 71: OPTION_REGbits.nWPUEN = 0x00;
 22002  1110  0021               	movlb	1	; select bank1
 22003  1111  1395               	bcf	21,7	;volatile
 22004                           
 22005                           ;pin_manager.c: 74: bool state = GIE;
 22006  1112  3000               	movlw	0
 22007  1113  1B8B               	btfsc	11,7	;volatile
 22008  1114  3001               	movlw	1
 22009  1115  00F2               	movwf	PIN_MANAGER_Initialize@state
 22010                           
 22011                           ;pin_manager.c: 75: GIE = 0;
 22012  1116  138B               	bcf	11,7	;volatile
 22013                           
 22014                           ;pin_manager.c: 76: PPSLOCK = 0x55;
 22015  1117  3055               	movlw	85
 22016  1118  003C               	movlb	28	; select bank28
 22017  1119  008F               	movwf	15	;volatile
 22018                           
 22019                           ;pin_manager.c: 77: PPSLOCK = 0xAA;
 22020  111A  30AA               	movlw	170
 22021  111B  008F               	movwf	15	;volatile
 22022                           
 22023                           ;pin_manager.c: 78: PPSLOCKbits.PPSLOCKED = 0x00;
 22024  111C  100F               	bcf	15,0	;volatile
 22025                           
 22026                           ;pin_manager.c: 80: RB1PPSbits.RB1PPS = 0x0E;
 22027  111D  003D               	movlb	29	; select bank29
 22028  111E  0819               	movf	25,w	;volatile
 22029  111F  39E0               	andlw	-32
 22030  1120  380E               	iorlw	14
 22031  1121  0099               	movwf	25	;volatile
 22032                           
 22033                           ;pin_manager.c: 81: RC0PPSbits.RC0PPS = 0x11;
 22034  1122  0820               	movf	32,w	;volatile
 22035  1123  39E0               	andlw	-32
 22036  1124  3811               	iorlw	17
 22037  1125  00A0               	movwf	32	;volatile
 22038                           
 22039                           ;pin_manager.c: 82: SSPCLKPPSbits.SSPCLKPPS = 0x13;
 22040  1126  003C               	movlb	28	; select bank28
 22041  1127  0820               	movf	32,w	;volatile
 22042  1128  39E0               	andlw	-32
 22043  1129  3813               	iorlw	19
 22044  112A  00A0               	movwf	32	;volatile
 22045                           
 22046                           ;pin_manager.c: 83: RC3PPSbits.RC3PPS = 0x10;
 22047  112B  003D               	movlb	29	; select bank29
 22048  112C  0823               	movf	35,w	;volatile
 22049  112D  39E0               	andlw	-32
 22050  112E  3810               	iorlw	16
 22051  112F  00A3               	movwf	35	;volatile
 22052                           
 22053                           ;pin_manager.c: 84: SSPDATPPSbits.SSPDATPPS = 0x14;
 22054  1130  003C               	movlb	28	; select bank28
 22055  1131  0821               	movf	33,w	;volatile
 22056  1132  39E0               	andlw	-32
 22057  1133  3814               	iorlw	20
 22058  1134  00A1               	movwf	33	;volatile
 22059                           
 22060                           ;pin_manager.c: 85: RC6PPSbits.RC6PPS = 0x14;
 22061  1135  003D               	movlb	29	; select bank29
 22062  1136  0826               	movf	38,w	;volatile
 22063  1137  39E0               	andlw	-32
 22064  1138  3814               	iorlw	20
 22065  1139  00A6               	movwf	38	;volatile
 22066                           
 22067                           ;pin_manager.c: 86: RXPPSbits.RXPPS = 0x17;
 22068  113A  003C               	movlb	28	; select bank28
 22069  113B  0824               	movf	36,w	;volatile
 22070  113C  39E0               	andlw	-32
 22071  113D  3817               	iorlw	23
 22072  113E  00A4               	movwf	36	;volatile
 22073                           
 22074                           ;pin_manager.c: 87: PPSLOCK = 0x55;
 22075  113F  3055               	movlw	85
 22076  1140  008F               	movwf	15	;volatile
 22077                           
 22078                           ;pin_manager.c: 88: PPSLOCK = 0xAA;
 22079  1141  30AA               	movlw	170
 22080  1142  008F               	movwf	15	;volatile
 22081                           
 22082                           ;pin_manager.c: 89: PPSLOCKbits.PPSLOCKED = 0x01;
 22083  1143  140F               	bsf	15,0	;volatile
 22084                           
 22085                           ;pin_manager.c: 90: GIE = state;
 22086  1144  1C72               	btfss	PIN_MANAGER_Initialize@state,0
 22087  1145  2948               	goto	u5660
 22088  1146  178B               	bsf	11,7	;volatile
 22089  1147  0008               	return
 22090  1148                     u5660:	
 22091  1148  138B               	bcf	11,7	;volatile
 22092  1149  0008               	return
 22093  114A                     __end_of_PIN_MANAGER_Initialize:	
 22094                           
 22095                           	psect	text89
 22096  260A                     __ptext89:	
 22097 ;; *************** function _OSCILLATOR_Initialize *****************
 22098 ;; Defined at:
 22099 ;;		line 83 in file "mcc_generated_files/mcc.c"
 22100 ;; Parameters:    Size  Location     Type
 22101 ;;		None
 22102 ;; Auto vars:     Size  Location     Type
 22103 ;;		None
 22104 ;; Return value:  Size  Location     Type
 22105 ;;		None               void
 22106 ;; Registers used:
 22107 ;;		wreg, status,2
 22108 ;; Tracked objects:
 22109 ;;		On entry : 0/0
 22110 ;;		On exit  : 0/0
 22111 ;;		Unchanged: 0/0
 22112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22117 ;;Total ram usage:        0 bytes
 22118 ;; Hardware stack levels used:    1
 22119 ;; Hardware stack levels required when called:    2
 22120 ;; This function calls:
 22121 ;;		Nothing
 22122 ;; This function is called by:
 22123 ;;		_SYSTEM_Initialize
 22124 ;; This function uses a non-reentrant model
 22125 ;;
 22126                           
 22127                           
 22128                           ;psect for function _OSCILLATOR_Initialize
 22129  260A                     _OSCILLATOR_Initialize:	
 22130                           
 22131                           ;mcc.c: 86: OSCCON = 0x38;
 22132                           
 22133                           ;incstack = 0
 22134                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 22135  260A  3038               	movlw	56
 22136  260B  0021               	movlb	1	; select bank1
 22137  260C  0099               	movwf	25	;volatile
 22138                           
 22139                           ;mcc.c: 88: OSCSTAT = 0x00;
 22140  260D  019A               	clrf	26	;volatile
 22141                           
 22142                           ;mcc.c: 90: OSCTUNE = 0x00;
 22143  260E  0198               	clrf	24	;volatile
 22144  260F  0008               	return
 22145  2610                     __end_of_OSCILLATOR_Initialize:	
 22146                           
 22147                           	psect	text90
 22148  1804                     __ptext90:	
 22149 ;; *************** function _EUSART_Initialize *****************
 22150 ;; Defined at:
 22151 ;;		line 76 in file "mcc_generated_files/eusart.c"
 22152 ;; Parameters:    Size  Location     Type
 22153 ;;		None
 22154 ;; Auto vars:     Size  Location     Type
 22155 ;;		None
 22156 ;; Return value:  Size  Location     Type
 22157 ;;		None               void
 22158 ;; Registers used:
 22159 ;;		wreg, status,2
 22160 ;; Tracked objects:
 22161 ;;		On entry : 0/0
 22162 ;;		On exit  : 0/0
 22163 ;;		Unchanged: 0/0
 22164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22169 ;;Total ram usage:        1 bytes
 22170 ;; Hardware stack levels used:    1
 22171 ;; Hardware stack levels required when called:    2
 22172 ;; This function calls:
 22173 ;;		Nothing
 22174 ;; This function is called by:
 22175 ;;		_SYSTEM_Initialize
 22176 ;; This function uses a non-reentrant model
 22177 ;;
 22178                           
 22179                           
 22180                           ;psect for function _EUSART_Initialize
 22181  1804                     _EUSART_Initialize:	
 22182                           
 22183                           ;eusart.c: 79: PIE1bits.RCIE = 0;
 22184                           
 22185                           ;incstack = 0
 22186                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 22187  1804  0021               	movlb	1	; select bank1
 22188  1805  1291               	bcf	17,5	;volatile
 22189                           
 22190                           ;eusart.c: 80: PIE1bits.TXIE = 0;
 22191  1806  1211               	bcf	17,4	;volatile
 22192                           
 22193                           ;eusart.c: 85: BAUD1CON = 0x48;
 22194  1807  3048               	movlw	72
 22195  1808  0023               	movlb	3	; select bank3
 22196  1809  009F               	movwf	31	;volatile
 22197                           
 22198                           ;eusart.c: 88: RC1STA = 0x90;
 22199  180A  3090               	movlw	144
 22200  180B  009D               	movwf	29	;volatile
 22201                           
 22202                           ;eusart.c: 91: TX1STA = 0x26;
 22203  180C  3026               	movlw	38
 22204  180D  009E               	movwf	30	;volatile
 22205                           
 22206                           ;eusart.c: 94: SP1BRGL = 0xA0;
 22207  180E  30A0               	movlw	160
 22208  180F  009B               	movwf	27	;volatile
 22209                           
 22210                           ;eusart.c: 97: SP1BRGH = 0x01;
 22211  1810  3001               	movlw	1
 22212  1811  009C               	movwf	28	;volatile
 22213                           
 22214                           ;eusart.c: 101: eusartTxHead = 0;
 22215  1812  0022               	movlb	2	; select bank2
 22216  1813  01D0               	clrf	_eusartTxHead^(0+256)
 22217                           
 22218                           ;eusart.c: 102: eusartTxTail = 0;
 22219  1814  01D1               	clrf	_eusartTxTail^(0+256)
 22220                           
 22221                           ;eusart.c: 103: eusartTxBufferRemaining = sizeof (eusartTxBuffer);
 22222  1815  3010               	movlw	16
 22223  1816  00F2               	movwf	??_EUSART_Initialize
 22224  1817  0872               	movf	??_EUSART_Initialize,w
 22225  1818  00EE               	movwf	_eusartTxBufferRemaining^(0+256)	;volatile
 22226                           
 22227                           ;eusart.c: 105: eusartRxHead = 0;
 22228  1819  01CE               	clrf	_eusartRxHead^(0+256)
 22229                           
 22230                           ;eusart.c: 106: eusartRxTail = 0;
 22231  181A  01CF               	clrf	_eusartRxTail^(0+256)
 22232                           
 22233                           ;eusart.c: 107: eusartRxCount = 0;
 22234  181B  0021               	movlb	1	; select bank1
 22235  181C  01E4               	clrf	_eusartRxCount^(0+128)	;volatile
 22236                           
 22237                           ;eusart.c: 110: PIE1bits.RCIE = 1;
 22238  181D  1691               	bsf	17,5	;volatile
 22239  181E  0008               	return
 22240  181F                     __end_of_EUSART_Initialize:	
 22241                           
 22242                           	psect	text91
 22243  1E39                     __ptext91:	
 22244 ;; *************** function _MenuScreen_Init *****************
 22245 ;; Defined at:
 22246 ;;		line 124 in file "menuscreen.c"
 22247 ;; Parameters:    Size  Location     Type
 22248 ;;		None
 22249 ;; Auto vars:     Size  Location     Type
 22250 ;;  i               1    9[COMMON] unsigned char 
 22251 ;; Return value:  Size  Location     Type
 22252 ;;		None               void
 22253 ;; Registers used:
 22254 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22255 ;; Tracked objects:
 22256 ;;		On entry : 0/0
 22257 ;;		On exit  : 0/0
 22258 ;;		Unchanged: 0/0
 22259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22262 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22263 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22264 ;;Total ram usage:        5 bytes
 22265 ;; Hardware stack levels used:    1
 22266 ;; Hardware stack levels required when called:    3
 22267 ;; This function calls:
 22268 ;;		___wmul
 22269 ;; This function is called by:
 22270 ;;		_main
 22271 ;; This function uses a non-reentrant model
 22272 ;;
 22273                           
 22274                           
 22275                           ;psect for function _MenuScreen_Init
 22276  1E39                     _MenuScreen_Init:	
 22277                           
 22278                           ;menuscreen.c: 126: _Menu_SelectedItem = 0;
 22279                           
 22280                           ;incstack = 0
 22281                           ; Regs used in _MenuScreen_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22282  1E39  01FB               	clrf	__Menu_SelectedItem
 22283                           
 22284                           ;menuscreen.c: 127: uint8_t i;
 22285                           ;menuscreen.c: 128: _Menu_MaxValidIndex = 10 - 1;
 22286  1E3A  3009               	movlw	9
 22287  1E3B  0020               	movlb	0	; select bank0
 22288  1E3C  00A6               	movwf	??_MenuScreen_Init
 22289  1E3D  0826               	movf	??_MenuScreen_Init,w
 22290  1E3E  00FA               	movwf	__Menu_MaxValidIndex
 22291                           
 22292                           ;menuscreen.c: 129: for(i = 0;i<10;++i)
 22293  1E3F  01F9               	clrf	MenuScreen_Init@i
 22294  1E40  300A               	movlw	10
 22295  1E41  0279               	subwf	MenuScreen_Init@i,w
 22296  1E42  1803               	btfsc	3,0
 22297  1E43  2E71               	goto	l7843
 22298  1E44                     l7833:	
 22299                           
 22300                           ;menuscreen.c: 130: {
 22301                           ;menuscreen.c: 131: if( !MainMenu[i].IsValid && i > 0)
 22302  1E44  0879               	movf	MenuScreen_Init@i,w
 22303  1E45  00A6               	movwf	??_MenuScreen_Init
 22304  1E46  01A7               	clrf	??_MenuScreen_Init+1
 22305  1E47  0826               	movf	??_MenuScreen_Init,w
 22306  1E48  00A0               	movwf	___wmul@multiplier
 22307  1E49  0827               	movf	??_MenuScreen_Init+1,w
 22308  1E4A  00A1               	movwf	___wmul@multiplier+1
 22309  1E4B  300C               	movlw	12
 22310  1E4C  00A2               	movwf	___wmul@multiplicand
 22311  1E4D  3000               	movlw	0
 22312  1E4E  00A3               	movwf	___wmul@multiplicand+1
 22313  1E4F  3198  203A  319E   	fcall	___wmul
 22314  1E52  3078               	movlw	120
 22315  1E53  0020               	movlb	0	; select bank0
 22316  1E54  00A8               	movwf	??_MenuScreen_Init+2
 22317  1E55  3027               	movlw	39
 22318  1E56  00A9               	movwf	??_MenuScreen_Init+3
 22319  1E57  0820               	movf	?___wmul,w
 22320  1E58  0728               	addwf	??_MenuScreen_Init+2,w
 22321  1E59  0086               	movwf	6
 22322  1E5A  0821               	movf	?___wmul+1,w
 22323  1E5B  3D29               	addwfc	??_MenuScreen_Init+3,w
 22324  1E5C  0087               	movwf	7
 22325  1E5D  0801               	movf	1,w
 22326  1E5E  1D03               	btfss	3,2
 22327  1E5F  2E69               	goto	l7839
 22328  1E60  0879               	movf	MenuScreen_Init@i,w
 22329  1E61  1903               	btfsc	3,2
 22330  1E62  2E69               	goto	l7839
 22331                           
 22332                           ;menuscreen.c: 132: {
 22333                           ;menuscreen.c: 133: _Menu_MaxValidIndex = i - 1;
 22334  1E63  0879               	movf	MenuScreen_Init@i,w
 22335  1E64  3EFF               	addlw	-1
 22336  1E65  00A6               	movwf	??_MenuScreen_Init
 22337  1E66  0826               	movf	??_MenuScreen_Init,w
 22338  1E67  00FA               	movwf	__Menu_MaxValidIndex
 22339                           
 22340                           ;menuscreen.c: 134: break;
 22341  1E68  2E71               	goto	l7843
 22342  1E69                     l7839:	
 22343  1E69  3001               	movlw	1
 22344  1E6A  00A6               	movwf	??_MenuScreen_Init
 22345  1E6B  0826               	movf	??_MenuScreen_Init,w
 22346  1E6C  07F9               	addwf	MenuScreen_Init@i,f
 22347  1E6D  300A               	movlw	10
 22348  1E6E  0279               	subwf	MenuScreen_Init@i,w
 22349  1E6F  1C03               	skipc
 22350  1E70  2E44               	goto	l7833
 22351  1E71                     l7843:	
 22352                           
 22353                           ;menuscreen.c: 135: }
 22354                           ;menuscreen.c: 136: }
 22355                           ;menuscreen.c: 138: ButtonUp_ReleaseCB = _MenuScreen_MoveUp;
 22356  1E71  303D               	movlw	low __MenuScreen_MoveUp
 22357  1E72  0022               	movlb	2	; select bank2
 22358  1E73  00B4               	movwf	_ButtonUp_ReleaseCB^(0+256)
 22359  1E74  301B               	movlw	high __MenuScreen_MoveUp
 22360  1E75  00B5               	movwf	(_ButtonUp_ReleaseCB^(0+256)+1)
 22361                           
 22362                           ;menuscreen.c: 139: ButtonDown_ReleaseCB = _MenuScreen_MoveDown;
 22363  1E76  30C6               	movlw	low __MenuScreen_MoveDown
 22364  1E77  00A8               	movwf	_ButtonDown_ReleaseCB^(0+256)
 22365  1E78  3007               	movlw	high __MenuScreen_MoveDown
 22366  1E79  00A9               	movwf	(_ButtonDown_ReleaseCB^(0+256)+1)
 22367                           
 22368                           ;menuscreen.c: 140: ButtonSet_ReleaseCB = _MenuScreen_SetRelease;
 22369  1E7A  300E               	movlw	low __MenuScreen_SetRelease
 22370  1E7B  00AE               	movwf	_ButtonSet_ReleaseCB^(0+256)
 22371  1E7C  301F               	movlw	high __MenuScreen_SetRelease
 22372  1E7D  00AF               	movwf	(_ButtonSet_ReleaseCB^(0+256)+1)
 22373  1E7E  0008               	return
 22374  1E7F                     __end_of_MenuScreen_Init:	
 22375                           
 22376                           	psect	text92
 22377  183A                     __ptext92:	
 22378 ;; *************** function ___wmul *****************
 22379 ;; Defined at:
 22380 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/Umul16.c"
 22381 ;; Parameters:    Size  Location     Type
 22382 ;;  multiplier      2    0[BANK0 ] unsigned int 
 22383 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 22384 ;; Auto vars:     Size  Location     Type
 22385 ;;  product         2    4[BANK0 ] unsigned int 
 22386 ;; Return value:  Size  Location     Type
 22387 ;;                  2    0[BANK0 ] unsigned int 
 22388 ;; Registers used:
 22389 ;;		wreg, status,2, status,0
 22390 ;; Tracked objects:
 22391 ;;		On entry : 0/0
 22392 ;;		On exit  : 0/0
 22393 ;;		Unchanged: 0/0
 22394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22395 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22396 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22398 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22399 ;;Total ram usage:        6 bytes
 22400 ;; Hardware stack levels used:    1
 22401 ;; Hardware stack levels required when called:    2
 22402 ;; This function calls:
 22403 ;;		Nothing
 22404 ;; This function is called by:
 22405 ;;		_updateTemperature
 22406 ;;		__MenuScreen_MoveUp
 22407 ;;		__MenuScreen_MoveDown
 22408 ;;		__MenuScreen_SetRelease
 22409 ;;		_MenuScreen_Init
 22410 ;;		_MenuScreen_Display
 22411 ;;		_printf
 22412 ;; This function uses a non-reentrant model
 22413 ;;
 22414                           
 22415                           
 22416                           ;psect for function ___wmul
 22417  183A                     ___wmul:	
 22418                           
 22419                           ;incstack = 0
 22420                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 22421  183A  0020               	movlb	0	; select bank0
 22422  183B  01A4               	clrf	___wmul@product
 22423  183C  01A5               	clrf	___wmul@product+1
 22424  183D                     l6537:	
 22425  183D  1C20               	btfss	___wmul@multiplier,0
 22426  183E  2843               	goto	l1322
 22427  183F  0822               	movf	___wmul@multiplicand,w
 22428  1840  07A4               	addwf	___wmul@product,f
 22429  1841  0823               	movf	___wmul@multiplicand+1,w
 22430  1842  3DA5               	addwfc	___wmul@product+1,f
 22431  1843                     l1322:	
 22432  1843  3001               	movlw	1
 22433  1844                     u7375:	
 22434  1844  35A2               	lslf	___wmul@multiplicand,f
 22435  1845  0DA3               	rlf	___wmul@multiplicand+1,f
 22436  1846  0B89               	decfsz	9,f
 22437  1847  2844               	goto	u7375
 22438  1848  3001               	movlw	1
 22439  1849                     u7385:	
 22440  1849  36A1               	lsrf	___wmul@multiplier+1,f
 22441  184A  0CA0               	rrf	___wmul@multiplier,f
 22442  184B  0B89               	decfsz	9,f
 22443  184C  2849               	goto	u7385
 22444  184D  0820               	movf	___wmul@multiplier,w
 22445  184E  0421               	iorwf	___wmul@multiplier+1,w
 22446  184F  1D03               	btfss	3,2
 22447  1850  283D               	goto	l6537
 22448  1851  0825               	movf	___wmul@product+1,w
 22449  1852  00A1               	movwf	?___wmul+1
 22450  1853  0824               	movf	___wmul@product,w
 22451  1854  00A0               	movwf	?___wmul
 22452  1855  0008               	return
 22453  1856                     __end_of___wmul:	
 22454                           
 22455                           	psect	text93
 22456  2774                     __ptext93:	
 22457 ;; *************** function _Config_InitRTValues *****************
 22458 ;; Defined at:
 22459 ;;		line 18 in file "config.c"
 22460 ;; Parameters:    Size  Location     Type
 22461 ;;		None
 22462 ;; Auto vars:     Size  Location     Type
 22463 ;;		None
 22464 ;; Return value:  Size  Location     Type
 22465 ;;		None               void
 22466 ;; Registers used:
 22467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22468 ;; Tracked objects:
 22469 ;;		On entry : 0/0
 22470 ;;		On exit  : 0/0
 22471 ;;		Unchanged: 0/0
 22472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22477 ;;Total ram usage:        0 bytes
 22478 ;; Hardware stack levels used:    1
 22479 ;; Hardware stack levels required when called:    5
 22480 ;; This function calls:
 22481 ;;		_Config_GetBottomLimit
 22482 ;;		_Config_GetUpLimit
 22483 ;; This function is called by:
 22484 ;;		_main
 22485 ;; This function uses a non-reentrant model
 22486 ;;
 22487                           
 22488                           
 22489                           ;psect for function _Config_InitRTValues
 22490  2774                     _Config_InitRTValues:	
 22491                           
 22492                           ;config.c: 20: Config_GetUpLimit(&UpIntLimitRT, &UpFractLimitRT);
 22493                           
 22494                           ;incstack = 0
 22495                           ; Regs used in _Config_InitRTValues: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22496  2774  3066               	movlw	low _UpFractLimitRT
 22497  2775  0020               	movlb	0	; select bank0
 22498  2776  00A7               	movwf	Config_GetUpLimit@p_fractLimit
 22499  2777  3001               	movlw	high _UpFractLimitRT
 22500  2778  00A8               	movwf	Config_GetUpLimit@p_fractLimit+1
 22501  2779  30E5               	movlw	(low (_UpIntLimitRT| 0))& (0+255)
 22502  277A  319A  223C  31A7   	fcall	_Config_GetUpLimit
 22503                           
 22504                           ;config.c: 21: Config_GetBottomLimit(&BottomIntLimitRT, &BottomFractLimitRT);
 22505  277D  3062               	movlw	low _BottomIntLimitRT
 22506  277E  0020               	movlb	0	; select bank0
 22507  277F  00A7               	movwf	Config_GetBottomLimit@p_intLimit
 22508  2780  3001               	movlw	high _BottomIntLimitRT
 22509  2781  00A8               	movwf	Config_GetBottomLimit@p_intLimit+1
 22510  2782  3060               	movlw	low _BottomFractLimitRT
 22511  2783  00A9               	movwf	Config_GetBottomLimit@p_fractLimit
 22512  2784  3001               	movlw	high _BottomFractLimitRT
 22513  2785  00AA               	movwf	Config_GetBottomLimit@p_fractLimit+1
 22514  2786  319A  22A0         	fcall	_Config_GetBottomLimit
 22515  2788  0008               	return
 22516  2789                     __end_of_Config_InitRTValues:	
 22517                           
 22518                           	psect	text94
 22519  1A3C                     __ptext94:	
 22520 ;; *************** function _Config_GetUpLimit *****************
 22521 ;; Defined at:
 22522 ;;		line 79 in file "config.c"
 22523 ;; Parameters:    Size  Location     Type
 22524 ;;  p_intLimit      1    wreg     PTR int 
 22525 ;;		 -> curUpIntLimit(2), UpIntLimitRT(2), processCommand@curIntLimit(2), 
 22526 ;;  p_fractLimit    2    7[BANK0 ] PTR int 
 22527 ;;		 -> curUpFractLimit(2), UpFractLimitRT(2), processCommand@curFractLimit(2), 
 22528 ;; Auto vars:     Size  Location     Type
 22529 ;;  p_intLimit      1   13[BANK0 ] PTR int 
 22530 ;;		 -> curUpIntLimit(2), UpIntLimitRT(2), processCommand@curIntLimit(2), 
 22531 ;;  bufData         4    9[BANK0 ] unsigned char [4]
 22532 ;; Return value:  Size  Location     Type
 22533 ;;		None               void
 22534 ;; Registers used:
 22535 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22536 ;; Tracked objects:
 22537 ;;		On entry : 0/0
 22538 ;;		On exit  : 0/0
 22539 ;;		Unchanged: 0/0
 22540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22541 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22542 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22544 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22545 ;;Total ram usage:        8 bytes
 22546 ;; Hardware stack levels used:    1
 22547 ;; Hardware stack levels required when called:    4
 22548 ;; This function calls:
 22549 ;;		_EEPROM_25AA040A_ReadToBuffer
 22550 ;; This function is called by:
 22551 ;;		_processCommand
 22552 ;;		_Config_InitRTValues
 22553 ;;		_ChangeToSettingsScreen
 22554 ;; This function uses a non-reentrant model
 22555 ;;
 22556                           
 22557                           
 22558                           ;psect for function _Config_GetUpLimit
 22559  1A3C                     _Config_GetUpLimit:	
 22560                           
 22561                           ;incstack = 0
 22562                           ; Regs used in _Config_GetUpLimit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22563                           ;Config_GetUpLimit@p_intLimit stored from wreg
 22564  1A3C  0020               	movlb	0	; select bank0
 22565  1A3D  00AD               	movwf	Config_GetUpLimit@p_intLimit
 22566                           
 22567                           ;config.c: 81: uint8_t bufData[4];
 22568                           ;config.c: 82: EEPROM_25AA040A_ReadToBuffer(0x00, bufData, 4);
 22569  1A3E  3000               	movlw	0
 22570  1A3F  00F3               	movwf	EEPROM_25AA040A_ReadToBuffer@address
 22571  1A40  00F4               	movwf	EEPROM_25AA040A_ReadToBuffer@address+1
 22572  1A41  3029               	movlw	(low (Config_GetUpLimit@bufData| 0))& (0+255)
 22573  1A42  00F8               	movwf	??_Config_GetUpLimit
 22574  1A43  0878               	movf	??_Config_GetUpLimit,w
 22575  1A44  00F5               	movwf	EEPROM_25AA040A_ReadToBuffer@dst
 22576  1A45  3004               	movlw	4
 22577  1A46  00F6               	movwf	EEPROM_25AA040A_ReadToBuffer@dataLength
 22578  1A47  3000               	movlw	0
 22579  1A48  00F7               	movwf	EEPROM_25AA040A_ReadToBuffer@dataLength+1
 22580  1A49  319D  25AF         	fcall	_EEPROM_25AA040A_ReadToBuffer
 22581                           
 22582                           ;config.c: 85: *p_intLimit = (int16_t)bufData[0] | (int16_t)(bufData[1] << 8);
 22583  1A4B  0020               	movlb	0	; select bank0
 22584  1A4C  082D               	movf	Config_GetUpLimit@p_intLimit,w
 22585  1A4D  0086               	movwf	6
 22586  1A4E  0187               	clrf	7
 22587  1A4F  0829               	movf	Config_GetUpLimit@bufData,w
 22588  1A50  3FC0               	movwi [0]fsr1
 22589  1A51  082A               	movf	Config_GetUpLimit@bufData+1,w
 22590  1A52  3FC1               	movwi [1]fsr1
 22591                           
 22592                           ;config.c: 86: *p_fractLimit = (int16_t)bufData[2] | (int16_t)(bufData[3] << 8);
 22593  1A53  0827               	movf	Config_GetUpLimit@p_fractLimit,w
 22594  1A54  0086               	movwf	6
 22595  1A55  0828               	movf	Config_GetUpLimit@p_fractLimit+1,w
 22596  1A56  0087               	movwf	7
 22597  1A57  082B               	movf	Config_GetUpLimit@bufData+2,w
 22598  1A58  3FC0               	movwi [0]fsr1
 22599  1A59  082C               	movf	Config_GetUpLimit@bufData+3,w
 22600  1A5A  3FC1               	movwi [1]fsr1
 22601                           
 22602                           ;config.c: 88: UpIntLimitRT = *p_intLimit;
 22603  1A5B  082D               	movf	Config_GetUpLimit@p_intLimit,w
 22604  1A5C  0086               	movwf	6
 22605  1A5D  0187               	clrf	7
 22606  1A5E  3F40               	moviw [0]fsr1
 22607  1A5F  0021               	movlb	1	; select bank1
 22608  1A60  00E5               	movwf	_UpIntLimitRT^(0+128)
 22609  1A61  3F41               	moviw [1]fsr1
 22610  1A62  00E6               	movwf	(_UpIntLimitRT+1)^(0+128)
 22611                           
 22612                           ;config.c: 89: UpFractLimitRT = *p_fractLimit;
 22613  1A63  0020               	movlb	0	; select bank0
 22614  1A64  0827               	movf	Config_GetUpLimit@p_fractLimit,w
 22615  1A65  0086               	movwf	6
 22616  1A66  0828               	movf	Config_GetUpLimit@p_fractLimit+1,w
 22617  1A67  0087               	movwf	7
 22618  1A68  3F40               	moviw [0]fsr1
 22619  1A69  0022               	movlb	2	; select bank2
 22620  1A6A  00E6               	movwf	_UpFractLimitRT^(0+256)
 22621  1A6B  3F41               	moviw [1]fsr1
 22622  1A6C  00E7               	movwf	(_UpFractLimitRT+1)^(0+256)
 22623  1A6D  0008               	return
 22624  1A6E                     __end_of_Config_GetUpLimit:	
 22625                           
 22626                           	psect	text95
 22627  1AA0                     __ptext95:	
 22628 ;; *************** function _Config_GetBottomLimit *****************
 22629 ;; Defined at:
 22630 ;;		line 94 in file "config.c"
 22631 ;; Parameters:    Size  Location     Type
 22632 ;;  p_intLimit      2    7[BANK0 ] PTR int 
 22633 ;;		 -> curBottomIntLimit(2), BottomIntLimitRT(2), processCommand@curIntLimit(2), 
 22634 ;;  p_fractLimit    2    9[BANK0 ] PTR int 
 22635 ;;		 -> curBottomFractLimit(2), BottomFractLimitRT(2), processCommand@curFractLimit(2), 
 22636 ;; Auto vars:     Size  Location     Type
 22637 ;;  bufData         4   11[BANK0 ] unsigned char [4]
 22638 ;; Return value:  Size  Location     Type
 22639 ;;		None               void
 22640 ;; Registers used:
 22641 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22642 ;; Tracked objects:
 22643 ;;		On entry : 0/0
 22644 ;;		On exit  : 0/0
 22645 ;;		Unchanged: 0/0
 22646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22647 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22648 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22650 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22651 ;;Total ram usage:        9 bytes
 22652 ;; Hardware stack levels used:    1
 22653 ;; Hardware stack levels required when called:    4
 22654 ;; This function calls:
 22655 ;;		_EEPROM_25AA040A_ReadToBuffer
 22656 ;; This function is called by:
 22657 ;;		_processCommand
 22658 ;;		_Config_InitRTValues
 22659 ;;		_ChangeToSettingsScreen
 22660 ;; This function uses a non-reentrant model
 22661 ;;
 22662                           
 22663                           
 22664                           ;psect for function _Config_GetBottomLimit
 22665  1AA0                     _Config_GetBottomLimit:	
 22666                           
 22667                           ;config.c: 96: uint8_t bufData[4];
 22668                           ;config.c: 97: EEPROM_25AA040A_ReadToBuffer(0x04, bufData, 4);
 22669                           
 22670                           ;incstack = 0
 22671                           ; Regs used in _Config_GetBottomLimit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22672  1AA0  3004               	movlw	4
 22673  1AA1  00F3               	movwf	EEPROM_25AA040A_ReadToBuffer@address
 22674  1AA2  3000               	movlw	0
 22675  1AA3  00F4               	movwf	EEPROM_25AA040A_ReadToBuffer@address+1
 22676  1AA4  302B               	movlw	(low (Config_GetBottomLimit@bufData| 0))& (0+255)
 22677  1AA5  00F8               	movwf	??_Config_GetBottomLimit
 22678  1AA6  0878               	movf	??_Config_GetBottomLimit,w
 22679  1AA7  00F5               	movwf	EEPROM_25AA040A_ReadToBuffer@dst
 22680  1AA8  3004               	movlw	4
 22681  1AA9  00F6               	movwf	EEPROM_25AA040A_ReadToBuffer@dataLength
 22682  1AAA  3000               	movlw	0
 22683  1AAB  00F7               	movwf	EEPROM_25AA040A_ReadToBuffer@dataLength+1
 22684  1AAC  319D  25AF         	fcall	_EEPROM_25AA040A_ReadToBuffer
 22685                           
 22686                           ;config.c: 100: *p_intLimit = (int16_t)bufData[0] | (int16_t)(bufData[1] << 8);
 22687  1AAE  0020               	movlb	0	; select bank0
 22688  1AAF  0827               	movf	Config_GetBottomLimit@p_intLimit,w
 22689  1AB0  0086               	movwf	6
 22690  1AB1  0828               	movf	Config_GetBottomLimit@p_intLimit+1,w
 22691  1AB2  0087               	movwf	7
 22692  1AB3  082B               	movf	Config_GetBottomLimit@bufData,w
 22693  1AB4  3FC0               	movwi [0]fsr1
 22694  1AB5  082C               	movf	Config_GetBottomLimit@bufData+1,w
 22695  1AB6  3FC1               	movwi [1]fsr1
 22696                           
 22697                           ;config.c: 101: *p_fractLimit = (int16_t)bufData[2] | (int16_t)(bufData[3] << 8);
 22698  1AB7  0829               	movf	Config_GetBottomLimit@p_fractLimit,w
 22699  1AB8  0086               	movwf	6
 22700  1AB9  082A               	movf	Config_GetBottomLimit@p_fractLimit+1,w
 22701  1ABA  0087               	movwf	7
 22702  1ABB  082D               	movf	Config_GetBottomLimit@bufData+2,w
 22703  1ABC  3FC0               	movwi [0]fsr1
 22704  1ABD  082E               	movf	Config_GetBottomLimit@bufData+3,w
 22705  1ABE  3FC1               	movwi [1]fsr1
 22706                           
 22707                           ;config.c: 103: BottomIntLimitRT = *p_intLimit;
 22708  1ABF  0827               	movf	Config_GetBottomLimit@p_intLimit,w
 22709  1AC0  0086               	movwf	6
 22710  1AC1  0828               	movf	Config_GetBottomLimit@p_intLimit+1,w
 22711  1AC2  0087               	movwf	7
 22712  1AC3  3F40               	moviw [0]fsr1
 22713  1AC4  0022               	movlb	2	; select bank2
 22714  1AC5  00E2               	movwf	_BottomIntLimitRT^(0+256)
 22715  1AC6  3F41               	moviw [1]fsr1
 22716  1AC7  00E3               	movwf	(_BottomIntLimitRT+1)^(0+256)
 22717                           
 22718                           ;config.c: 104: BottomFractLimitRT = *p_fractLimit;
 22719  1AC8  0020               	movlb	0	; select bank0
 22720  1AC9  0829               	movf	Config_GetBottomLimit@p_fractLimit,w
 22721  1ACA  0086               	movwf	6
 22722  1ACB  082A               	movf	Config_GetBottomLimit@p_fractLimit+1,w
 22723  1ACC  0087               	movwf	7
 22724  1ACD  3F40               	moviw [0]fsr1
 22725  1ACE  0022               	movlb	2	; select bank2
 22726  1ACF  00E0               	movwf	_BottomFractLimitRT^(0+256)
 22727  1AD0  3F41               	moviw [1]fsr1
 22728  1AD1  00E1               	movwf	(_BottomFractLimitRT+1)^(0+256)
 22729  1AD2  0008               	return
 22730  1AD3                     __end_of_Config_GetBottomLimit:	
 22731                           
 22732                           	psect	text96
 22733  1DAF                     __ptext96:	
 22734 ;; *************** function _EEPROM_25AA040A_ReadToBuffer *****************
 22735 ;; Defined at:
 22736 ;;		line 77 in file "25AA040A.c"
 22737 ;; Parameters:    Size  Location     Type
 22738 ;;  address         2    3[COMMON] unsigned int 
 22739 ;;  dst             1    5[COMMON] PTR unsigned char 
 22740 ;;		 -> printAllAlarmEvents@evt(16), _ACKLastSavedEvent@newEvent(16), Config_GetBottomLimit@bufData(4), Config_GetUpLimi
      +t@bufData(4), 
 22741 ;;  dataLength      2    6[COMMON] unsigned int 
 22742 ;; Auto vars:     Size  Location     Type
 22743 ;;  cntr            2    5[BANK0 ] unsigned int 
 22744 ;;  opcode          1    4[BANK0 ] unsigned char 
 22745 ;; Return value:  Size  Location     Type
 22746 ;;		None               void
 22747 ;; Registers used:
 22748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22749 ;; Tracked objects:
 22750 ;;		On entry : 0/0
 22751 ;;		On exit  : 0/0
 22752 ;;		Unchanged: 0/0
 22753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22754 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22755 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22756 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22757 ;;      Totals:         5       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22758 ;;Total ram usage:       12 bytes
 22759 ;; Hardware stack levels used:    1
 22760 ;; Hardware stack levels required when called:    3
 22761 ;; This function calls:
 22762 ;;		_SPI_Exchange8bit
 22763 ;; This function is called by:
 22764 ;;		_Config_GetUpLimit
 22765 ;;		_Config_GetBottomLimit
 22766 ;;		__ACKLastSavedEvent
 22767 ;;		_printAllAlarmEvents
 22768 ;; This function uses a non-reentrant model
 22769 ;;
 22770                           
 22771                           
 22772                           ;psect for function _EEPROM_25AA040A_ReadToBuffer
 22773  1DAF                     _EEPROM_25AA040A_ReadToBuffer:	
 22774                           
 22775                           ;25AA040A.c: 79: if (dst != (0))
 22776                           
 22777                           ;incstack = 0
 22778                           ; Regs used in _EEPROM_25AA040A_ReadToBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 22779  1DAF  0875               	movf	EEPROM_25AA040A_ReadToBuffer@dst,w
 22780  1DB0  1903               	btfsc	3,2
 22781  1DB1  0008               	return
 22782                           
 22783                           ;25AA040A.c: 80: {
 22784                           ;25AA040A.c: 82: uint8_t opcode = (EEPROM_READ) | ( ( (address) >> 9) << 3);
 22785  1DB2  0874               	movf	EEPROM_25AA040A_ReadToBuffer@address+1,w
 22786  1DB3  0020               	movlb	0	; select bank0
 22787  1DB4  00A1               	movwf	??_EEPROM_25AA040A_ReadToBuffer+1
 22788  1DB5  0873               	movf	EEPROM_25AA040A_ReadToBuffer@address,w
 22789  1DB6  00A0               	movwf	??_EEPROM_25AA040A_ReadToBuffer
 22790  1DB7  3009               	movlw	9
 22791  1DB8                     u8125:	
 22792  1DB8  36A1               	lsrf	??_EEPROM_25AA040A_ReadToBuffer+1,f
 22793  1DB9  0CA0               	rrf	??_EEPROM_25AA040A_ReadToBuffer,f
 22794  1DBA  0B89               	decfsz	9,f
 22795  1DBB  2DB8               	goto	u8125
 22796  1DBC  0820               	movf	??_EEPROM_25AA040A_ReadToBuffer,w
 22797  1DBD  00A2               	movwf	??_EEPROM_25AA040A_ReadToBuffer+2
 22798  1DBE  3002               	movlw	2
 22799  1DBF                     u8135:	
 22800  1DBF  35A2               	lslf	??_EEPROM_25AA040A_ReadToBuffer+2,f
 22801  1DC0  3EFF               	addlw	-1
 22802  1DC1  1D03               	skipz
 22803  1DC2  2DBF               	goto	u8135
 22804  1DC3  3522               	lslf	??_EEPROM_25AA040A_ReadToBuffer+2,w
 22805  1DC4  3803               	iorlw	3
 22806  1DC5  00A3               	movwf	??_EEPROM_25AA040A_ReadToBuffer+3
 22807  1DC6  0823               	movf	??_EEPROM_25AA040A_ReadToBuffer+3,w
 22808  1DC7  00A4               	movwf	EEPROM_25AA040A_ReadToBuffer@opcode
 22809                           
 22810                           ;25AA040A.c: 83: uint16_t cntr = 0;
 22811  1DC8  01A5               	clrf	EEPROM_25AA040A_ReadToBuffer@cntr
 22812  1DC9  01A6               	clrf	EEPROM_25AA040A_ReadToBuffer@cntr+1
 22813                           
 22814                           ;25AA040A.c: 84: do { LATC1 = 0; } while(0);
 22815  1DCA  0022               	movlb	2	; select bank2
 22816  1DCB  108E               	bcf	14,1	;volatile
 22817                           
 22818                           ;25AA040A.c: 85: SPI_Exchange8bit(opcode);
 22819  1DCC  0020               	movlb	0	; select bank0
 22820  1DCD  0824               	movf	EEPROM_25AA040A_ReadToBuffer@opcode,w
 22821  1DCE  31A6  2628  319D   	fcall	_SPI_Exchange8bit
 22822                           
 22823                           ;25AA040A.c: 86: SPI_Exchange8bit((uint8_t) (address & 0xFF));
 22824  1DD1  0873               	movf	EEPROM_25AA040A_ReadToBuffer@address,w
 22825  1DD2  31A6  2628  319D   	fcall	_SPI_Exchange8bit
 22826  1DD5                     l6919:	
 22827                           ;25AA040A.c: 88: while (cntr < dataLength)
 22828                           
 22829  1DD5  0877               	movf	EEPROM_25AA040A_ReadToBuffer@dataLength+1,w
 22830  1DD6  0020               	movlb	0	; select bank0
 22831  1DD7  0226               	subwf	EEPROM_25AA040A_ReadToBuffer@cntr+1,w
 22832  1DD8  1D03               	skipz
 22833  1DD9  2DDC               	goto	u8145
 22834  1DDA  0876               	movf	EEPROM_25AA040A_ReadToBuffer@dataLength,w
 22835  1DDB  0225               	subwf	EEPROM_25AA040A_ReadToBuffer@cntr,w
 22836  1DDC                     u8145:	
 22837  1DDC  1803               	btfsc	3,0
 22838  1DDD  2DF1               	goto	l169
 22839                           
 22840                           ;25AA040A.c: 89: {
 22841                           ;25AA040A.c: 90: *(dst + cntr) = SPI_Exchange8bit(0);
 22842  1DDE  3000               	movlw	0
 22843  1DDF  31A6  2628  319D   	fcall	_SPI_Exchange8bit
 22844  1DE2  0020               	movlb	0	; select bank0
 22845  1DE3  00A0               	movwf	??_EEPROM_25AA040A_ReadToBuffer
 22846  1DE4  0825               	movf	EEPROM_25AA040A_ReadToBuffer@cntr,w
 22847  1DE5  0775               	addwf	EEPROM_25AA040A_ReadToBuffer@dst,w
 22848  1DE6  00A1               	movwf	??_EEPROM_25AA040A_ReadToBuffer+1
 22849  1DE7  0821               	movf	??_EEPROM_25AA040A_ReadToBuffer+1,w
 22850  1DE8  0086               	movwf	6
 22851  1DE9  0187               	clrf	7
 22852  1DEA  0820               	movf	??_EEPROM_25AA040A_ReadToBuffer,w
 22853  1DEB  0081               	movwf	1
 22854                           
 22855                           ;25AA040A.c: 91: ++cntr;
 22856  1DEC  3001               	movlw	1
 22857  1DED  07A5               	addwf	EEPROM_25AA040A_ReadToBuffer@cntr,f
 22858  1DEE  3000               	movlw	0
 22859  1DEF  3DA6               	addwfc	EEPROM_25AA040A_ReadToBuffer@cntr+1,f
 22860  1DF0  2DD5               	goto	l6919
 22861  1DF1                     l169:	
 22862                           ;25AA040A.c: 92: }
 22863                           ;25AA040A.c: 93: do { LATC1 = 1; } while(0);
 22864                           
 22865  1DF1  0022               	movlb	2	; select bank2
 22866  1DF2  148E               	bsf	14,1	;volatile
 22867  1DF3  0008               	return
 22868  1DF4                     __end_of_EEPROM_25AA040A_ReadToBuffer:	
 22869                           
 22870                           	psect	text97
 22871  263B                     __ptext97:	
 22872 ;; *************** function _Alarm_Init *****************
 22873 ;; Defined at:
 22874 ;;		line 87 in file "alarm.c"
 22875 ;; Parameters:    Size  Location     Type
 22876 ;;		None
 22877 ;; Auto vars:     Size  Location     Type
 22878 ;;		None
 22879 ;; Return value:  Size  Location     Type
 22880 ;;		None               void
 22881 ;; Registers used:
 22882 ;;		wreg, status,2, status,0, pclath, cstack
 22883 ;; Tracked objects:
 22884 ;;		On entry : 0/0
 22885 ;;		On exit  : 0/0
 22886 ;;		Unchanged: 0/0
 22887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22890 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22892 ;;Total ram usage:        1 bytes
 22893 ;; Hardware stack levels used:    1
 22894 ;; Hardware stack levels required when called:    4
 22895 ;; This function calls:
 22896 ;;		_EEPROM_25AA040A_ReadByte
 22897 ;; This function is called by:
 22898 ;;		_main
 22899 ;; This function uses a non-reentrant model
 22900 ;;
 22901                           
 22902                           
 22903                           ;psect for function _Alarm_Init
 22904  263B                     _Alarm_Init:	
 22905                           
 22906                           ;alarm.c: 89: SavedEventCounter = EEPROM_25AA040A_ReadByte(0x0F);
 22907                           
 22908                           ;incstack = 0
 22909                           ; Regs used in _Alarm_Init: [wreg+status,2+status,0+pclath+cstack]
 22910  263B  300F               	movlw	15
 22911  263C  00F3               	movwf	EEPROM_25AA040A_ReadByte@address
 22912  263D  3000               	movlw	0
 22913  263E  00F4               	movwf	EEPROM_25AA040A_ReadByte@address+1
 22914  263F  319A  22D3         	fcall	_EEPROM_25AA040A_ReadByte
 22915  2641  00F9               	movwf	??_Alarm_Init
 22916  2642  0879               	movf	??_Alarm_Init,w
 22917  2643  0021               	movlb	1	; select bank1
 22918  2644  00E1               	movwf	_SavedEventCounter^(0+128)
 22919  2645  0008               	return
 22920  2646                     __end_of_Alarm_Init:	
 22921                           
 22922                           	psect	text98
 22923  1AD3                     __ptext98:	
 22924 ;; *************** function _EEPROM_25AA040A_ReadByte *****************
 22925 ;; Defined at:
 22926 ;;		line 58 in file "25AA040A.c"
 22927 ;; Parameters:    Size  Location     Type
 22928 ;;  address         2    3[COMMON] unsigned int 
 22929 ;; Auto vars:     Size  Location     Type
 22930 ;;  result          1    1[BANK0 ] unsigned char 
 22931 ;;  opcode          1    0[BANK0 ] unsigned char 
 22932 ;; Return value:  Size  Location     Type
 22933 ;;                  1    wreg      unsigned char 
 22934 ;; Registers used:
 22935 ;;		wreg, status,2, status,0, pclath, cstack
 22936 ;; Tracked objects:
 22937 ;;		On entry : 0/0
 22938 ;;		On exit  : 0/0
 22939 ;;		Unchanged: 0/0
 22940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22942 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22943 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22944 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22945 ;;Total ram usage:        8 bytes
 22946 ;; Hardware stack levels used:    1
 22947 ;; Hardware stack levels required when called:    3
 22948 ;; This function calls:
 22949 ;;		_SPI_Exchange8bit
 22950 ;; This function is called by:
 22951 ;;		_Alarm_Init
 22952 ;; This function uses a non-reentrant model
 22953 ;;
 22954                           
 22955                           
 22956                           ;psect for function _EEPROM_25AA040A_ReadByte
 22957  1AD3                     _EEPROM_25AA040A_ReadByte:	
 22958                           
 22959                           ;25AA040A.c: 60: uint8_t opcode = (EEPROM_READ) | ( ( (address) >> 9) << 3);
 22960                           
 22961                           ;incstack = 0
 22962                           ; Regs used in _EEPROM_25AA040A_ReadByte: [wreg+status,2+status,0+pclath+cstack]
 22963  1AD3  0874               	movf	EEPROM_25AA040A_ReadByte@address+1,w
 22964  1AD4  00F6               	movwf	??_EEPROM_25AA040A_ReadByte+1
 22965  1AD5  0873               	movf	EEPROM_25AA040A_ReadByte@address,w
 22966  1AD6  00F5               	movwf	??_EEPROM_25AA040A_ReadByte
 22967  1AD7  3009               	movlw	9
 22968  1AD8                     u8845:	
 22969  1AD8  36F6               	lsrf	??_EEPROM_25AA040A_ReadByte+1,f
 22970  1AD9  0CF5               	rrf	??_EEPROM_25AA040A_ReadByte,f
 22971  1ADA  0B89               	decfsz	9,f
 22972  1ADB  2AD8               	goto	u8845
 22973  1ADC  0875               	movf	??_EEPROM_25AA040A_ReadByte,w
 22974  1ADD  00F7               	movwf	??_EEPROM_25AA040A_ReadByte+2
 22975  1ADE  3002               	movlw	2
 22976  1ADF                     u8855:	
 22977  1ADF  35F7               	lslf	??_EEPROM_25AA040A_ReadByte+2,f
 22978  1AE0  3EFF               	addlw	-1
 22979  1AE1  1D03               	skipz
 22980  1AE2  2ADF               	goto	u8855
 22981  1AE3  3577               	lslf	??_EEPROM_25AA040A_ReadByte+2,w
 22982  1AE4  3803               	iorlw	3
 22983  1AE5  00F8               	movwf	??_EEPROM_25AA040A_ReadByte+3
 22984  1AE6  0878               	movf	??_EEPROM_25AA040A_ReadByte+3,w
 22985  1AE7  0020               	movlb	0	; select bank0
 22986  1AE8  00A0               	movwf	EEPROM_25AA040A_ReadByte@opcode
 22987                           
 22988                           ;25AA040A.c: 61: uint8_t result = 0xAA;
 22989  1AE9  30AA               	movlw	170
 22990  1AEA  00F5               	movwf	??_EEPROM_25AA040A_ReadByte
 22991  1AEB  0875               	movf	??_EEPROM_25AA040A_ReadByte,w
 22992  1AEC  00A1               	movwf	EEPROM_25AA040A_ReadByte@result
 22993                           
 22994                           ;25AA040A.c: 65: do { LATC1 = 0; } while(0);
 22995  1AED  0022               	movlb	2	; select bank2
 22996  1AEE  108E               	bcf	14,1	;volatile
 22997                           
 22998                           ;25AA040A.c: 66: SPI_Exchange8bit(opcode);
 22999  1AEF  0020               	movlb	0	; select bank0
 23000  1AF0  0820               	movf	EEPROM_25AA040A_ReadByte@opcode,w
 23001  1AF1  31A6  2628  319A   	fcall	_SPI_Exchange8bit
 23002                           
 23003                           ;25AA040A.c: 67: result = SPI_Exchange8bit((uint8_t) (address & 0xFF));
 23004  1AF4  0873               	movf	EEPROM_25AA040A_ReadByte@address,w
 23005  1AF5  31A6  2628  319A   	fcall	_SPI_Exchange8bit
 23006  1AF8  00F5               	movwf	??_EEPROM_25AA040A_ReadByte
 23007  1AF9  0875               	movf	??_EEPROM_25AA040A_ReadByte,w
 23008  1AFA  0020               	movlb	0	; select bank0
 23009  1AFB  00A1               	movwf	EEPROM_25AA040A_ReadByte@result
 23010                           
 23011                           ;25AA040A.c: 68: result = SPI_Exchange8bit(0);
 23012  1AFC  3000               	movlw	0
 23013  1AFD  31A6  2628         	fcall	_SPI_Exchange8bit
 23014  1AFF  00F5               	movwf	??_EEPROM_25AA040A_ReadByte
 23015  1B00  0875               	movf	??_EEPROM_25AA040A_ReadByte,w
 23016  1B01  0020               	movlb	0	; select bank0
 23017  1B02  00A1               	movwf	EEPROM_25AA040A_ReadByte@result
 23018                           
 23019                           ;25AA040A.c: 69: do { LATC1 = 1; } while(0);
 23020  1B03  0022               	movlb	2	; select bank2
 23021  1B04  148E               	bsf	14,1	;volatile
 23022                           
 23023                           ;25AA040A.c: 72: return result;
 23024  1B05  0020               	movlb	0	; select bank0
 23025  1B06  0821               	movf	EEPROM_25AA040A_ReadByte@result,w
 23026  1B07  0008               	return
 23027  1B08                     __end_of_EEPROM_25AA040A_ReadByte:	
 23028                           
 23029                           	psect	text99
 23030  2628                     __ptext99:	
 23031 ;; *************** function _SPI_Exchange8bit *****************
 23032 ;; Defined at:
 23033 ;;		line 78 in file "mcc_generated_files/spi.c"
 23034 ;; Parameters:    Size  Location     Type
 23035 ;;  data            1    wreg     unsigned char 
 23036 ;; Auto vars:     Size  Location     Type
 23037 ;;  data            1    2[COMMON] unsigned char 
 23038 ;; Return value:  Size  Location     Type
 23039 ;;                  1    wreg      unsigned char 
 23040 ;; Registers used:
 23041 ;;		wreg
 23042 ;; Tracked objects:
 23043 ;;		On entry : 0/0
 23044 ;;		On exit  : 0/0
 23045 ;;		Unchanged: 0/0
 23046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23050 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23051 ;;Total ram usage:        1 bytes
 23052 ;; Hardware stack levels used:    1
 23053 ;; Hardware stack levels required when called:    2
 23054 ;; This function calls:
 23055 ;;		Nothing
 23056 ;; This function is called by:
 23057 ;;		__EEPROM_25AA040A_ReadStatus
 23058 ;;		__EEPROM_25AA040A_WriteEnable
 23059 ;;		_EEPROM_25AA040A_ReadByte
 23060 ;;		_EEPROM_25AA040A_ReadToBuffer
 23061 ;;		_EEPROM_25AA040A_WriteByte
 23062 ;;		_EEPROM_25AA040A_WriteBuffer
 23063 ;;		_EEPROM_25AA040A_Dump
 23064 ;;		_SPI_Exchange8bitBuffer
 23065 ;; This function uses a non-reentrant model
 23066 ;;
 23067                           
 23068                           
 23069                           ;psect for function _SPI_Exchange8bit
 23070  2628                     _SPI_Exchange8bit:	
 23071                           
 23072                           ;incstack = 0
 23073                           ; Regs used in _SPI_Exchange8bit: [wreg]
 23074                           ;SPI_Exchange8bit@data stored from wreg
 23075  2628  00F2               	movwf	SPI_Exchange8bit@data
 23076                           
 23077                           ;spi.c: 81: SSP1CON1bits.WCOL = 0;
 23078  2629  0024               	movlb	4	; select bank4
 23079  262A  1395               	bcf	21,7	;volatile
 23080                           
 23081                           ;spi.c: 83: SSPBUF = data;
 23082  262B  0872               	movf	SPI_Exchange8bit@data,w
 23083  262C  0091               	movwf	17	;volatile
 23084  262D                     l449:	
 23085                           ;spi.c: 86: {
 23086                           
 23087                           ;spi.c: 85: while (SSP1STATbits.BF == 0x0)
 23088                           
 23089  262D  1C14               	btfss	20,0	;volatile
 23090  262E  2E2D               	goto	l449
 23091                           
 23092                           ;spi.c: 87: }
 23093                           ;spi.c: 89: return (SSPBUF);
 23094  262F  0811               	movf	17,w	;volatile
 23095  2630  0008               	return
 23096  2631                     __end_of_SPI_Exchange8bit:	
 23097                           
 23098                           	psect	intentry
 23099  0004                     __pintentry:	
 23100 ;; *************** function _INTERRUPT_InterruptManager *****************
 23101 ;; Defined at:
 23102 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23103 ;; Parameters:    Size  Location     Type
 23104 ;;		None
 23105 ;; Auto vars:     Size  Location     Type
 23106 ;;		None
 23107 ;; Return value:  Size  Location     Type
 23108 ;;		None               void
 23109 ;; Registers used:
 23110 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23111 ;; Tracked objects:
 23112 ;;		On entry : 0/0
 23113 ;;		On exit  : 0/0
 23114 ;;		Unchanged: 0/0
 23115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23118 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23119 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23120 ;;Total ram usage:        1 bytes
 23121 ;; Hardware stack levels used:    1
 23122 ;; Hardware stack levels required when called:    1
 23123 ;; This function calls:
 23124 ;;		_EUSART_Receive_ISR
 23125 ;;		_EUSART_Transmit_ISR
 23126 ;;		_TMR2_ISR
 23127 ;;		_TMR4_ISR
 23128 ;; This function is called by:
 23129 ;;		Interrupt level 1
 23130 ;; This function uses a non-reentrant model
 23131 ;;
 23132                           
 23133  0004                     _INTERRUPT_InterruptManager:	
 23134                           
 23135                           ;incstack = 0
 23136                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 23137  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 23138  0005  3180               	pagesel	$
 23139  0006  0020               	movlb	0	; select bank0
 23140  0007  087F               	movf	127,w
 23141  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
 23142                           
 23143                           ;interrupt_manager.c: 55: if (PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 23144  0009  0021               	movlb	1	; select bank1
 23145  000A  1C91               	btfss	17,1	;volatile
 23146  000B  2813               	goto	i1l619
 23147  000C  0020               	movlb	0	; select bank0
 23148  000D  1C91               	btfss	17,1	;volatile
 23149  000E  2813               	goto	i1l619
 23150                           
 23151                           ;interrupt_manager.c: 56: {
 23152                           ;interrupt_manager.c: 57: TMR2_ISR();
 23153  000F  31A5  25F2  3180   	fcall	_TMR2_ISR
 23154                           
 23155                           ;interrupt_manager.c: 58: }
 23156  0012  282F               	goto	i1l627
 23157  0013                     i1l619:	
 23158                           
 23159                           ;interrupt_manager.c: 59: else if (PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 23160  0013  0021               	movlb	1	; select bank1
 23161  0014  1E91               	btfss	17,5	;volatile
 23162  0015  281D               	goto	i1l621
 23163  0016  0020               	movlb	0	; select bank0
 23164  0017  1E91               	btfss	17,5	;volatile
 23165  0018  281D               	goto	i1l621
 23166                           
 23167                           ;interrupt_manager.c: 60: {
 23168                           ;interrupt_manager.c: 61: EUSART_Receive_ISR();
 23169  0019  3198  2072  3180   	fcall	_EUSART_Receive_ISR
 23170                           
 23171                           ;interrupt_manager.c: 62: }
 23172  001C  282F               	goto	i1l627
 23173  001D                     i1l621:	
 23174                           
 23175                           ;interrupt_manager.c: 63: else if (PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 23176  001D  0021               	movlb	1	; select bank1
 23177  001E  1E11               	btfss	17,4	;volatile
 23178  001F  2827               	goto	i1l623
 23179  0020  0020               	movlb	0	; select bank0
 23180  0021  1E11               	btfss	17,4	;volatile
 23181  0022  2827               	goto	i1l623
 23182                           
 23183                           ;interrupt_manager.c: 64: {
 23184                           ;interrupt_manager.c: 65: EUSART_Transmit_ISR();
 23185  0023  3198  20AC  3180   	fcall	_EUSART_Transmit_ISR
 23186                           
 23187                           ;interrupt_manager.c: 66: }
 23188  0026  282F               	goto	i1l627
 23189  0027                     i1l623:	
 23190                           
 23191                           ;interrupt_manager.c: 67: else if (PIE2bits.TMR4IE == 1 && PIR2bits.TMR4IF == 1)
 23192  0027  0021               	movlb	1	; select bank1
 23193  0028  1C92               	btfss	18,1	;volatile
 23194  0029  282F               	goto	i1l627
 23195  002A  0020               	movlb	0	; select bank0
 23196  002B  1C92               	btfss	18,1	;volatile
 23197  002C  282F               	goto	i1l627
 23198                           
 23199                           ;interrupt_manager.c: 68: {
 23200                           ;interrupt_manager.c: 69: TMR4_ISR();
 23201  002D  31A7  27CE         	fcall	_TMR4_ISR
 23202  002F                     i1l627:	
 23203                           ;interrupt_manager.c: 71: else
 23204                           ;interrupt_manager.c: 72: {
 23205                           
 23206                           ;interrupt_manager.c: 70: }
 23207                           
 23208  002F  0871               	movf	??_INTERRUPT_InterruptManager,w
 23209  0030  0020               	movlb	0	; select bank0
 23210  0031  00FF               	movwf	127
 23211  0032  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 23212  0033  0009               	retfie
 23213  0034                     __end_of_INTERRUPT_InterruptManager:	
 23214                           
 23215                           	psect	text101
 23216  27CE                     __ptext101:	
 23217 ;; *************** function _TMR4_ISR *****************
 23218 ;; Defined at:
 23219 ;;		line 127 in file "mcc_generated_files/tmr4.c"
 23220 ;; Parameters:    Size  Location     Type
 23221 ;;		None
 23222 ;; Auto vars:     Size  Location     Type
 23223 ;;		None
 23224 ;; Return value:  Size  Location     Type
 23225 ;;		None               void
 23226 ;; Registers used:
 23227 ;;		wreg, status,2
 23228 ;; Tracked objects:
 23229 ;;		On entry : 0/0
 23230 ;;		On exit  : 0/0
 23231 ;;		Unchanged: 0/0
 23232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23237 ;;Total ram usage:        0 bytes
 23238 ;; Hardware stack levels used:    1
 23239 ;; This function calls:
 23240 ;;		Nothing
 23241 ;; This function is called by:
 23242 ;;		_INTERRUPT_InterruptManager
 23243 ;; This function uses a non-reentrant model
 23244 ;;
 23245                           
 23246                           
 23247                           ;psect for function _TMR4_ISR
 23248  27CE                     _TMR4_ISR:	
 23249                           
 23250                           ;tmr4.c: 130: PIR2bits.TMR4IF = 0;
 23251                           
 23252                           ;incstack = 0
 23253                           ; Regs used in _TMR4_ISR: [wreg+status,2]
 23254  27CE  0020               	movlb	0	; select bank0
 23255  27CF  1092               	bcf	18,1	;volatile
 23256                           
 23257                           ;tmr4.c: 133: TMR4_MsCntr++;
 23258  27D0  3001               	movlw	1
 23259  27D1  0022               	movlb	2	; select bank2
 23260  27D2  07B6               	addwf	_TMR4_MsCntr^(0+256),f	;volatile
 23261  27D3  3000               	movlw	0
 23262  27D4  3DB7               	addwfc	(_TMR4_MsCntr+1)^(0+256),f	;volatile
 23263                           
 23264                           ;tmr4.c: 134: if(TMR4_MsCntr >= 1000)
 23265  27D5  3003               	movlw	3
 23266  27D6  0237               	subwf	(_TMR4_MsCntr+1)^(0+256),w	;volatile
 23267  27D7  30E8               	movlw	232
 23268  27D8  1903               	skipnz
 23269  27D9  0236               	subwf	_TMR4_MsCntr^(0+256),w	;volatile
 23270  27DA  1C03               	skipc
 23271  27DB  0008               	return
 23272                           
 23273                           ;tmr4.c: 135: {
 23274                           ;tmr4.c: 136: TMR4_SecCntr++;
 23275  27DC  3001               	movlw	1
 23276  27DD  07A0               	addwf	_TMR4_SecCntr^(0+256),f	;volatile
 23277  27DE  3000               	movlw	0
 23278  27DF  3DA1               	addwfc	(_TMR4_SecCntr+1)^(0+256),f	;volatile
 23279  27E0  3000               	movlw	0
 23280  27E1  3DA2               	addwfc	(_TMR4_SecCntr+2)^(0+256),f	;volatile
 23281  27E2  3000               	movlw	0
 23282  27E3  3DA3               	addwfc	(_TMR4_SecCntr+3)^(0+256),f	;volatile
 23283                           
 23284                           ;tmr4.c: 137: TMR4_MsCntr = 0;
 23285  27E4  01B6               	clrf	_TMR4_MsCntr^(0+256)	;volatile
 23286  27E5  01B7               	clrf	(_TMR4_MsCntr+1)^(0+256)	;volatile
 23287  27E6  0008               	return
 23288  27E7                     __end_of_TMR4_ISR:	
 23289                           
 23290                           	psect	text102
 23291  25F2                     __ptext102:	
 23292 ;; *************** function _TMR2_ISR *****************
 23293 ;; Defined at:
 23294 ;;		line 107 in file "mcc_generated_files/tmr2.c"
 23295 ;; Parameters:    Size  Location     Type
 23296 ;;		None
 23297 ;; Auto vars:     Size  Location     Type
 23298 ;;		None
 23299 ;; Return value:  Size  Location     Type
 23300 ;;		None               void
 23301 ;; Registers used:
 23302 ;;		None
 23303 ;; Tracked objects:
 23304 ;;		On entry : 0/0
 23305 ;;		On exit  : 0/0
 23306 ;;		Unchanged: 0/0
 23307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23312 ;;Total ram usage:        0 bytes
 23313 ;; Hardware stack levels used:    1
 23314 ;; This function calls:
 23315 ;;		Nothing
 23316 ;; This function is called by:
 23317 ;;		_INTERRUPT_InterruptManager
 23318 ;; This function uses a non-reentrant model
 23319 ;;
 23320                           
 23321                           
 23322                           ;psect for function _TMR2_ISR
 23323  25F2                     _TMR2_ISR:	
 23324                           
 23325                           ;tmr2.c: 110: PIR1bits.TMR2IF = 0;
 23326                           
 23327                           ;incstack = 0
 23328                           ; Regs used in _TMR2_ISR: []
 23329  25F2  0020               	movlb	0	; select bank0
 23330  25F3  1091               	bcf	17,1	;volatile
 23331  25F4  0008               	return
 23332  25F5                     __end_of_TMR2_ISR:	
 23333                           
 23334                           	psect	text103
 23335  18AC                     __ptext103:	
 23336 ;; *************** function _EUSART_Transmit_ISR *****************
 23337 ;; Defined at:
 23338 ;;		line 167 in file "mcc_generated_files/eusart.c"
 23339 ;; Parameters:    Size  Location     Type
 23340 ;;		None
 23341 ;; Auto vars:     Size  Location     Type
 23342 ;;		None
 23343 ;; Return value:  Size  Location     Type
 23344 ;;		None               void
 23345 ;; Registers used:
 23346 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23347 ;; Tracked objects:
 23348 ;;		On entry : 0/0
 23349 ;;		On exit  : 0/0
 23350 ;;		Unchanged: 0/0
 23351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23355 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23356 ;;Total ram usage:        1 bytes
 23357 ;; Hardware stack levels used:    1
 23358 ;; This function calls:
 23359 ;;		Nothing
 23360 ;; This function is called by:
 23361 ;;		_INTERRUPT_InterruptManager
 23362 ;; This function uses a non-reentrant model
 23363 ;;
 23364                           
 23365                           
 23366                           ;psect for function _EUSART_Transmit_ISR
 23367  18AC                     _EUSART_Transmit_ISR:	
 23368                           
 23369                           ;eusart.c: 171: if (sizeof (eusartTxBuffer) > eusartTxBufferRemaining)
 23370                           
 23371                           ;incstack = 0
 23372                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 23373  18AC  3010               	movlw	16
 23374  18AD  0022               	movlb	2	; select bank2
 23375  18AE  026E               	subwf	_eusartTxBufferRemaining^(0+256),w	;volatile
 23376  18AF  1803               	skipnc
 23377  18B0  28C7               	goto	i1l538
 23378                           
 23379                           ;eusart.c: 172: {
 23380                           ;eusart.c: 173: TX1REG = eusartTxBuffer[eusartTxTail++];
 23381  18B1  0851               	movf	_eusartTxTail^(0+256),w
 23382  18B2  3E30               	addlw	(low (_eusartTxBuffer| (0+512)))& (0+255)
 23383  18B3  0086               	movwf	6
 23384  18B4  3002               	movlw	2	; select bank4/5
 23385  18B5  0087               	movwf	7
 23386  18B6  0801               	movf	1,w
 23387  18B7  0023               	movlb	3	; select bank3
 23388  18B8  009A               	movwf	26	;volatile
 23389  18B9  3001               	movlw	1
 23390  18BA  00F0               	movwf	??_EUSART_Transmit_ISR
 23391  18BB  0870               	movf	??_EUSART_Transmit_ISR,w
 23392  18BC  0022               	movlb	2	; select bank2
 23393  18BD  07D1               	addwf	_eusartTxTail^(0+256),f
 23394                           
 23395                           ;eusart.c: 174: if (sizeof (eusartTxBuffer) <= eusartTxTail)
 23396  18BE  3010               	movlw	16
 23397  18BF  0251               	subwf	_eusartTxTail^(0+256),w
 23398  18C0  1803               	btfsc	3,0
 23399                           
 23400                           ;eusart.c: 175: {
 23401                           ;eusart.c: 176: eusartTxTail = 0;
 23402  18C1  01D1               	clrf	_eusartTxTail^(0+256)
 23403                           
 23404                           ;eusart.c: 177: }
 23405                           ;eusart.c: 178: eusartTxBufferRemaining++;
 23406  18C2  3001               	movlw	1
 23407  18C3  00F0               	movwf	??_EUSART_Transmit_ISR
 23408  18C4  0870               	movf	??_EUSART_Transmit_ISR,w
 23409  18C5  07EE               	addwf	_eusartTxBufferRemaining^(0+256),f	;volatile
 23410                           
 23411                           ;eusart.c: 179: }
 23412  18C6  0008               	return
 23413  18C7                     i1l538:	
 23414                           
 23415                           ;eusart.c: 180: else
 23416                           ;eusart.c: 181: {
 23417                           ;eusart.c: 182: PIE1bits.TXIE = 0;
 23418  18C7  0021               	movlb	1	; select bank1
 23419  18C8  1211               	bcf	17,4	;volatile
 23420  18C9  0008               	return
 23421  18CA                     __end_of_EUSART_Transmit_ISR:	
 23422                           
 23423                           	psect	text104
 23424  1872                     __ptext104:	
 23425 ;; *************** function _EUSART_Receive_ISR *****************
 23426 ;; Defined at:
 23427 ;;		line 186 in file "mcc_generated_files/eusart.c"
 23428 ;; Parameters:    Size  Location     Type
 23429 ;;		None
 23430 ;; Auto vars:     Size  Location     Type
 23431 ;;		None
 23432 ;; Return value:  Size  Location     Type
 23433 ;;		None               void
 23434 ;; Registers used:
 23435 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23436 ;; Tracked objects:
 23437 ;;		On entry : 0/0
 23438 ;;		On exit  : 0/0
 23439 ;;		Unchanged: 0/0
 23440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23445 ;;Total ram usage:        1 bytes
 23446 ;; Hardware stack levels used:    1
 23447 ;; This function calls:
 23448 ;;		Nothing
 23449 ;; This function is called by:
 23450 ;;		_INTERRUPT_InterruptManager
 23451 ;; This function uses a non-reentrant model
 23452 ;;
 23453                           
 23454                           
 23455                           ;psect for function _EUSART_Receive_ISR
 23456  1872                     _EUSART_Receive_ISR:	
 23457                           
 23458                           ;eusart.c: 188: if (1 == RC1STAbits.OERR)
 23459                           
 23460                           ;incstack = 0
 23461                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 23462  1872  0023               	movlb	3	; select bank3
 23463  1873  1C9D               	btfss	29,1	;volatile
 23464  1874  2877               	goto	i1l6061
 23465                           
 23466                           ;eusart.c: 189: {
 23467                           ;eusart.c: 192: RC1STAbits.CREN = 0;
 23468  1875  121D               	bcf	29,4	;volatile
 23469                           
 23470                           ;eusart.c: 193: RC1STAbits.CREN = 1;
 23471  1876  161D               	bsf	29,4	;volatile
 23472  1877                     i1l6061:	
 23473                           
 23474                           ;eusart.c: 194: }
 23475                           ;eusart.c: 197: eusartRxBuffer[eusartRxHead++] = RC1REG;
 23476  1877  0819               	movf	25,w	;volatile
 23477  1878  00F0               	movwf	??_EUSART_Receive_ISR
 23478  1879  0022               	movlb	2	; select bank2
 23479  187A  084E               	movf	_eusartRxHead^(0+256),w
 23480  187B  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 23481  187C  0086               	movwf	6
 23482  187D  3002               	movlw	2	; select bank4/5
 23483  187E  0087               	movwf	7
 23484  187F  0870               	movf	??_EUSART_Receive_ISR,w
 23485  1880  0081               	movwf	1
 23486  1881  3001               	movlw	1
 23487  1882  00F0               	movwf	??_EUSART_Receive_ISR
 23488  1883  0870               	movf	??_EUSART_Receive_ISR,w
 23489  1884  07CE               	addwf	_eusartRxHead^(0+256),f
 23490                           
 23491                           ;eusart.c: 198: if (sizeof (eusartRxBuffer) <= eusartRxHead)
 23492  1885  3010               	movlw	16
 23493  1886  024E               	subwf	_eusartRxHead^(0+256),w
 23494  1887  1803               	btfsc	3,0
 23495                           
 23496                           ;eusart.c: 199: {
 23497                           ;eusart.c: 200: eusartRxHead = 0;
 23498  1888  01CE               	clrf	_eusartRxHead^(0+256)
 23499                           
 23500                           ;eusart.c: 201: }
 23501                           ;eusart.c: 202: eusartRxCount++;
 23502  1889  3001               	movlw	1
 23503  188A  00F0               	movwf	??_EUSART_Receive_ISR
 23504  188B  0870               	movf	??_EUSART_Receive_ISR,w
 23505  188C  0021               	movlb	1	; select bank1
 23506  188D  07E4               	addwf	_eusartRxCount^(0+128),f	;volatile
 23507  188E  0008               	return
 23508  188F                     __end_of_EUSART_Receive_ISR:	
 23509  007E                     btemp	set	126	;btemp
 23510  007E                     int$flags	set	126
 23511  007E                     wtemp	set	126
 23512  007E                     wtemp0	set	126
 23513  0080                     wtemp1	set	128
 23514  0082                     wtemp2	set	130
 23515  0084                     wtemp3	set	132
 23516  0086                     wtemp4	set	134
 23517  0088                     wtemp5	set	136
 23518  007F                     wtemp6	set	127
 23519  007E                     ttemp	set	126
 23520  007E                     ttemp0	set	126
 23521  0081                     ttemp1	set	129
 23522  0084                     ttemp2	set	132
 23523  0087                     ttemp3	set	135
 23524  007F                     ttemp4	set	127
 23525  007E                     ltemp	set	126
 23526  007E                     ltemp0	set	126
 23527  0082                     ltemp1	set	130
 23528  0086                     ltemp2	set	134
 23529  0080                     ltemp3	set	128


Data Sizes:
    Strings     596
    Constant    72
    Data        189
    BSS         189
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     62      80
    BANK2            80      0      79
    BANK3            80      0      66
    BANK4            80      0      32
    BANK5            80      0      64
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           72      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    ChangeToSettingsScreen@param	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1419$2$0	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 1
		 -> processCommand@intEnd(BANK1[1]), NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 16
		 -> buf(BANK3[16]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_24(CODE[5]), STR_22(CODE[10]), STR_21(CODE[7]), STR_13(CODE[6]), 
		 -> STR_11(CODE[5]), STR_9(CODE[6]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 16
		 -> buf(BANK3[16]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> buf(BANK3[16]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> buf(BANK3[16]), 

    memset@p1	PTR void  size(2) Largest target is 16
		 -> clearAllAlarmEvents@nullEvt(BANK1[16]), buf(BANK3[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 16
		 -> clearAllAlarmEvents@nullEvt(BANK1[16]), buf(BANK3[16]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_59(CODE[7]), STR_57(CODE[17]), STR_56(CODE[13]), CurrentTemperatureRaw(BANK2[2]), 
		 -> buf(BANK3[16]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_58(CODE[3]), STR_55(CODE[5]), STR_54(CODE[39]), STR_53(CODE[21]), 
		 -> STR_52(CODE[18]), STR_51(CODE[10]), STR_49(CODE[12]), STR_47(CODE[17]), 
		 -> STR_45(CODE[14]), STR_44(CODE[27]), STR_43(CODE[15]), STR_28(CODE[19]), 
		 -> STR_27(CODE[17]), STR_26(CODE[5]), STR_25(CODE[14]), STR_23(CODE[22]), 
		 -> STR_20(CODE[10]), STR_19(CODE[15]), STR_18(CODE[11]), STR_17(CODE[10]), 
		 -> STR_16(CODE[14]), STR_15(CODE[14]), STR_14(CODE[10]), STR_12(CODE[23]), 
		 -> STR_10(CODE[15]), STR_8(CODE[33]), STR_7(CODE[10]), STR_6(CODE[11]), 
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[22]), STR_2(CODE[30]), 
		 -> STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    printAllAlarmEvents$1599	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_57(CODE[17]), STR_56(CODE[13]), 

    _saveAlarmEvent@e	PTR Q_010000000  struct . size(1) Largest target is 16
		 -> checkAlarm@e(BANK1[16]), 

    _AlarmEvent_SaveToAddress@e	PTR Q_010000000  struct . size(1) Largest target is 16
		 -> checkAlarm@e(BANK1[16]), _ACKLastSavedEvent@newEvent(BANK1[16]), 

    S1419$Callback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> ChangeToSettingsScreen(), Absolute function(), LCD_ToggleBacklight(), 

    MainMenu.Callback	PTR FTN(PTR void ,)void  size(2) Largest target is 0
		 -> ChangeToSettingsScreen(), Absolute function(), LCD_ToggleBacklight(), 

    prevSetLongPressCB	PTR FTN()void  size(2) Largest target is 0
		 -> _SettingsScreen_SetLongPress(), ACKAlarm(), Absolute function(), 

    prevSetReleaseCB	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> _MenuScreen_SetRelease(), _SettingsScreen_SetRelease(), Absolute function(), 

    prevDownReleaseCB	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> _MenuScreen_MoveDown(), _SettingsScreen_DownRelease(), Absolute function(), 

    prevUpReleaseCB	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> _MenuScreen_MoveUp(), _SettingsScreen_UpRelease(), Absolute function(), 

    SysTime_DiffMs@firstTime	PTR  struct _SysTime size(2) Largest target is 6
		 -> lastBuzStartTime(BANK3[6]), main@prevTime(BANK1[6]), _ButtonSet_LastChangeTime(BANK3[6]), _ButtonDown_LastChangeTime(BANK3[6]), 
		 -> _ButtonUp_LastChangeTime(BANK3[6]), _EEPROM_25AA040A_WriteEnable@start(BANK0[6]), 

    SysTime_DiffMs@secondTime	PTR  struct _SysTime size(1) Largest target is 6
		 -> checkAlarm@curTime(BANK1[6]), main@curTime(BANK1[6]), handleButtons@now(BANK1[6]), _EEPROM_25AA040A_WriteEnable@curTime(BANK0[6]), 

    Config_GetBottomLimit@p_fractLimit	PTR int  size(2) Largest target is 2
		 -> curBottomFractLimit(BANK1[2]), BottomFractLimitRT(BANK2[2]), processCommand@curFractLimit(BANK1[2]), 

    Config_GetBottomLimit@p_intLimit	PTR int  size(2) Largest target is 2
		 -> curBottomIntLimit(BANK1[2]), BottomIntLimitRT(BANK2[2]), processCommand@curIntLimit(BANK1[2]), 

    Config_GetUpLimit@p_fractLimit	PTR int  size(2) Largest target is 2
		 -> curUpFractLimit(BANK1[2]), UpFractLimitRT(BANK2[2]), processCommand@curFractLimit(BANK1[2]), 

    Config_GetUpLimit@p_intLimit	PTR int  size(1) Largest target is 2
		 -> curUpIntLimit(BANK1[2]), UpIntLimitRT(BANK1[2]), processCommand@curIntLimit(BANK1[2]), 

    processCommand@intEnd	PTR unsigned char  size(1) Largest target is 16
		 -> buf(BANK3[16]), 

    processCommand@buf	PTR const unsigned char  size(1) Largest target is 16
		 -> buf(BANK3[16]), 

    sp__memset	PTR void  size(2) Largest target is 16
		 -> clearAllAlarmEvents@nullEvt(BANK1[16]), buf(BANK3[16]), 

    ButtonSet_LongPressCB	PTR FTN()void  size(2) Largest target is 0
		 -> _SettingsScreen_SetLongPress(), ACKAlarm(), Absolute function(), 

    ButtonSet_ReleaseCB	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> _MenuScreen_SetRelease(), _SettingsScreen_SetRelease(), Absolute function(), 

    ButtonSet_PressCB	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    ButtonDown_LongPressCB	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    ButtonDown_ReleaseCB	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> _MenuScreen_MoveDown(), _SettingsScreen_DownRelease(), Absolute function(), 

    ButtonDown_PressCB	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    ButtonUp_LongPressCB	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), LCD_ToggleBacklight(), 

    ButtonUp_ReleaseCB	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> _MenuScreen_MoveUp(), _SettingsScreen_UpRelease(), Absolute function(), 

    ButtonUp_PressCB	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    EEPROM_25AA040A_WriteBuffer@data	PTR unsigned char  size(1) Largest target is 16
		 -> clearAllAlarmEvents@nullEvt(BANK1[16]), checkAlarm@e(BANK1[16]), _ACKLastSavedEvent@newEvent(BANK1[16]), Config_SetBottomLimit@writeData(BANK1[4]), 
		 -> Config_SetUpLimit@writeData(BANK1[4]), 

    EEPROM_25AA040A_ReadToBuffer@dst	PTR unsigned char  size(1) Largest target is 16
		 -> printAllAlarmEvents@evt(BANK0[16]), _ACKLastSavedEvent@newEvent(BANK1[16]), Config_GetBottomLimit@bufData(BANK0[4]), Config_GetUpLimit@bufData(BANK0[4]), 

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_50(CODE[6]), STR_48(CODE[6]), STR_46(CODE[6]), STR_42(CODE[2]), 
		 -> STR_41(CODE[2]), STR_40(CODE[2]), STR_39(CODE[2]), MenuScreen_Clear@allSpace(BANK3[9]), 
		 -> MainMenu(BIGRAM[120]), STR_38(CODE[2]), STR_37(CODE[2]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[2]), STR_29(CODE[2]), 


Critical Paths under _main in COMMON

    _main->_Alarm_Init
    _main->_MenuScreen_Init
    _updateTemperature->_DS18B20_ReadRawTemperature
    _updateTemperature->_LCDByte
    _DS18B20_StartConversion->_OW_write_byte
    _DS18B20_ReadRawTemperature->_OW_read_byte
    _OW_read_byte->_OW_read_bit
    _OW_read_bit->_read_OW
    _initDrivers->_LCDByte
    _DS18B20_SetResolution->_OW_write_byte
    _OW_write_byte->_OW_write_bit
    _DS18B20_ResetAndDetect->_OW_reset_pulse
    _OW_reset_pulse->_read_OW
    _LCDInit->_LCDByte
    _handleUARTInput->_memset
    _processCommand->_strlen
    _strtol->___lmul
    _isalpha->_isupper
    _clearAllAlarmEvents->_memset
    _getch->_EUSART_Read
    _LCDWriteInt->_LCDByte
    _printf->___lldiv
    _putch->_EUSART_Write
    ___llmod->___lldiv
    __EEPROM_25AA040A_ReadStatus->_SPI_Exchange8bit
    _SysTime_GetNow->_TMR4_GetSec
    _SysTime_DiffMs->___lmul
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop
    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    ___wmul->___awmod
    _Config_InitRTValues->_Config_GetBottomLimit
    _Config_InitRTValues->_Config_GetUpLimit
    _Config_GetUpLimit->_EEPROM_25AA040A_ReadToBuffer
    _Config_GetBottomLimit->_EEPROM_25AA040A_ReadToBuffer
    _EEPROM_25AA040A_ReadToBuffer->_SPI_Exchange8bit
    _Alarm_Init->_EEPROM_25AA040A_ReadByte
    _EEPROM_25AA040A_ReadByte->_SPI_Exchange8bit

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_handleButtons
    _main->_handleUARTInput
    _updateTemperature->_LCDWriteInt
    _initDrivers->_TempSensor_Init
    _TempSensor_Init->_printf
    _LCDInit->_LCDByte
    _handleUARTInput->_processCommand
    _processCommand->_Config_SetBottomLimit
    _processCommand->_Config_SetUpLimit
    _strtol->___lmul
    _printAllAlarmEvents->_printf
    _clearAllAlarmEvents->_EEPROM_25AA040A_WriteBuffer
    _EEPROM_25AA040A_Dump->_printf
    __SettingsScreen_UpRelease->_SettingsScreen_Display
    _LeaveSettingsScreen->_Config_SetBottomLimit
    _LeaveSettingsScreen->_Config_SetUpLimit
    _Config_SetUpLimit->_EEPROM_25AA040A_WriteBuffer
    _Config_SetBottomLimit->_EEPROM_25AA040A_WriteBuffer
    __SettingsScreen_DownRelease->_SettingsScreen_Display
    __MenuScreen_SetRelease->_LCD_ToggleBacklight
    _ChangeToSettingsScreen->_SettingsScreen_Display
    _SettingsScreen_Init->_MenuScreen_Clear
    _SettingsScreen_Display->_LCDWriteInt
    _LCDWriteInt->_LCDByte
    _LCDWriteInt->___awdiv
    _MenuScreen_Display->_MenuScreen_Clear
    _MenuScreen_Clear->_LCDWriteString
    _ACKAlarm->__ACKLastSavedEvent
    __ACKLastSavedEvent->__AlarmEvent_SaveToAddress
    _checkAlarm->__saveAlarmEvent
    __saveAlarmEvent->__AlarmEvent_SaveToAddress
    __AlarmEvent_SaveToAddress->_EEPROM_25AA040A_WriteBuffer
    _EEPROM_25AA040A_WriteBuffer->_printf
    __AlarmEvent_IncreaseSavedCounter->_EEPROM_25AA040A_WriteByte
    _EEPROM_25AA040A_WriteByte->_printf
    _printf->___llmod
    ___llmod->___lldiv
    __EEPROM_25AA040A_WriteEnable->_SysTime_DiffMs
    _SysTime_DiffMs->___lmul
    _LCDWriteString->___wmul
    _LCDGotoXY->_LCDByte
    _MenuScreen_Init->___wmul
    _Config_InitRTValues->_Config_GetBottomLimit
    _Config_GetUpLimit->_EEPROM_25AA040A_ReadToBuffer
    _Config_GetBottomLimit->_EEPROM_25AA040A_ReadToBuffer
    _Alarm_Init->_EEPROM_25AA040A_ReadByte

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_checkAlarm
    _handleUARTInput->_processCommand
    _processCommand->_clearAllAlarmEvents
    _LeaveSettingsScreen->_Config_SetBottomLimit
    _LeaveSettingsScreen->_Config_SetUpLimit
    _ACKAlarm->__ACKLastSavedEvent

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0  387117
                                             39 BANK1     23    23      0
                         _Alarm_Init
                _Config_InitRTValues
                 _MenuScreen_Display
                    _MenuScreen_Init
                  _SYSTEM_Initialize
                     _SysTime_DiffMs
                     _SysTime_GetNow
                         _checkAlarm
                              _getch
                      _handleButtons
                    _handleUARTInput
                        _initDrivers
                             _printf
                  _updateTemperature
 ---------------------------------------------------------------------------------
 (1) _updateTemperature                                   16    16      0   16683
                                             18 BANK0     16    16      0
         _DS18B20_ReadRawTemperature
            _DS18B20_StartConversion
                            _LCDByte
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
                         _TMR4_GetMs
                        _TMR4_GetSec
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     156
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _DS18B20_StartConversion                              0     0      0     139
                     _OW_reset_pulse
                      _OW_write_byte
 ---------------------------------------------------------------------------------
 (2) _DS18B20_ReadRawTemperature                           9     7      2     328
                                              8 COMMON     2     0      2
                                              0 BANK0      7     7      0
                       _OW_read_byte
                     _OW_reset_pulse
                      _OW_write_byte
 ---------------------------------------------------------------------------------
 (3) _OW_read_byte                                         3     3      0     119
                                              5 COMMON     3     3      0
                        _OW_read_bit
 ---------------------------------------------------------------------------------
 (4) _OW_read_bit                                          2     2      0      48
                                              3 COMMON     2     2      0
                      _drive_OW_high
                       _drive_OW_low
                            _read_OW
 ---------------------------------------------------------------------------------
 (1) _initDrivers                                          0     0      0   10693
                            _LCDByte
                            _LCDInit
                 _PWM3_LoadDutyValue
                    _TempSensor_Init
 ---------------------------------------------------------------------------------
 (2) _TempSensor_Init                                      2     2      0    7846
                                             54 BANK0      2     2      0
             _DS18B20_ResetAndDetect
              _DS18B20_SetResolution
                             _printf
 ---------------------------------------------------------------------------------
 (3) _DS18B20_SetResolution                                2     2      0     162
                                              7 COMMON     1     1      0
                     _OW_reset_pulse
                      _OW_write_byte
 ---------------------------------------------------------------------------------
 (3) _OW_write_byte                                        3     3      0      91
                                              4 COMMON     3     3      0
                       _OW_write_bit
 ---------------------------------------------------------------------------------
 (4) _OW_write_bit                                         2     2      0      22
                                              2 COMMON     2     2      0
                      _drive_OW_high
                       _drive_OW_low
 ---------------------------------------------------------------------------------
 (3) _DS18B20_ResetAndDetect                               2     2      0      71
                                              5 COMMON     2     2      0
                     _OW_reset_pulse
 ---------------------------------------------------------------------------------
 (3) _OW_reset_pulse                                       2     2      0      48
                                              3 COMMON     2     2      0
                      _drive_OW_high
                       _drive_OW_low
                            _read_OW
 ---------------------------------------------------------------------------------
 (4) _read_OW                                              1     1      0      25
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _drive_OW_low                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _drive_OW_high                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              4     4      0    1418
                                              4 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _handleUARTInput                                      3     3      0   82491
                                             79 BANK0      1     1      0
                                             29 BANK1      2     2      0
                              _getch
                             _memset
                     _processCommand
                              _putch
 ---------------------------------------------------------------------------------
 (2) _processCommand                                      14    14      0   81827
                                             77 BANK0      2     2      0
                                             17 BANK1     12    12      0
              _Config_GetBottomLimit
                  _Config_GetUpLimit
              _Config_SetBottomLimit
                  _Config_SetUpLimit
               _EEPROM_25AA040A_Dump
                _clearAllAlarmEvents
                _printAllAlarmEvents
                             _printf
                             _strlen
                            _strncmp
                             _strtol
 ---------------------------------------------------------------------------------
 (3) _strtol                                              15    11      4    2225
                                              4 BANK0     15    11      4
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              2     2      0      67
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _isspace                                              2     2      0      90
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _isalpha                                              2     2      0     158
                                              4 COMMON     2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     3      4    1082
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) _strlen                                               8     6      2     120
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) _printAllAlarmEvents                                 22    22      0    9199
                                             54 BANK0     22    22      0
       _EEPROM_25AA040A_ReadToBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (3) _clearAllAlarmEvents                                 21    21      0   22625
                                             71 BANK0      4     4      0
                                              0 BANK1     17    17      0
        _EEPROM_25AA040A_WriteBuffer
          _EEPROM_25AA040A_WriteByte
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     414
                                              2 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (3) _EEPROM_25AA040A_Dump                                 5     5      0    7805
                                             54 BANK0      5     5      0
                   _SPI_Exchange8bit
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getch                                                0     0      0      24
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      24
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _handleButtons                                       13    13      0  198623
                                             79 BANK0      1     1      0
                                             16 BANK1     12    12      0
                   Absolute function *
                           _ACKAlarm *
                _LCD_ToggleBacklight *
                     _SysTime_DiffMs
                     _SysTime_GetNow
               __MenuScreen_MoveDown *
                 __MenuScreen_MoveUp *
             __MenuScreen_SetRelease *
        __SettingsScreen_DownRelease *
       __SettingsScreen_SetLongPress *
         __SettingsScreen_SetRelease *
          __SettingsScreen_UpRelease *
 ---------------------------------------------------------------------------------
 (2) __SettingsScreen_UpRelease                            2     1      1   18774
                                             23 BANK0      2     1      1
             _SettingsScreen_Display
 ---------------------------------------------------------------------------------
 (2) __SettingsScreen_SetRelease                           2     1      1   18774
                                             26 BANK0      2     1      1
             _SettingsScreen_Display
 ---------------------------------------------------------------------------------
 (2) __SettingsScreen_SetLongPress                         0     0      0   26280
                      _FlashLed100ms
                _LeaveSettingsScreen
 ---------------------------------------------------------------------------------
 (3) _LeaveSettingsScreen                                  0     0      0   26280
              _Config_SetBottomLimit
                  _Config_SetUpLimit
 ---------------------------------------------------------------------------------
 (3) _Config_SetUpLimit                                   11     7      4   13140
                                             71 BANK0      6     2      4
                                              0 BANK1      5     5      0
        _EEPROM_25AA040A_WriteBuffer
 ---------------------------------------------------------------------------------
 (3) _Config_SetBottomLimit                               11     7      4   13140
                                             71 BANK0      6     2      4
                                              0 BANK1      5     5      0
        _EEPROM_25AA040A_WriteBuffer
 ---------------------------------------------------------------------------------
 (3) _FlashLed100ms                                        3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) __SettingsScreen_DownRelease                          2     1      1   18774
                                             23 BANK0      2     1      1
             _SettingsScreen_Display
 ---------------------------------------------------------------------------------
 (2) __MenuScreen_SetRelease                               9     8      1   48227
                                             26 BANK0      9     8      1
                   Absolute function *
             _ChangeToSettingsScreen *
                _LCD_ToggleBacklight *
                 _MenuScreen_Display
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _LCD_ToggleBacklight                                  3     2      1     281
                                             23 BANK0      3     2      1
                  _PWM3_GetDutyValue
                 _PWM3_LoadDutyValue
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     258
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM3_GetDutyValue                                    2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ChangeToSettingsScreen                               1     0      1   29442
                                             23 BANK0      1     0      1
              _Config_GetBottomLimit
                  _Config_GetUpLimit
             _SettingsScreen_Display
                _SettingsScreen_Init
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _SettingsScreen_Init                                  0     0      0    6961
                   _MenuScreen_Clear
 ---------------------------------------------------------------------------------
 (3) _SettingsScreen_Display                               5     5      0   18743
                                             18 BANK0      5     5      0
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
                   _MenuScreen_Clear
 ---------------------------------------------------------------------------------
 (2) _LCDWriteInt                                         14    11      3    4784
                                              4 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) __MenuScreen_MoveUp                                   6     5      1   18538
                                             23 BANK0      6     5      1
                 _MenuScreen_Display
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) __MenuScreen_MoveDown                                 6     5      1   18538
                                             23 BANK0      6     5      1
                 _MenuScreen_Display
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _MenuScreen_Display                                   6     6      0   16589
                                             13 BANK0      6     6      0
                          _LCDGotoXY
                     _LCDWriteString
                   _MenuScreen_Clear
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     936
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _MenuScreen_Clear                                     3     3      0    6961
                                             10 BANK0      3     3      0
                          _LCDGotoXY
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _ACKAlarm                                             0     0      0   28406
                          _LCDGotoXY
                     _LCDWriteString
                 __ACKLastSavedEvent
                             _printf
 ---------------------------------------------------------------------------------
 (3) __ACKLastSavedEvent                                  19    19      0   13965
                                             76 BANK0      3     3      0
                                              0 BANK1     16    16      0
       _EEPROM_25AA040A_ReadToBuffer
          __AlarmEvent_SaveToAddress
 ---------------------------------------------------------------------------------
 (1) _checkAlarm                                          39    39      0   46874
                                              0 BANK1     39    39      0
                          _LCDGotoXY
                     _LCDWriteString
                     _SysTime_DiffMs
                     _SysTime_GetNow
                    __saveAlarmEvent
                             _printf
 ---------------------------------------------------------------------------------
 (2) __saveAlarmEvent                                      4     4      0   30271
                                             76 BANK0      4     4      0
   __AlarmEvent_IncreaseSavedCounter
          __AlarmEvent_SaveToAddress
                             _printf
 ---------------------------------------------------------------------------------
 (4) __AlarmEvent_SaveToAddress                            5     2      3   12645
                                             71 BANK0      5     2      3
        _EEPROM_25AA040A_WriteBuffer
 ---------------------------------------------------------------------------------
 (4) _EEPROM_25AA040A_WriteBuffer                         17    13      4   12275
                                             54 BANK0     17    13      4
                   _SPI_Exchange8bit
       __EEPROM_25AA040A_WriteEnable
                            ___awdiv
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1215
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) __AlarmEvent_IncreaseSavedCounter                     1     1      0    9797
                                             63 BANK0      1     1      0
          _EEPROM_25AA040A_WriteByte
 ---------------------------------------------------------------------------------
 (4) _EEPROM_25AA040A_WriteByte                            9     6      3    9797
                                             54 BANK0      9     6      3
                   _SPI_Exchange8bit
       __EEPROM_25AA040A_WriteEnable
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    26     16    7579
                                             16 BANK0     38    22     16
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                              6 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     703
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) __EEPROM_25AA040A_WriteEnable                        15    15      0    1718
                                             32 BANK0     15    15      0
                   _SPI_Exchange8bit
                     _SysTime_DiffMs
                     _SysTime_GetNow
        __EEPROM_25AA040A_ReadStatus
 ---------------------------------------------------------------------------------
 (6) __EEPROM_25AA040A_ReadStatus                          2     2      0      65
                                              3 COMMON     2     2      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SysTime_GetNow                                      13     7      6      71
                                              6 COMMON     1     1      0
                                              0 BANK0     12     6      6
                         _TMR4_GetMs
                        _TMR4_GetSec
 ---------------------------------------------------------------------------------
 (2) _TMR4_GetSec                                          4     0      4       0
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _TMR4_GetMs                                           2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _SysTime_DiffMs                                      28    24      4    1366
                                              4 BANK0     28    24      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     444
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       4     2      2    3199
                                              6 BANK0      4     2      2
                            _LCDByte
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCDGotoXY                                            3     2      1    3663
                                              4 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDByte                                              7     6      1    1171
                                              7 COMMON     3     2      1
                                              0 BANK0      4     4      0
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (4) _LCDBusyLoop                                          5     5      0     117
                                              2 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                     _SPI_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MenuScreen_Init                                      5     5      0    1991
                                              9 COMMON     1     1      0
                                              6 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1830
                                              0 BANK0      6     2      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Config_InitRTValues                                  0     0      0    3684
              _Config_GetBottomLimit
                  _Config_GetUpLimit
 ---------------------------------------------------------------------------------
 (3) _Config_GetUpLimit                                    8     6      2    1836
                                              8 COMMON     1     1      0
                                              7 BANK0      7     5      2
       _EEPROM_25AA040A_ReadToBuffer
 ---------------------------------------------------------------------------------
 (3) _Config_GetBottomLimit                                9     5      4    1848
                                              8 COMMON     1     1      0
                                              7 BANK0      8     4      4
       _EEPROM_25AA040A_ReadToBuffer
 ---------------------------------------------------------------------------------
 (4) _EEPROM_25AA040A_ReadToBuffer                        12     7      5    1212
                                              3 COMMON     5     0      5
                                              0 BANK0      7     7      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (1) _Alarm_Init                                           1     1      0     244
                                              9 COMMON     1     1      0
           _EEPROM_25AA040A_ReadByte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_25AA040A_ReadByte                             8     6      2     244
                                              3 COMMON     6     4      2
                                              0 BANK0      2     2      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI_Exchange8bit                                     1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR4_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarm_Init
     _EEPROM_25AA040A_ReadByte
       _SPI_Exchange8bit
   _Config_InitRTValues
     _Config_GetBottomLimit
       _EEPROM_25AA040A_ReadToBuffer
         _SPI_Exchange8bit
     _Config_GetUpLimit
       _EEPROM_25AA040A_ReadToBuffer
         _SPI_Exchange8bit
   _MenuScreen_Display
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
       ___awmod (ARG)
       ___wmul (ARG)
         ___awmod (ARG)
     _MenuScreen_Clear
       _LCDGotoXY
         _LCDByte
           _LCDBusyLoop
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
         ___awmod (ARG)
         ___wmul (ARG)
           ___awmod (ARG)
     ___awmod
     ___wmul
       ___awmod (ARG)
   _MenuScreen_Init
     ___wmul
       ___awmod (ARG)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _SPI_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR4_Initialize
       _TMR4_StartTimer
   _SysTime_DiffMs
     ___lmul
   _SysTime_GetNow
     _TMR4_GetMs
     _TMR4_GetSec
   _checkAlarm
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
       ___awmod (ARG)
       ___wmul (ARG)
         ___awmod (ARG)
     _SysTime_DiffMs
       ___lmul
     _SysTime_GetNow
       _TMR4_GetMs
       _TMR4_GetSec
     __saveAlarmEvent
       __AlarmEvent_IncreaseSavedCounter
         _EEPROM_25AA040A_WriteByte
           _SPI_Exchange8bit
           __EEPROM_25AA040A_WriteEnable
             _SPI_Exchange8bit
             _SysTime_DiffMs
               ___lmul
             _SysTime_GetNow
               _TMR4_GetMs
               _TMR4_GetSec
             __EEPROM_25AA040A_ReadStatus
               _SPI_Exchange8bit
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
               ___awmod (ARG)
             _isdigit
             _putch
               _EUSART_Write
       __AlarmEvent_SaveToAddress
         _EEPROM_25AA040A_WriteBuffer
           _SPI_Exchange8bit
           __EEPROM_25AA040A_WriteEnable
             _SPI_Exchange8bit
             _SysTime_DiffMs
               ___lmul
             _SysTime_GetNow
               _TMR4_GetMs
               _TMR4_GetSec
             __EEPROM_25AA040A_ReadStatus
               _SPI_Exchange8bit
           ___awdiv
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
               ___awmod (ARG)
             _isdigit
             _putch
               _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
           ___awmod (ARG)
         _isdigit
         _putch
           _EUSART_Write
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
         ___awmod (ARG)
       _isdigit
       _putch
         _EUSART_Write
   _getch
     _EUSART_Read
   _handleButtons
     Absolute function(Fake) *
     _ACKAlarm *
       _LCDGotoXY
         _LCDByte
           _LCDBusyLoop
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
         ___awmod (ARG)
         ___wmul (ARG)
           ___awmod (ARG)
       __ACKLastSavedEvent
         _EEPROM_25AA040A_ReadToBuffer
           _SPI_Exchange8bit
         __AlarmEvent_SaveToAddress
           _EEPROM_25AA040A_WriteBuffer
             _SPI_Exchange8bit
             __EEPROM_25AA040A_WriteEnable
               _SPI_Exchange8bit
               _SysTime_DiffMs
                 ___lmul
               _SysTime_GetNow
                 _TMR4_GetMs
                 _TMR4_GetSec
               __EEPROM_25AA040A_ReadStatus
                 _SPI_Exchange8bit
             ___awdiv
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___wmul
                 ___awmod (ARG)
               _isdigit
               _putch
                 _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
           ___awmod (ARG)
         _isdigit
         _putch
           _EUSART_Write
     _LCD_ToggleBacklight *
       _PWM3_GetDutyValue
       _PWM3_LoadDutyValue
       ___wmul (ARG)
         ___awmod (ARG)
     _SysTime_DiffMs *
       ___lmul
     _SysTime_GetNow *
       _TMR4_GetMs
       _TMR4_GetSec
     __MenuScreen_MoveDown *
       _MenuScreen_Display
         _LCDGotoXY
           _LCDByte
             _LCDBusyLoop
         _LCDWriteString
           _LCDByte
             _LCDBusyLoop
           ___awmod (ARG)
           ___wmul (ARG)
             ___awmod (ARG)
         _MenuScreen_Clear
           _LCDGotoXY
             _LCDByte
               _LCDBusyLoop
           _LCDWriteString
             _LCDByte
               _LCDBusyLoop
             ___awmod (ARG)
             ___wmul (ARG)
               ___awmod (ARG)
         ___awmod
         ___wmul
           ___awmod (ARG)
       ___wmul
         ___awmod (ARG)
     __MenuScreen_MoveUp *
       _MenuScreen_Display
         _LCDGotoXY
           _LCDByte
             _LCDBusyLoop
         _LCDWriteString
           _LCDByte
             _LCDBusyLoop
           ___awmod (ARG)
           ___wmul (ARG)
             ___awmod (ARG)
         _MenuScreen_Clear
           _LCDGotoXY
             _LCDByte
               _LCDBusyLoop
           _LCDWriteString
             _LCDByte
               _LCDBusyLoop
             ___awmod (ARG)
             ___wmul (ARG)
               ___awmod (ARG)
         ___awmod
         ___wmul
           ___awmod (ARG)
       ___wmul
         ___awmod (ARG)
     __MenuScreen_SetRelease *
       Absolute function(Fake) *
       _ChangeToSettingsScreen *
         _Config_GetBottomLimit
           _EEPROM_25AA040A_ReadToBuffer
             _SPI_Exchange8bit
         _Config_GetUpLimit
           _EEPROM_25AA040A_ReadToBuffer
             _SPI_Exchange8bit
         _SettingsScreen_Display
           _LCDGotoXY
             _LCDByte
               _LCDBusyLoop
           _LCDWriteInt
             _LCDByte
               _LCDBusyLoop
             ___awdiv
             ___awmod
           _LCDWriteString
             _LCDByte
               _LCDBusyLoop
             ___awmod (ARG)
             ___wmul (ARG)
               ___awmod (ARG)
           _MenuScreen_Clear
             _LCDGotoXY
               _LCDByte
                 _LCDBusyLoop
             _LCDWriteString
               _LCDByte
                 _LCDBusyLoop
               ___awmod (ARG)
               ___wmul (ARG)
                 ___awmod (ARG)
         _SettingsScreen_Init
           _MenuScreen_Clear
             _LCDGotoXY
               _LCDByte
                 _LCDBusyLoop
             _LCDWriteString
               _LCDByte
                 _LCDBusyLoop
               ___awmod (ARG)
               ___wmul (ARG)
                 ___awmod (ARG)
         ___wmul (ARG)
           ___awmod (ARG)
       _LCD_ToggleBacklight *
         _PWM3_GetDutyValue
         _PWM3_LoadDutyValue
         ___wmul (ARG)
           ___awmod (ARG)
       _MenuScreen_Display *
         _LCDGotoXY
           _LCDByte
             _LCDBusyLoop
         _LCDWriteString
           _LCDByte
             _LCDBusyLoop
           ___awmod (ARG)
           ___wmul (ARG)
             ___awmod (ARG)
         _MenuScreen_Clear
           _LCDGotoXY
             _LCDByte
               _LCDBusyLoop
           _LCDWriteString
             _LCDByte
               _LCDBusyLoop
             ___awmod (ARG)
             ___wmul (ARG)
               ___awmod (ARG)
         ___awmod
         ___wmul
           ___awmod (ARG)
       ___wmul *
         ___awmod (ARG)
     __SettingsScreen_DownRelease *
       _SettingsScreen_Display
         _LCDGotoXY
           _LCDByte
             _LCDBusyLoop
         _LCDWriteInt
           _LCDByte
             _LCDBusyLoop
           ___awdiv
           ___awmod
         _LCDWriteString
           _LCDByte
             _LCDBusyLoop
           ___awmod (ARG)
           ___wmul (ARG)
             ___awmod (ARG)
         _MenuScreen_Clear
           _LCDGotoXY
             _LCDByte
               _LCDBusyLoop
           _LCDWriteString
             _LCDByte
               _LCDBusyLoop
             ___awmod (ARG)
             ___wmul (ARG)
               ___awmod (ARG)
     __SettingsScreen_SetLongPress *
       _FlashLed100ms
       _LeaveSettingsScreen
         _Config_SetBottomLimit
           _EEPROM_25AA040A_WriteBuffer
             _SPI_Exchange8bit
             __EEPROM_25AA040A_WriteEnable
               _SPI_Exchange8bit
               _SysTime_DiffMs
                 ___lmul
               _SysTime_GetNow
                 _TMR4_GetMs
                 _TMR4_GetSec
               __EEPROM_25AA040A_ReadStatus
                 _SPI_Exchange8bit
             ___awdiv
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___wmul
                 ___awmod (ARG)
               _isdigit
               _putch
                 _EUSART_Write
         _Config_SetUpLimit
           _EEPROM_25AA040A_WriteBuffer
             _SPI_Exchange8bit
             __EEPROM_25AA040A_WriteEnable
               _SPI_Exchange8bit
               _SysTime_DiffMs
                 ___lmul
               _SysTime_GetNow
                 _TMR4_GetMs
                 _TMR4_GetSec
               __EEPROM_25AA040A_ReadStatus
                 _SPI_Exchange8bit
             ___awdiv
             _printf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___wmul
                 ___awmod (ARG)
               _isdigit
               _putch
                 _EUSART_Write
     __SettingsScreen_SetRelease *
       _SettingsScreen_Display
         _LCDGotoXY
           _LCDByte
             _LCDBusyLoop
         _LCDWriteInt
           _LCDByte
             _LCDBusyLoop
           ___awdiv
           ___awmod
         _LCDWriteString
           _LCDByte
             _LCDBusyLoop
           ___awmod (ARG)
           ___wmul (ARG)
             ___awmod (ARG)
         _MenuScreen_Clear
           _LCDGotoXY
             _LCDByte
               _LCDBusyLoop
           _LCDWriteString
             _LCDByte
               _LCDBusyLoop
             ___awmod (ARG)
             ___wmul (ARG)
               ___awmod (ARG)
     __SettingsScreen_UpRelease *
       _SettingsScreen_Display
         _LCDGotoXY
           _LCDByte
             _LCDBusyLoop
         _LCDWriteInt
           _LCDByte
             _LCDBusyLoop
           ___awdiv
           ___awmod
         _LCDWriteString
           _LCDByte
             _LCDBusyLoop
           ___awmod (ARG)
           ___wmul (ARG)
             ___awmod (ARG)
         _MenuScreen_Clear
           _LCDGotoXY
             _LCDByte
               _LCDBusyLoop
           _LCDWriteString
             _LCDByte
               _LCDBusyLoop
             ___awmod (ARG)
             ___wmul (ARG)
               ___awmod (ARG)
   _handleUARTInput
     _getch
       _EUSART_Read
     _memset
     _processCommand
       _Config_GetBottomLimit
         _EEPROM_25AA040A_ReadToBuffer
           _SPI_Exchange8bit
       _Config_GetUpLimit
         _EEPROM_25AA040A_ReadToBuffer
           _SPI_Exchange8bit
       _Config_SetBottomLimit
         _EEPROM_25AA040A_WriteBuffer
           _SPI_Exchange8bit
           __EEPROM_25AA040A_WriteEnable
             _SPI_Exchange8bit
             _SysTime_DiffMs
               ___lmul
             _SysTime_GetNow
               _TMR4_GetMs
               _TMR4_GetSec
             __EEPROM_25AA040A_ReadStatus
               _SPI_Exchange8bit
           ___awdiv
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
               ___awmod (ARG)
             _isdigit
             _putch
               _EUSART_Write
       _Config_SetUpLimit
         _EEPROM_25AA040A_WriteBuffer
           _SPI_Exchange8bit
           __EEPROM_25AA040A_WriteEnable
             _SPI_Exchange8bit
             _SysTime_DiffMs
               ___lmul
             _SysTime_GetNow
               _TMR4_GetMs
               _TMR4_GetSec
             __EEPROM_25AA040A_ReadStatus
               _SPI_Exchange8bit
           ___awdiv
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
               ___awmod (ARG)
             _isdigit
             _putch
               _EUSART_Write
       _EEPROM_25AA040A_Dump
         _SPI_Exchange8bit
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
             ___awmod (ARG)
           _isdigit
           _putch
             _EUSART_Write
       _clearAllAlarmEvents
         _EEPROM_25AA040A_WriteBuffer
           _SPI_Exchange8bit
           __EEPROM_25AA040A_WriteEnable
             _SPI_Exchange8bit
             _SysTime_DiffMs
               ___lmul
             _SysTime_GetNow
               _TMR4_GetMs
               _TMR4_GetSec
             __EEPROM_25AA040A_ReadStatus
               _SPI_Exchange8bit
           ___awdiv
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
               ___awmod (ARG)
             _isdigit
             _putch
               _EUSART_Write
         _EEPROM_25AA040A_WriteByte
           _SPI_Exchange8bit
           __EEPROM_25AA040A_WriteEnable
             _SPI_Exchange8bit
             _SysTime_DiffMs
               ___lmul
             _SysTime_GetNow
               _TMR4_GetMs
               _TMR4_GetSec
             __EEPROM_25AA040A_ReadStatus
               _SPI_Exchange8bit
           _printf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___wmul
               ___awmod (ARG)
             _isdigit
             _putch
               _EUSART_Write
         _memset
       _printAllAlarmEvents
         _EEPROM_25AA040A_ReadToBuffer
           _SPI_Exchange8bit
         _printf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
             ___awmod (ARG)
           _isdigit
           _putch
             _EUSART_Write
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
           ___awmod (ARG)
         _isdigit
         _putch
           _EUSART_Write
       _strlen
       _strncmp
       _strtol
         ___lmul
         _isalpha
           _isupper
         _isdigit
         _isspace
         _toupper
     _putch
       _EUSART_Write
   _initDrivers
     _LCDByte
       _LCDBusyLoop
     _LCDInit
       _LCDBusyLoop
       _LCDByte
         _LCDBusyLoop
     _PWM3_LoadDutyValue
     _TempSensor_Init
       _DS18B20_ResetAndDetect
         _OW_reset_pulse
           _drive_OW_high
           _drive_OW_low
           _read_OW
       _DS18B20_SetResolution
         _OW_reset_pulse
           _drive_OW_high
           _drive_OW_low
           _read_OW
         _OW_write_byte
           _OW_write_bit
             _drive_OW_high
             _drive_OW_low
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
           ___awmod (ARG)
         _isdigit
         _putch
           _EUSART_Write
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
       ___awmod (ARG)
     _isdigit
     _putch
       _EUSART_Write
   _updateTemperature
     _DS18B20_ReadRawTemperature
       _OW_read_byte
         _OW_read_bit
           _drive_OW_high
           _drive_OW_low
           _read_OW
       _OW_reset_pulse
         _drive_OW_high
         _drive_OW_low
         _read_OW
       _OW_write_byte
         _OW_write_bit
           _drive_OW_high
           _drive_OW_low
     _DS18B20_StartConversion
       _OW_reset_pulse
         _drive_OW_high
         _drive_OW_low
         _read_OW
       _OW_write_byte
         _OW_write_bit
           _drive_OW_high
           _drive_OW_low
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteInt
       _LCDByte
         _LCDBusyLoop
       ___awdiv
       ___awmod
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
       ___awmod (ARG)
       ___wmul (ARG)
         ___awmod (ARG)
     _TMR4_GetMs
     _TMR4_GetSec
     ___awdiv
     ___bmul
     ___wmul
       ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR2_ISR
   _TMR4_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3E      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      42      11       82.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     19D      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      40      16       80.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     19D      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              48      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu May 26 09:25:09 2016

                              ?_LCDBusyLoop 0070                              _SPI_Initialize 2610  
           SettingsScreen_Display@bottomInt 0035                              ___bmul@product 0074  
                               __CFG_CP$OFF 0000                                          l75 1B8B  
                                        l76 1B8C                           ??_TempSensor_Init 0056  
                 __end_of_updateTemperature 0CB6                 SettingsScreen_Display@upInt 0033  
                              ___awdiv@sign 0021             EEPROM_25AA040A_WriteBuffer@data 0058  
                        __Menu_SelectedItem 007B                         ___wmul@multiplicand 0022  
                 __SettingsScreen_UpRelease 11A8          __end_of__SettingsScreen_SetRelease 274C  
                __SettingsScreen_SetRelease 2739          EEPROM_25AA040A_WriteBuffer@WREN_Ok 0060  
                                       l120 1929                                         l121 1912  
                                       l207 1262                                         l169 1DF1  
                                       l196 17E5                                         l526 193B  
                                       l449 262D                                         l755 1722  
                                       l863 0BE9                                         _GIE 005F  
                                       _RB0 0068                                         _RB2 006A  
                                       _RA4 0064                                         _RB3 006B  
                                       _RA5 0065                                         _RC2 0072  
                                       _RB4 006C                                         _RB5 006D  
                                       _RC5 0075                                         _PR2 001B  
                                       _PR4 0416                  __size_of_Config_GetUpLimit 0032  
                       __end_of_OW_read_bit 1872                                         _buf 01B1  
                      clearAllAlarmEvents@i 00A0                                ___awmod@sign 0078  
    EEPROM_25AA040A_WriteBuffer@bytesOnPage 0063                             _TMR2_Initialize 2651  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                              __CFG_IESO$ON 0000                                __CFG_FOSC$XT 0000  
                             _curUpIntLimit 00ED                     __size_of_SysTime_DiffMs 008A  
                      printAllAlarmEvents@i 005B                     __size_of_SysTime_GetNow 0023  
                   LCDWriteInt@field_length 0026                ?__SettingsScreen_DownRelease 0037  
                              ?_EUSART_Read 0070                             __end_of_LCDByte 1BB0  
                           __end_of_LCDInit 1FAE                                __CFG_LVP$OFF 0000  
                              ?_LCDWriteInt 0024                                 LCDByte@temp 0023  
                                      l1201 0FB6                                        l1322 1843  
                                      l1262 0108                                        l1318 0338  
                                      l1247 00BC                                        l1258 0106  
                                      l1194 0F67                                        l1292 0216  
                                      l1278 01C5                                        l1287 01E6  
                                      l1296 025E                                        l1717 0908  
                                      l5133 2713                                        l5117 2724  
                                      l5119 2725                                        l5143 26D0  
                                      l5129 270E                                        l7011 13F1  
                                      l5235 18CB                                        l5163 27CC  
                                      l4189 1ED0                                        l4701 1E34  
                                      l5173 27F9                                        l7021 142A  
                                      l7005 13C7                 __end_of_LCD_ToggleBacklight 2800  
                                      l7033 14D8                                        l5273 1D47  
                                      l5281 1D29                                        l4713 2665  
                                      l7107 0880                                        l5291 19A0  
                                      l5283 1D68                                        l7211 092E  
                                      l4715 2666                                        l5293 19AC  
                                      l5277 1D5F                                        l7213 0932  
                                      l7039 1505                                        l7311 1DA4  
                                      l7231 095F                                        l4727 198B  
                                      l7049 153F                                        l7321 1290  
                                      l7241 0978                                        l7217 093E  
                                      l6611 1C94                                        l6531 26B3  
                                      l4675 1DFE                                        l7227 0957  
                                      l6621 1914                                        l4693 1E23  
                                      l7325 12A8                                        l7309 1D7B  
                                      l7253 099B                                        l7245 0980  
                                      l7237 0970                                        l7501 076A  
                                      l5901 0808                                        l8061 16A6  
                                      l6623 1916                                        l6607 1C8E  
                                      l6615 1C65                                        l6463 1930  
                                      l6711 0163                                        l6703 013C  
                                      l4687 1E0B                                        l4679 1E05  
                                      l7327 12BA                                        l7319 127D  
                                      l7263 09DC                                        l7431 18A4  
                                      l8071 16FA                                        l8063 16AE  
                                      l6537 183D                                        l6641 10AE  
                                      l6801 02B6                                        l6705 014B  
                                      l4689 1E17                                        l4697 1E2C  
                                      l7601 1B72                                        l7169 1222  
                                      l4945 27A2                                        l4865 26C1  
                                      l7273 09FB                                        l7249 0991  
                                      l7513 07AE                                        l7505 077E  
                                      l8081 171F                                        l8065 16BC  
                                      l6627 191B                                        l6651 10EB  
                                      l6555 104F                                        l6803 02ED  
                                      l6811 031D                                        l6715 0168  
                                      l7099 0869                                        l7611 07D8  
                                      l7179 1256                                        l7291 15B3  
                                      l7267 09E8                                        l7443 061A  
                                      l8075 170B                                        l6493 1A82  
                                      l6565 107D                                        l6557 105D  
                                      l6581 1CFC                                        l6477 1950  
                                      l6813 0321                                        l6725 019F  
                                      l6709 0158                                        l6717 018C  
                                      l6661 00B7                                        l7189 0AAF  
                                      l7613 07DD                                        l7533 11CE  
                                      l7509 079A                                        l7461 0671  
                                      l6815 009B                                        l6831 1FC4  
                                      l7199 091D                                        l7447 062B  
                                      l7439 05F0                                 main@curTime 00D8  
                                      l6489 1A77                                        l6569 1088  
                                      l6585 1D14                                        l6681 010A  
                                      l6673 00D7                                        l6841 1FCC  
                                      l6825 1FB9                                        l7561 1181  
                                      l7617 07FD                                        l7625 1F5B  
                                      l7721 0D95                                        l7713 0D79  
                                      l7705 0D62                                        l7481 06FA  
                                      l7473 06AE                                        l6579 1CEE  
                                      l6739 01D4                                        l6667 00C1  
                                      l6843 1FD8                                        l6931 1762  
                                      l7571 11A3                                        l7563 1184  
                                      l7539 11F3                                        l7547 1203  
                                      l7715 0D7B                                        l7299 1555  
                                      l7459 0668                                        l7811 1E93  
                                      l6589 1D1F                                        l6765 0246  
                                      l6693 011F                                        l6669 00CA  
                                      l6853 1FF3                                        l7573 11A5  
                                      l7557 1173                                        l7661 0CE5  
                                      l7493 0735                                        l7485 0716  
                                      l7477 06D2                                        l7813 1EAF  
                                      l6919 1DD5                                        l6791 029A  
                                      l6783 0287                                        l6775 027A  
                                      l6767 0252                                        l6695 012D  
                                      l6943 1787                                        l7911 0E76  
                                      l7727 0DB4                                        l7671 0CFE  
                                      l7487 071E                                        l7807 1E82  
                                      l7833 1E44                                        l6777 027D  
                                      l6689 011D                                        l6857 1FFB  
                                      l6849 1FEA                                        l6961 17E8  
                                      l6937 1774                                        l7921 0EA4  
                                      l6881 1620                                        l7729 0DB7  
                                      l5897 0802                                        l7843 1E71  
                                      l6795 02A7                                        l6699 013A  
                                      l6963 17F0                                        l7923 0EA6  
                                      l6891 1640                                        l7595 1B4D  
                                      l7771 0E2D                                        l7763 0E0B  
                                      l7755 0DEF                                        l7747 0DD8  
                                      l7739 0DC6                                        l7683 0D36  
                                      l7499 0752                                        l6789 0296  
                                      l6965 1764                                        l7909 0E74  
                                      l6885 1624                                        l7757 0DF1  
                                      l7685 0D39                                        l7677 0D17  
                                      l7669 0CFC                                        l7839 1E69  
                                      l6799 02AF                                        l6967 17F6  
                                      l6959 17C7                                        l6983 1C48  
                                      l6887 1628                                        l6879 15F3  
                                      l7783 0E45                                        l7863 0BC2  
                                      l7961 0F2B                                        l7937 0EBA  
                                      l6977 1C34                                        l6889 1630  
                                      l7769 0E2A                                        l7697 0D51  
                                      l6995 1BE3                                        l7883 0C58  
                                      l7965 0F3F                                        l7885 0C8D  
                                      l7887 0C91                                        l7993 0FCC  
                                      l7977 0F63                                        l7897 0CB3  
                                      l7889 0C96                                        l7997 0FF5  
                                      l7989 0FC7                                        STR_1 042F  
                              __CFG_WDTE$ON 0000                                        STR_2 03C9  
                                      STR_3 042F                                        STR_4 0589  
                                      STR_5 0591                                        STR_6 054C  
                                      STR_7 057F                                        STR_8 03A8  
                                      STR_9 05AC                                        _LATA 010C  
                                      _LATB 010D                                        _LATC 010E  
                                      u5210 2698                                        u3635 1EDB  
                                      u4515 1E1D                                        u4525 1E24  
                                      u3735 1B7A                                        u8005 1FE3  
                                      u8015 1FEB                                        u4495 1E0E  
                                      u8040 15DB                                        u7305 1A83  
                                      u7330 1906                                        u7315 1A8A  
                                      u5660 1148                                        u8125 1DB8  
                                      u8205 179F                                        u8135 1DBF  
                                      u7415 1052                                        u8215 17A6  
                                      u7600 10BA                                        u8145 1DDC  
                                      u7505 1D0A                                        u8305 1BBD  
                                      u4865 1833                                        u7610 10CB  
                                      u7435 105E                                        u7515 1D15  
                                      u8235 17CE                                        u8155 173B  
                                      u7445 1072                                        u8405 14D6  
                                      u8325 13BB                                        u9125 11E0  
                                      u7375 1844                                        u7455 107E  
                                      u8095 164D                                        u9215 1193  
                                      u8415 14E7                                        u9135 11F1  
                                      u9240 2743                                        u7385 1849  
                                      u8425 14F3                                        u9250 2744  
                                      u8435 1503                                        u8355 13D4  
                                      u7580 10AA                                        u7485 1CF1  
                                      u7805 023F                                        u8365 13E0  
                                      u7590 10B9                                        u8295 1BB6  
                                      u9175 1160                                        u8375 13EF  
                                      u9095 11BB                                        u9440 0D11  
                                      u9185 1171                                        u8385 14C3  
                                      u9370 0CD6                                        u7845 026D  
                                      u8805 129A                                        u8725 09A2  
                                      u7775 020F                                        u7695 0133  
                                      u8815 12A6                                        u9560 0D8F  
                                      u8845 1AD8                                        u9670 0E05  
                                      u8855 1ADF                                        u7975 1FCF  
                                      u9905 0E97                                        u8785 126F  
                                      u9825 0BB2                                        u7995 1FD9  
                                      u9915 0EA2                                        u8795 127B  
                                      u9865 0E5B                                        u9970 0EFF  
                                      _TMR2 001A                                        u9875 0E64  
                                      u9980 0F0D                                        _TMR4 0415  
                                      u9885 0E72                                        u9895 0E8B  
             OW_reset_pulse@presence_detect 0074                                        _WPUA 020C  
                                      _WPUB 020D                                        _WPUC 020E  
                                      _WPUE 0210                                  _Alarm_Init 263B  
            ??__SettingsScreen_SetLongPress 007A                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                    ?_DS18B20_StartConversion 0070  
                          read_OW@read_data 0072                                        _main 1661  
                      __end_of_OW_read_byte 27CE                          __size_of_LCDGotoXY 0024  
                                      fsr0h 0005                                        fsr1h 0007  
                                      fsr0l 0004                                        indf0 0000  
                                      indf1 0001                                        fsr1l 0006  
                                      btemp 007E                     __size_of_OW_reset_pulse 002C  
                          __end_of_ACKAlarm 1A10          EEPROM_25AA040A_WriteBuffer@address 0056  
                             __CFG_BOREN$ON 0000                                        ltemp 007E  
                                      start 0034                                        ttemp 007E  
                                      wtemp 007E                      __end_of_SPI_Initialize 2616  
                         ___bmul@multiplier 0075                               __CFG_MCLRE$ON 0000  
                              ?_initDrivers 0070                               ?_drive_OW_low 0070  
                   __end_of_handleUARTInput 1EC6                 __end_of_LeaveSettingsScreen 12CC  
           EEPROM_25AA040A_WriteByte@opcode 005D                    __size_of__saveAlarmEvent 006B  
                             __CFG_PLLEN$ON 0000                               ?_EUSART_Write 0070  
            __size_of_OSCILLATOR_Initialize 0006        __end_of__EEPROM_25AA040A_WriteEnable 10ED  
     __size_of__EEPROM_25AA040A_WriteEnable 005C                __EEPROM_25AA040A_WriteEnable 1091  
                             _drive_OW_high 2600                ?_EEPROM_25AA040A_WriteBuffer 0056  
             __end_of_OSCILLATOR_Initialize 2610                                       ?_main 0070  
                           __end_of___awdiv 2000                                       STR_10 04D2  
                                     STR_11 05BD                                       STR_20 0497  
                                     STR_12 0402                                       STR_21 0578  
                                     STR_13 05B2                                       STR_30 05CD  
                                     STR_22 0575                                       STR_14 056B  
                                     STR_31 05CA                                       STR_15 051A  
                                     STR_23 0419                                       STR_40 05A4  
                                     STR_32 05C7                                       STR_24 05C2  
                                     STR_16 04FE                                       STR_41 05A4  
                                     STR_33 05CF                                       STR_17 0561  
                                     STR_25 050C                                       STR_50 05A0  
                                     STR_42 05CD                                       STR_34 05CF  
                                     STR_26 05B8                                       STR_18 0541  
                                     STR_35 05D3                                       STR_51 0557  
                                     STR_19 04E1                                       STR_43 04C3  
                                     STR_27 04B2                                       STR_36 05D3  
                                     STR_60 047F                                       STR_52 046D  
                                     STR_28 045A                                       STR_44 03E7  
                           __end_of___awmod 1E39                                       STR_29 05D3  
                                     STR_37 05D1                                       STR_45 04F0  
                                     STR_53 0445                                       STR_38 05D1  
                                     STR_46 05A0                                       STR_54 0381  
                                     STR_55 05B8                                       STR_39 05CD  
                                     STR_47 0490                                       STR_48 05A6  
                                     STR_56 0528                                       STR_49 0535  
                                     STR_57 04A1                                       STR_58 04DE  
                                     STR_59 0599                                LCDInit@style 0026  
                           __end_of___lldiv 1091                                       u10030 0F76  
                                     u10200 16CB                                       u10220 1704  
                                     u10070 0FC3                                       u10170 16A2  
                                     u10307 1998                                       u10317 1A15  
                                     u10190 16B8                                       u10407 17FA  
                                     u10327 1A1B                                       u10247 185B  
                                     u10337 1A24                                       u10257 1863  
                                     u10347 1A2E                                       u10267 186E  
                           ___awdiv@divisor 0072                                       u10357 1A34  
                                     u10277 1980                                       u10367 1F64  
                                     u10287 1988                             __end_of___llmod 1D28  
                                     u10377 26FA                                       u10297 1990  
                                     u10387 12D6                                       u10397 1780  
                                     _T2CON 001C                                       _LATC1 0871  
                                     _LATA5 0865                                       _LATB4 086C  
                                     _LATC5 0875                                       _T4CON 0417  
                                     i1l621 001D                                       i1l623 0027  
                                     i1l538 18C7                                       i1l627 002F  
                                     i1l619 0013                             ___awdiv@counter 0020  
                                     _PORTA 000C                                       _TRISA 008C  
                                     _TRISB 008D                                       _TRISC 008E  
                                     _TRISE 0090                        _ButtonUp_LongPressCB 0130  
                           _TMR4_Initialize 2680                         ___lmul@multiplicand 0076  
                          __end_of_TMR2_ISR 25F5                            __end_of_TMR4_ISR 27E7  
                               ?_TMR4_GetMs 0072                             _curUpFractLimit 00EB  
                                     _getch 1000                             __end_of_dpowers 0361  
                           __end_of_read_OW 2668                            _MenuScreen_Clear 1C26  
                           __end_of_isalpha 2715                             __end_of_isdigit 26B5  
                                _CurTempInt 00DE                                       _putch 25FB  
              EEPROM_25AA040A_WriteBuffer@i 0066                EEPROM_25AA040A_WriteBuffer@j 0064  
                             _lastAlarmTime 01A0                                main@prevTime 00D2  
                           __end_of_isspace 2727               ??__SettingsScreen_DownRelease 0038  
                   __end_of_PWM3_Initialize 2651                             __end_of_isupper 26C3  
                                     pclath 000A                                       ltemp0 007E  
                                     ltemp1 0082                                       ltemp2 0086  
                                     ltemp3 0080                         _printAllAlarmEvents 1542  
                      __end_of_OW_write_bit 199B                                       ttemp0 007E  
                                     ttemp1 0081                                       ttemp2 0084  
                                     ttemp3 0087                                       ttemp4 007F  
                                     status 0003                                       wtemp0 007E  
                                     wtemp1 0080                                       wtemp2 0082  
                                     wtemp3 0084                                       wtemp4 0086  
                                     wtemp5 0088                                       wtemp6 007F  
                           _TMR2_StartTimer 25F5                             __end_of_strncmp 1D6B  
                           __end_of_toupper 26D2                  __size_of_Config_SetUpLimit 007E  
             __size_of__MenuScreen_MoveDown 003A                             ?_SPI_Initialize 0070  
                   ?_SettingsScreen_Display 0070                             __initialization 0036  
    __SettingsScreen_UpRelease@wasLongPress 0037                            _ButtonUp_PressCB 0132  
                            ??_drive_OW_low 0072                                __end_of_main 1724  
                __end_of_MenuScreen_Display 0B4F                handleButtons@downInLongPress 0154  
               ??_EEPROM_25AA040A_WriteByte 0059            __end_of_EEPROM_25AA040A_ReadByte 1B08  
                               _OW_read_bit 1856                              ??_EUSART_Write 0072  
        __EEPROM_25AA040A_ReadStatus@regVal 0074                  __size_of_updateTemperature 0167  
                    printAllAlarmEvents@evt 005C                              ?_drive_OW_high 0070  
                   __end_of_TMR2_Initialize 265C                              __CFG_LPBOR$OFF 0000  
               ?_INTERRUPT_InterruptManager 0070                        ?_printAllAlarmEvents 0070  
                  ??__MenuScreen_SetRelease 003B                 __end_of_SettingsScreen_Init 1977  
                                    ??_main 00C7                  __ButtonDown_LastChangeTime 01CA  
              ?__EEPROM_25AA040A_ReadStatus 0070                           __end_of_LCDGotoXY 192F  
             ?__EEPROM_25AA040A_WriteEnable 0070       __EEPROM_25AA040A_WriteEnable@statusOk 0042  
             ??_EEPROM_25AA040A_WriteBuffer 005A                               LCDByte@isdata 0077  
                                 ??_LCDByte 0078                                   ??_LCDInit 0024  
                  __size_of_MenuScreen_Init 0046      EEPROM_25AA040A_ReadToBuffer@dataLength 0076  
                  __end_of_SPI_Exchange8bit 2631             __end_of_DS18B20_StartConversion 26A7  
                                    ?_getch 0070                            ___llmod@dividend 002A  
                          ___awdiv@dividend 0074                              __CFG_ZCDDIS$ON 0000  
                                    _ANSELA 018C                                      ?_putch 0070  
                                    _ANSELB 018D                                      _ANSELC 018E  
                                    _RC1REG 0199                                      _RC1STA 019D  
                                    i1l6061 1877                                 ?_Alarm_Init 0070  
                         _handleButtons$382 00B1                           _handleButtons$385 00B2  
                         _handleButtons$379 00B0                                      _OSCCON 0099  
                          _lastBuzStartTime 01DC                                      _TX1REG 019A  
                                    _TX1STA 019E                     SysTime_DiffMs@firstTime 0024  
                     _Config_GetBottomLimit 1AA0                                      _TRISA5 0465  
                                    _SSPBUF 0211                             _oldUpFractLimit 013C  
                           _TMR4_StartTimer 25F8                         _oldBottomFractLimit 0138  
            __end_of_SettingsScreen_Display 0906                     ??_Config_SetBottomLimit 006B  
                            __CFG_PWRTE$OFF 0000                       __end_of_FlashLed100ms 2703  
                            _LCDWriteString 1C65                            ??_processCommand 006D  
                                    ___bmul 0800             __MenuScreen_MoveUp@wasLongPress 0037  
                                    ___lmul 1A6E                 __size_of_PWM3_LoadDutyValue 001B  
                              ?_TMR4_GetSec 0072              __MenuScreen_MoveUp@oldSelected 003C  
                                    ___wmul 183A                                   ??___awdiv 0076  
                            __CFG_STVREN$ON 0000                                   ??___awmod 0076  
                       __size_of_TMR4_GetMs 0006                                   ??___lldiv 0020  
                                 ??___llmod 002E                            ?_handleUARTInput 0070  
                                    _curRow 00E3                         _EUSART_Transmit_ISR 18AC  
                     ??_printAllAlarmEvents 0056                 __size_of__ACKLastSavedEvent 003B  
                 handleButtons@prevSetState 016B                        __size_of_LCDBusyLoop 0048  
                                    _memset 279E                     __end_of_TMR4_Initialize 268D  
                 Config_SetUpLimit@intLimit 0067                            ___awdiv@quotient 0022  
                     _DS18B20_SetResolution 19C0                             ___awmod@divisor 0072  
                     processCommand@success 00B1                             ___awmod@counter 0077  
                                    _printf 0096                                      _strlen 199B  
                                    _strtol 0906                          _ButtonDown_PressCB 0126  
                              __pdataBIGRAM 2778                ??_DS18B20_ReadRawTemperature 0020  
                                 ??_read_OW 0072                    ??_DS18B20_ResetAndDetect 0075  
                                 ??_isalpha 0074                                   ??_isdigit 0072  
                                 ?_ACKAlarm 0070               ??__EEPROM_25AA040A_ReadStatus 0073  
                              LCDWriteInt@i 0030                                LCDWriteInt@j 002E  
                         ??__saveAlarmEvent 006C                                   ??_isspace 0072  
                            _SysTime_DiffMs 142D                                   ??_isupper 0072  
                           _prevUpReleaseCB 0146                              _SysTime_GetNow 18E8  
                         _ButtonSet_PressCB 012C          __size_of__SettingsScreen_UpRelease 005E  
                     __end_of_OW_write_byte 2739               __size_of_EEPROM_25AA040A_Dump 005F  
                   __end_of_TMR2_StartTimer 25F8                       __size_of_OW_read_byte 0018  
                 _EEPROM_25AA040A_WriteByte 1BB0                                   ??_strncmp 0076  
                                 ??_toupper 0072           EEPROM_25AA040A_WriteBuffer@opcode 005F  
                      ?_EUSART_Transmit_ISR 0070                            ?_PWM3_Initialize 0070  
                      __size_of_EUSART_Read 001E                           _SYSTEM_Initialize 2789  
                      __size_of_LCDWriteInt 0091                     __end_of__initialization 0092  
      __size_of_EEPROM_25AA040A_WriteBuffer 00DC                              _OW_reset_pulse 1A10  
                           _TempSensor_Init 188F                          ?_SYSTEM_Initialize 0070  
                    __end_of_LCDWriteString 1CA5                                   LCDByte@hn 0020  
                                 LCDByte@ln 0021                         ___bmul@multiplicand 0072  
         __AlarmEvent_SaveToAddress@address 0067                   __ButtonSet_LastChangeTime 01D0  
                            __pcstackCOMMON 0070                      updateTemperature@curMs 003A  
           EEPROM_25AA040A_ReadByte@address 0073                             ??_drive_OW_high 0072  
       __size_of_DS18B20_ReadRawTemperature 0035                                __pidataBANK1 0003  
                              __pidataBANK2 1800                                __pidataBANK5 1CA5  
                       ??_SYSTEM_Initialize 0073                                   ?_TMR2_ISR 0070  
                                 ?_TMR4_ISR 0070                               __end_of_getch 1003  
               __end_of_clearAllAlarmEvents 1DAF                        __size_of_initDrivers 0014  
                             __end_of_putch 2600                            ?_TMR2_Initialize 0070  
               __size_of__MenuScreen_MoveUp 0038                 ?__SettingsScreen_SetRelease 003A  
                     handleButtons@setState 00B5             __size_of__MenuScreen_SetRelease 0050  
                       __size_of_Alarm_Init 000B                                _OW_read_byte 27B6  
              __size_of_Config_InitRTValues 0015                    _EEPROM_25AA040A_ReadByte 1AD3  
                    __end_of_SysTime_DiffMs 14B7                       __end_of_handleButtons 0E4D  
                    __end_of_SysTime_GetNow 190B                              _OPTION_REGbits 0095  
                                ??_ACKAlarm 007A                 processCommand@curFractLimit 00B9  
                  Config_GetUpLimit@bufData 0029                               _oldUpIntLimit 013E  
                     __size_of_OW_write_bit 0024                                     ??_getch 0074  
                                _checkAlarm 0E4D                        __end_of_drive_OW_low 260A  
                   __end_of_TMR4_StartTimer 25FB                   __end_of_SYSTEM_Initialize 279E  
                     ??_EUSART_Transmit_ISR 0070                                     ??_putch 0074  
                         ??_MenuScreen_Init 0026                      __end_of_OW_reset_pulse 1A3C  
                     OW_write_bit@write_bit 0073                                  __pbssBANK1 00DE  
                                __pbssBANK2 0120                                  __pbssBANK3 01A0  
                                __pbssBANK4 0220      __EEPROM_25AA040A_WriteEnable@statusReg 0041  
                    ?_Config_GetBottomLimit 0027                    handleButtons@prevUpState 00EF  
                      __end_of_EUSART_Write 1953                 __size_of_EUSART_Receive_ISR 001D  
                           ?_LCDWriteString 0026                    Config_SetUpLimit@success 00A4  
                                __pmaintext 1661                                     ?___bmul 0072  
                                   ?___lmul 0072                                     ?___wmul 0020  
                           __CFG_PPS1WAY$ON 0000                    __end_of_MenuScreen_Clear 1C65  
                                ??_TMR2_ISR 0070                                  ??_TMR4_ISR 0070  
                                __pintentry 0004                      ?_DS18B20_SetResolution 0070  
          __size_of_DS18B20_StartConversion 000D                                     ?_memset 0072  
                            ___lmul@product 0020            __MenuScreen_MoveDown@oldSelected 003C  
                          ?_TMR4_Initialize 0070               Config_GetUpLimit@p_fractLimit 0027  
                         _prevDownReleaseCB 0140                                     ?_printf 0030  
                          handleButtons@now 00B6                                _OW_write_bit 1977  
                                   ?_strlen 0072                                     ?_strtol 0024  
                             _eusartRxCount 00E4                             ?_SysTime_DiffMs 0024  
                                   _LCDByte 1B75                                     _LCDInit 1F5E  
                           ?_SysTime_GetNow 0020             __size_of_DS18B20_ResetAndDetect 000D  
                ?__AlarmEvent_SaveToAddress 0067                                     _SP1BRGH 019C  
                                   _SP1BRGL 019B                                     _OSCSTAT 009A  
                              ??_TMR4_GetMs 0074                                     _OSCTUNE 0098  
                                   _PWM3DCH 0618                                     _PWM3DCL 0617  
                                   _PWM3CON 0619                                     _SSP1ADD 0212  
                                   _PPSLOCK 0E0F                    ??_ChangeToSettingsScreen 007A  
                   __end_of_TempSensor_Init 18AC                            ?_TMR2_StartTimer 0070  
                          MenuScreen_Init@i 0079                             ?_OW_reset_pulse 0070  
  __end_of__AlarmEvent_IncreaseSavedCounter 2760   __size_of__AlarmEvent_IncreaseSavedCounter 0014  
        ??__AlarmEvent_IncreaseSavedCounter 005F           ?__AlarmEvent_IncreaseSavedCounter 0070  
          __AlarmEvent_IncreaseSavedCounter 274C                            ??_SPI_Initialize 0072  
                    __MenuScreen_SetRelease 1F0E                            OW_read_byte@loop 0077  
              __size_of_LCD_ToggleBacklight 0019                             __size_of___bmul 0011  
                                   ___cgram 02A0                      processCommand@intLimit 00B3  
                                   ___awdiv 1FAE                             __size_of___lmul 0032  
                                   ___awmod 1DF4                                     ___lldiv 103E  
                           __size_of___wmul 001C                                     ___llmod 1CE5  
                              ?_OW_read_bit 0070                          __end_of_TMR4_GetMs 261C  
     EEPROM_25AA040A_WriteBuffer@dataLength 0059                            _prevSetReleaseCB 0144  
    __MenuScreen_SetRelease@isFromLongPress 003A  __SettingsScreen_SetRelease@isFromLongPress 003A  
                      __size_of_TMR4_GetSec 000A                                     _alarmOn 00E2  
                           __size_of_memset 0018                                     __ptext1 0B4F  
                                   __ptext2 0800                                     __ptext3 269A  
                                   __ptext4 1B08                                     __ptext5 27B6  
                                   __ptext6 1856                                     __ptext7 2760  
                                   __ptext8 188F                                     __ptext9 19C0  
        __end_of_DS18B20_ReadRawTemperature 1B3D                  _DS18B20_ReadRawTemperature 1B08  
               Config_SetUpLimit@fractLimit 0069                             __size_of_printf 02A3  
                          _BottomIntLimitRT 0162                             __size_of_strlen 0025  
                         __end_of_hexpowers 0381                             __size_of_strtol 00FE  
              __end_of__MenuScreen_MoveDown 0800                                     _dpowers 0339  
                     _OSCILLATOR_Initialize 260A                                     _menuDir 0153  
                                   _read_OW 265C                Config_GetBottomLimit@bufData 002B  
                                 _T2CONbits 001C                                     _isalpha 2703  
                                   _isdigit 26A7                    SysTime_DiffMs@secondTime 0026  
              __size_of_LeaveSettingsScreen 0067                            ___awmod@dividend 0074  
                                 _T4CONbits 0417                          _MenuScreen_Display 0A04  
                  ??_PIN_MANAGER_Initialize 0072                                     _isspace 2715  
                                   _isupper 26B5                 handleButtons@setInLongPress 0156  
         __end_of__AlarmEvent_SaveToAddress 26F2                                   _LCDGotoXY 190B  
                              _CurTempFract 00E0                           ?_SPI_Exchange8bit 0070  
           EEPROM_25AA040A_ReadToBuffer@dst 0075                                 ?_checkAlarm 0070  
                __size_of_SYSTEM_Initialize 0015                                     clrloop0 2675  
                          ?_TMR4_StartTimer 0070                                     _strncmp 1D28  
                                   _toupper 26C3                        end_of_initialization 0092  
                        ??_SPI_Exchange8bit 0072                        SPI_Exchange8bit@data 0072  
                              ??_Alarm_Init 0079                 Config_GetUpLimit@p_intLimit 002D  
                       ?_MenuScreen_Display 0070                           processCommand@buf 00BC  
      EEPROM_25AA040A_WriteBuffer@pageCount 0065                                     init_ram 2668  
                                   memset@c 0074                                     memset@n 0076  
                                   memset@p 0078                                     initloop 2669  
       __size_of__SettingsScreen_SetRelease 0013                           _EUSART_Initialize 1804  
                    _DS18B20_ResetAndDetect 268D                Config_SetBottomLimit@success 00A4  
                           ___lldiv@divisor 0072          EEPROM_25AA040A_ReadToBuffer@opcode 0024  
                           ___lldiv@counter 0025                          ?_EUSART_Initialize 0070  
          EEPROM_25AA040A_ReadToBuffer@cntr 0025              __size_of_Config_SetBottomLimit 008B  
             __end_of_Config_SetBottomLimit 1542                                     printf@c 0055  
                                   printf@f 0030                           _curBottomIntLimit 00E9  
                           __saveAlarmEvent 12CC                    MenuScreen_Clear@allSpace 01C1  
                              __pstringtext 0339                        ??_MenuScreen_Display 002D  
                                   strlen@s 0078                         ??_EUSART_Initialize 0072  
                                   strtol@a 002D                                     strtol@c 0032  
             Config_SetBottomLimit@intLimit 0067                                     strtol@s 0031  
                  __ButtonUp_LastChangeTime 01D6                  clearAllAlarmEvents@nullEvt 00A1  
                          __ButtonUpPressed 014C                          __end_of_Alarm_Init 2646  
         __MenuScreen_MoveDown@wasLongPress 0037                       __size_of_drive_OW_low 0005  
                    _ButtonDown_LongPressCB 0124                           LCDWriteString@msg 0026  
                        __PWM3_CurDutyValue 016C         EEPROM_25AA040A_ReadToBuffer@address 0073  
                                 _TRISAbits 008C                  Config_SetUpLimit@writeData 00A0  
                                 _TRISBbits 008D                       __size_of_EUSART_Write 0024  
                                ?_LCDGotoXY 0024         __end_of__SettingsScreen_DownRelease 11A8  
               __SettingsScreen_DownRelease 114A                __size_of_SettingsScreen_Init 0024  
                              strtol@endptr 0024                           __size_of_ACKAlarm 002B  
               __AlarmEvent_SaveToAddress@e 0069           DS18B20_ReadRawTemperature@lowbyte 0025  
           __size_of_ChangeToSettingsScreen 003B                            ?_TempSensor_Init 0070  
                                 _RXPPSbits 0E24                   __end_of_EUSART_Initialize 181F  
                                main@diffMs 00C8                                  LCDInit@__i 0027  
                               printf@width 0053                         _Config_InitRTValues 2774  
                                LCDGotoXY@x 0026                                  LCDGotoXY@y 0024  
                        _ButtonUp_ReleaseCB 0134                  __end_of_PWM3_LoadDutyValue 183A  
               __end_of_printAllAlarmEvents 15D0                        SysTime_GetNow@result 0026  
              __end_of_EEPROM_25AA040A_Dump 1265                               ??_LCDBusyLoop 0072  
                __end_of__ACKLastSavedEvent 1C26                  ??_EEPROM_25AA040A_ReadByte 0075  
                    handleButtons@downState 00B3                     _DS18B20_StartConversion 269A  
                       __Menu_MaxValidIndex 007A                                _drive_OW_low 2605  
                            __end_of___bmul 0811                         __size_of_checkAlarm 01B3  
                            __end_of___lmul 1AA0                               __pidataBIGRAM 1337  
                            __end_of___wmul 1856         __end_of_EEPROM_25AA040A_WriteBuffer 1800  
               _EEPROM_25AA040A_WriteBuffer 1724          __EEPROM_25AA040A_WriteEnable@start 0043  
                              _EUSART_Write 192F                           __size_of_TMR2_ISR 0003  
                         __size_of_TMR4_ISR 0019                      ?_OSCILLATOR_Initialize 0070  
                            __end_of_memset 27B6                             _MenuScreen_Init 1E39  
                      ?_Config_InitRTValues 0070        __end_of_EEPROM_25AA040A_ReadToBuffer 1DF4  
     __size_of_EEPROM_25AA040A_ReadToBuffer 0045                _EEPROM_25AA040A_ReadToBuffer 1DAF  
                            __end_of_printf 0339                              __end_of_strlen 19C0  
                            __end_of_strtol 0A04                    __size_of_handleUARTInput 0047  
                       start_initialization 0036              handleButtons@setLongPressFired 0157  
           __size_of_PIN_MANAGER_Initialize 005D                      __size_of_FlashLed100ms 0011  
              updateTemperature@TempStartMs 0148                     ??_Config_GetBottomLimit 0078  
                             ??_EUSART_Read 0072                          OW_read_byte@result 0076  
                             ??_LCDWriteInt 0027                 __ACKLastSavedEvent@newEvent 00A0  
                  DS18B20_SetResolution@res 0070                                 putch@txData 0074  
                          ??_LCDWriteString 0028                          _BottomFractLimitRT 0160  
                           ___llmod@divisor 0026                             ___llmod@counter 002F  
                   __end_of__saveAlarmEvent 1337                        OW_read_bit@read_data 0074  
                      __MenuScreen_MoveDown 07C6                    processCommand@fractLimit 00B5  
                   ??_DS18B20_SetResolution 0077                    __size_of_PWM3_Initialize 000B  
                      processCommand@intEnd 00BB                               ??_initDrivers 007A  
           DS18B20_SetResolution@configData 0077                                    ??___bmul 0073  
                      processCommand@saveOk 00B2                                    ??___lmul 007A  
                    _ChangeToSettingsScreen 1003                                    ??___wmul 0079  
                __end_of__MenuScreen_MoveUp 1B75                                 _CCPTMRSbits 029E  
                    __size_of_OW_write_byte 0012                            ??_SysTime_DiffMs 0028  
                         ?_MenuScreen_Clear 0070                                 __pdataBANK1 00EF  
                               __pdataBANK2 0168                                 __pdataBANK5 02A0  
                     __end_of_drive_OW_high 2605                            ??_SysTime_GetNow 0076  
                                  ??_memset 0078             Config_GetBottomLimit@p_intLimit 0027  
       __end_of__EEPROM_25AA040A_ReadStatus 26E2                 __EEPROM_25AA040A_ReadStatus 26D2  
                                  ??_printf 0040                          ??_MenuScreen_Clear 002A  
                     ??_Config_InitRTValues 0079                        __size_of_OW_read_bit 001C  
         Config_GetBottomLimit@p_fractLimit 0029                         __end_of_LCDBusyLoop 1F0E  
                                  ??_strlen 0074                                    ??_strtol 0028  
                   __size_of_processCommand 01F1                                    ?_LCDByte 0077  
                                  ?_LCDInit 0070                 __end_of_EUSART_Transmit_ISR 18CA  
                       _LCD_ToggleBacklight 27E7                                 __pbssCOMMON 007A  
            Config_SetBottomLimit@writeData 00A0                                    LCDByte@c 0022  
             ?_EEPROM_25AA040A_ReadToBuffer 0073                            ??_OW_reset_pulse 0073  
                                 ___latbits 0003                __size_of_clearAllAlarmEvents 0044  
               ??__AlarmEvent_SaveToAddress 006A                               __pcstackBANK0 0020  
                             __pcstackBANK1 00A0                       updateTemperature@data 003C  
                  __size_of_TMR2_Initialize 000B                                 ??_LCDGotoXY 0025  
                              _isalpha$1875 0074                       checkAlarm@belowBottom 00AF  
             DS18B20_ResetAndDetect@present 0076                     ?__MenuScreen_SetRelease 003A  
                              _isdigit$1778 0072                          _prevSetLongPressCB 0142  
                  ??_SettingsScreen_Display 0032                        handleButtons@upState 00B4  
                __end_of_EUSART_Receive_ISR 188F                  ?__SettingsScreen_UpRelease 0037  
               ChangeToSettingsScreen@param 0037                  __size_of_EUSART_Initialize 001B  
                          LCDWriteInt@F6391 01AC                         __end_of_EUSART_Read 18E8  
                       __end_of_LCDWriteInt 1661                                   _alarmAckd 014D  
                                 __pnvBANK2 016C                       ?__MenuScreen_MoveDown 0037  
                      ?_LCD_ToggleBacklight 0037                         _LeaveSettingsScreen 1265  
                 ??_DS18B20_StartConversion 0077                           checkAlarm@aboveUp 00B0  
                    __size_of_handleButtons 0197                      _PIN_MANAGER_Initialize 10ED  
                             _FlashLed100ms 26F2                        EUSART_Read@readValue 0073  
                   __end_of_MenuScreen_Init 1E7F                           checkAlarm@curTime 00B1  
                                  ?___awdiv 0072                                   __ptext101 27CE  
                                 __ptext102 25F2                                   __ptext103 18AC  
                                 __ptext104 1872                                    ?___awmod 0072  
                   LCD_ToggleBacklight@duty 0038                                    ?___lldiv 0072  
                                  ?___llmod 0026                                _eusartRxHead 014E  
                              _eusartTxHead 0150                                _eusartRxTail 014F  
                              _eusartTxTail 0151             Config_SetBottomLimit@fractLimit 0069  
              ??_INTERRUPT_InterruptManager 0071                         __end_of_initDrivers 2774  
               ?_DS18B20_ReadRawTemperature 0078                     _eusartTxBufferRemaining 016E  
          EEPROM_25AA040A_WriteByte@WREN_Ok 005E                         checkAlarm@buzOnTime 00A8  
                                  _BAUD1CON 019F                       _ButtonSet_LongPressCB 012A  
                                  ?_read_OW 0070                                    ?_isalpha 0070  
                                  ?_isdigit 0070                        ?_LeaveSettingsScreen 0070  
                                  _ACKAlarm 19E5                           _PWM3_GetDutyValue 261C  
                                  ?_isspace 0070              __end_of__MenuScreen_SetRelease 1F5E  
                                  ?_isupper 0070                             LCDBusyLoop@busy 0074  
                  __size_of_TMR4_Initialize 000D                             LCDBusyLoop@temp 0075  
                                 _hexpowers 0361                          ?_PWM3_GetDutyValue 0072  
                              ??_checkAlarm 00A0                        _EEPROM_25AA040A_Dump 1206  
                  _printAllAlarmEvents$1599 0059                              __size_of_getch 0003  
                 updateTemperature@RunCount 0168                               _OW_write_byte 2727  
                                  ?_strncmp 0072                                    ?_toupper 0070  
                            __size_of_putch 0005                           ??_handleUARTInput 006F  
            ??__EEPROM_25AA040A_WriteEnable 0040                              _eusartRxBuffer 0220  
                   ?_DS18B20_ResetAndDetect 0070                              _eusartTxBuffer 0230  
         __end_of__SettingsScreen_UpRelease 1206                         ??_PWM3_GetDutyValue 0074  
                            ___wmul@product 0024         EEPROM_25AA040A_WriteBuffer@pageAddr 0061  
          EEPROM_25AA040A_WriteByte@address 0056                                   clear_ram0 2674  
                     ??_LCD_ToggleBacklight 007A                                    _PIE1bits 0091  
                                  _PIE2bits 0092                            ?__saveAlarmEvent 0070  
             updateTemperature@TempStartSec 015C                                _UpIntLimitRT 00E5  
                  __size_of_TMR2_StartTimer 0003                   __AlarmEvent_SaveToAddress 26E2  
                            ?_FlashLed100ms 0070         __size_of_INTERRUPT_InterruptManager 0030  
                                  _PIR1bits 0011                                    _PIR2bits 0012  
                handleButtons@upInLongPress 0158                   __size_of_SPI_Exchange8bit 0009  
                       _SettingsScreen_Init 1953                               ??_TMR4_GetSec 0076  
                               _LCDBusyLoop 1EC6                                   main@F6692 01A6  
                                  _SSP1CON1 0215                                    _TMR2_ISR 25F2  
                                  _TMR4_ISR 27CE                                    _SSP1STAT 0214  
                          LCDWriteString@cc 0029                           MenuScreen_Clear@i 002B  
                        __end_of_checkAlarm 1000                           ??_PWM3_Initialize 0072  
                         ___wmul@multiplier 0020                   __end_of_PWM3_GetDutyValue 2622  
                     ??_LeaveSettingsScreen 007A                                  printf@flag 0052  
                                printf@prec 0047                               _handleButtons 0CB6  
                          __size_of_LCDByte 003B                            __size_of_LCDInit 0050  
                               _macro_delay 0152        __EEPROM_25AA040A_WriteEnable@curTime 0049  
                      ?_SettingsScreen_Init 0070                                _isspace$1878 0072  
                     ?_EEPROM_25AA040A_Dump 0070                              ?_OW_write_byte 0070  
                               _EUSART_Read 18CA                             _checkAlarm$1557 00AC  
                           _checkAlarm$1559 00AD                                 _LCDWriteInt 15D0  
                         ___lmul@multiplier 0072              __end_of_DS18B20_ResetAndDetect 269A  
                                  _MainMenu 2778              ??_EEPROM_25AA040A_ReadToBuffer 0020  
           __size_of_SettingsScreen_Display 00F5               handleButtons@upLongPressFired 0159  
                         ??_TMR2_Initialize 0072                   processCommand@curIntLimit 00B7  
                    ??__MenuScreen_MoveDown 0038                          __ButtonDownPressed 014A  
                               checkAlarm@e 00B7                    __size_of_TMR4_StartTimer 0003  
                      handleUARTInput@hadNL 00BD        __size_of__SettingsScreen_DownRelease 005E  
                         _SavedEventCounter 00E1                              _UpFractLimitRT 0166  
                               _initDrivers 2760                           _oldBottomIntLimit 013A  
                          ?_MenuScreen_Init 0070                     __size_of_SPI_Initialize 0006  
                   OW_write_byte@write_data 0075        updateTemperature@TempCheckInProgress 015B  
                   ??_OSCILLATOR_Initialize 0072                       _Config_SetBottomLimit 14B7  
                          __size_of___awdiv 0052                            __size_of___awmod 0045  
                          __size_of___lldiv 0053                            __size_of___llmod 0043  
               __size_of_MenuScreen_Display 014B                           LCDBusyLoop@status 0076  
                      updateTemperature@sec 003E                               ?_OW_read_byte 0070  
              ??__SettingsScreen_SetRelease 003B                              _processCommand 05D5  
                       __end_of_TMR4_GetSec 263B                          _PWM3_LoadDutyValue 181F  
             EEPROM_25AA040A_WriteByte@data 0058                              ?_handleButtons 0070  
                              _isupper$1881 0072        __end_of__SettingsScreen_SetLongPress 2628  
     __size_of__SettingsScreen_SetLongPress 0006                __SettingsScreen_SetLongPress 2622  
                        __ACKLastSavedEvent 1BEB                            __size_of_read_OW 000C  
                     ??_SettingsScreen_Init 007A                            __size_of_isalpha 0012  
                          __size_of_isdigit 000E                           _Config_GetUpLimit 1A3C  
                          __size_of_isspace 0012                                    __ptext10 2727  
                                  __ptext11 1977                                    __ptext20 0906  
                                  __ptext12 268D                                    __ptext21 26C3  
                                  __ptext13 1A10                                    __ptext30 1206  
                                  __ptext22 2715                                    __ptext14 265C  
                                  __ptext31 1000                                    __ptext23 2703  
                                  __ptext15 2605                                    __ptext40 1265  
                                  __ptext32 18CA                                    __ptext24 26B5  
                                  __ptext16 2600                                    __ptext41 13AF  
                                  __ptext33 0CB6                                    __ptext25 1D28  
                                  __ptext17 1F5E                                    __ptext50 1953  
                                  __ptext42 14B7                                    __ptext34 1B3D  
                                  __ptext26 199B                                    __ptext18 1E7F  
                                  __ptext51 0811                                    __ptext43 26F2  
                                  __ptext35 11A8                                    __ptext27 1542  
                                  __ptext19 05D5                                    __ptext60 1724  
                                  __ptext52 15D0                                    __ptext44 07C6  
                                  __ptext36 1F0E                                    __ptext28 1D6B  
                                  __ptext61 1FAE                                    __ptext53 0A04  
                                  __ptext45 114A                                    __ptext37 2739  
                                  __ptext29 279E                                    __ptext70 1091  
                                  __ptext62 274C                                    __ptext54 1DF4  
                                  __ptext46 1003                                    __ptext38 19E5  
                                  __ptext71 26D2                                    __ptext63 1BB0  
                                  __ptext55 1C26                                    __ptext47 27E7  
                                  __ptext39 2622                                    __ptext80 1EC6  
                                  __ptext72 18E8                                    __ptext64 0096  
                                  __ptext56 1BEB                                    __ptext48 181F  
                                  __ptext81 2789                                    __ptext73 2631  
                                  __ptext65 25FB                                    __ptext57 0E4D  
                                  __ptext49 261C                                    __ptext90 1804  
                                  __ptext82 2680                                    __ptext74 2616  
                                  __ptext66 192F                                    __ptext58 12CC  
                       ?_PWM3_LoadDutyValue 0072                                    __ptext91 1E39  
                                  __ptext83 25F8                                    __ptext75 142D  
                                  __ptext67 26A7                                    __ptext59 26E2  
                                  __ptext92 183A                                    __ptext84 2651  
                                  __ptext76 1A6E                                    __ptext68 1CE5  
                                  __ptext93 2774                                    __ptext85 25F5  
                                  __ptext77 1C65                                    __ptext69 103E  
                                  __ptext94 1A3C                                    __ptext86 2610  
                                  __ptext78 190B                                    __ptext95 1AA0  
                                  __ptext87 2646                                    __ptext79 1B75  
                                  __ptext96 1DAF                                    __ptext88 10ED  
                                  __ptext97 263B                                    __ptext89 260A  
                                  __ptext98 1AD3                                    __ptext99 2628  
                          __size_of_isupper 000E                                _SSP1CON1bits 0215  
                        ?_Config_GetUpLimit 0027                           main@lastAlarmTime 00CC  
            __size_of_Config_GetBottomLimit 0033               __end_of_Config_GetBottomLimit 1AD3  
                       ?__ACKLastSavedEvent 0070                            __size_of_strncmp 0043  
                          __size_of_toupper 000F              EEPROM_25AA040A_ReadByte@opcode 0020  
            EEPROM_25AA040A_ReadByte@result 0021                           ??_TMR4_Initialize 0072  
                             __size_of_main 00C3                               _SSPDATPPSbits 0E21  
                     _CurrentTemperatureRaw 0164                             ??_FlashLed100ms 0072  
                       _curBottomFractLimit 00E7                         ??_Config_GetUpLimit 0078  
                                strncmp@len 0074                     ?_ChangeToSettingsScreen 0037  
                  __size_of_TempSensor_Init 001D                                  _RB1PPSbits 0E99  
                                _RC0PPSbits 0EA0                         _clearAllAlarmEvents 1D6B  
                                _RC1STAbits 019D                        ??_PWM3_LoadDutyValue 0074  
                                _RC3PPSbits 0EA3          __size_of_EEPROM_25AA040A_WriteByte 003B  
            __size_of_DS18B20_SetResolution 0025                               _SSPCLKPPSbits 0E20  
                                  int$flags 007E               __end_of_DS18B20_SetResolution 19E5  
                ?_EEPROM_25AA040A_WriteByte 0056                                  strtol@base 0025  
                    _SettingsScreen_Display 0811                                  _RC6PPSbits 0EA6  
                                strtol@sign 002C                        _ButtonDown_ReleaseCB 0128  
                      ??__ACKLastSavedEvent 006C                           ??_TMR2_StartTimer 0072  
        __end_of_INTERRUPT_InterruptManager 0034                  _INTERRUPT_InterruptManager 0004  
                    __end_of_processCommand 07C6                                   printf@idx 0046  
                                 printf@len 004B                                   printf@val 004E  
                              _SSP1STATbits 0214                __size_of_printAllAlarmEvents 008E  
                            ??_OW_read_byte 0075                               ?_OW_write_bit 0070  
                              _TMR4_SecCntr 0120                 PIN_MANAGER_Initialize@state 0072  
                __size_of_PWM3_GetDutyValue 0006                   __end_of_Config_GetUpLimit 1A6E  
                                _INTCONbits 000B                           __saveAlarmEvent@e 006F  
                      ?_clearAllAlarmEvents 0070                      ??_EEPROM_25AA040A_Dump 0056  
                           ??_OW_write_byte 0074                          __MenuScreen_MoveUp 1B3D  
         __size_of_EEPROM_25AA040A_ReadByte 0035               ?__SettingsScreen_SetLongPress 0070  
                                  isalpha@c 0075                   ?_EEPROM_25AA040A_ReadByte 0073  
                                  isdigit@c 0073                                    memset@p1 0072  
                 __size_of_MenuScreen_Clear 003F                        TempSensor_Init@OW_Ok 0057  
                                  intlevel1 0000        __size_of__EEPROM_25AA040A_ReadStatus 0010  
                       ?__MenuScreen_MoveUp 0037                 ??__SettingsScreen_UpRelease 0038  
                            LCDWriteInt@val 0024                              LCDWriteInt@str 0029  
                                  isspace@c 0073                            ___lldiv@dividend 0076  
                   ?_PIN_MANAGER_Initialize 0070              __end_of_ChangeToSettingsScreen 103E  
                         __CFG_CLKOUTEN$OFF 0000                                 _PPSLOCKbits 0E0F  
                       _ButtonSet_ReleaseCB 012E                                    isupper@c 0073  
                                 strncmp@s1 0078                                   strncmp@s2 0072  
                          _SPI_Exchange8bit 2628                           _Config_SetUpLimit 13AF  
                checkAlarm@alarmJustChanged 00AE                 __end_of_Config_InitRTValues 2789  
                    ?_Config_SetBottomLimit 0067                                 _TMR4_GetSec 2631  
                                  printf@ap 004D                                    printf@cp 0049  
                        _EUSART_Receive_ISR 1872                               ??_OW_read_bit 0073  
                               _TMR4_MsCntr 0136                          ?_Config_SetUpLimit 0067  
         __end_of_EEPROM_25AA040A_WriteByte 1BEB                 PWM3_LoadDutyValue@dutyValue 0072  
                         ??_TMR4_StartTimer 0072                             ?_processCommand 0070  
                      ??__MenuScreen_MoveUp 0038                              ??_OW_write_bit 0072  
        __size_of__AlarmEvent_SaveToAddress 0010                             ??_handleButtons 006F  
                         _updateTemperature 0B4F            DS18B20_ReadRawTemperature@hibyte 0026  
                       ?_EUSART_Receive_ISR 0070                             _handleUARTInput 1E7F  
                         __ButtonSetPressed 014B                         ??_Config_SetUpLimit 006B  
          DS18B20_ReadRawTemperature@result 0023                            ___lldiv@quotient 0021  
                     ??_clearAllAlarmEvents 0067                          ?_updateTemperature 0070  
                     EEPROM_25AA040A_Dump@b 0058                       EEPROM_25AA040A_Dump@i 0059  
                                  strlen@cp 0079                                    toupper@c 0073  
                                _TMR4_GetMs 2616                                  _WDTCONbits 0097  
                       ??_updateTemperature 0032                          EUSART_Write@txData 0073  
              __size_of_EUSART_Transmit_ISR 001E              __end_of_PIN_MANAGER_Initialize 114A  
                    __size_of_drive_OW_high 0005                  handleButtons@prevDownState 016A  
                          handleUARTInput@c 00BE                            handleUARTInput@i 015A  
                      ??_EUSART_Receive_ISR 0070                   __end_of_Config_SetUpLimit 142D  
    EEPROM_25AA040A_WriteBuffer@lastPageLen 005E                             _PWM3_Initialize 2646  
                         OW_write_byte@loop 0076             handleButtons@downLongPressFired 0155  
                   __size_of_LCDWriteString 0040    __SettingsScreen_DownRelease@wasLongPress 0037  
